<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/oci8.xml, last change in rev 1.1 -->
<!-- last change to 'ocibindbyname' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.11 Maintainer: cucinato Status: ready -->
<!-- OLD-Revision: 1.45/EN.1.2 -->
  <refentry id="function.ocibindbyname">
   <refnamediv>
    <refname>ocibindbyname</refname>
    <refpurpose>
     Lega una variabile PHP ad un segnaposto Oracle
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>bool</type><methodname>ocibindbyname</methodname>
      <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>ph_name</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>&amp;variable</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>maxlength</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ocibindbyname</function> collega la variabile PHP 
     <parameter>variable</parameter> al segnaposto Oracle 
     <parameter>ph_name</parameter>.  L'utilizzo in modalità
     input o output sarà determinato a run-time, e lo spazio di memoria
     necessario sarà allocato. Il parametro
     <parameter>length</parameter> imposta la lunghezza massima
     del collegamento. Se si imposta <parameter>length</parameter> a -1
     <function>ocibindbyname</function> userà l'attuale lunghezza di
     <parameter>variable</parameter> per impostare la lunghezza massima.
    </para>
    <para>
     Se si deve collegare un Datatype astratto (LOB/ROWID/BFILE) 
     occorre innanzitutto allocarlo usando la funzione
     <function>ocinewdescriptor</function>. Il parametro
     <parameter>length</parameter> non è usato con i Datatypes astratti
     e dovrebbe essere impostato a -1. La veriabile <parameter>type</parameter> 
     informa oracle sul tipo di descrittore che si vuole usare. I valori possibili
     sono: OCI_B_FILE (Binary-File), OCI_B_CFILE
     (Character-File), OCI_B_CLOB (Character-LOB), OCI_B_BLOB
     (Binary-LOB) e OCI_B_ROWID (ROWID).
    </para>
    <para>
     <example>
      <title>esempio di <function>ocibindbyname</function></title>
      <programlisting role="php">
<![CDATA[
<?php
/* OCIBindByPos example thies at thieso dot net (980221)
  inserisce 3 tuple in emp, e usa ROWID per aggiornare le
  tuple subito dopo l'inserimento.
*/

$conn = OCILogon("scott", "tiger");

$stmt = OCIParse($conn, "insert into emp (empno, ename) " .
					   "values (:empno,:ename) " .
					   "returning ROWID into :rid");

$data = array(1111 => "Larry", 2222 => "Bill", 3333 => "Jim");

$rowid = OCINewDescriptor($conn, OCI_D_ROWID);

OCIBindByName($stmt, ":empno", $empno, 32);
OCIBindByName($stmt, ":ename", $ename, 32);
OCIBindByName($stmt, ":rid", $rowid, -1, OCI_B_ROWID);

$update = OCIParse($conn, "update emp set sal = :sal where ROWID = :rid");
OCIBindByName($update, ":rid", $rowid, -1, OCI_B_ROWID);
OCIBindByName($update, ":sal", $sal, 32);

$sal = 10000;

while (list($empno, $ename) = each($data)) {
	OCIExecute($stmt);
	OCIExecute($update);
} 

$rowid->free();

OCIFreeStatement($update);
OCIFreeStatement($stmt);

$stmt = OCIParse($conn, "select * from emp where empno in (1111,2222,3333)");
OCIExecute($stmt);
while (OCIFetchInto($stmt, &$arr, OCI_ASSOC)) {
	var_dump($arr);
}
OCIFreeStatement($stmt);

/* delete our "junk" from the emp table.... */
$stmt = OCIParse($conn, "delete from emp where empno in (1111,2222,3333)");
OCIExecute($stmt);
OCIFreeStatement($stmt);

OCILogoff($conn);
?>
]]>
      </programlisting>
     </example>
    </para>
    <warning>
     <para>
      Non è una buona idea utilizzare le magic quotes e
      <function>ocibindbyname</function> simultaneamente in quanto le virgolette
      non sono necessarie nelle variabili e qualsiasi virgoletta agiunta automaticamente
      verrà scritta nel database dal momento che
      <function>ocibindbyname</function> non è in grado di distinguere
      le virgolette aggiunte automaticamente da quelle intenzionali.
     </para> 
    </warning>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
