<?xml version="1.0" encoding="iso-8859-1"?>
<reference id="ref.oci8">
  <title>Funzioni Oracle 8</title>
  <titleabbrev>OCI8</titleabbrev>
  <partintro>
   <para>
    Queste funzioni permettono di accedere ai database Oracle8 e Oracle7. 
    Usano la Call-Interface di Oracle8 (OCI8). Occorre avere installate le librerie client
    di Oracle8  per utilizzare questa estensione.
   </para>
   <para>
    Questa estensione &egrave; pi&ugrave; flessibile della estensione standard di Oracle.
    Supporta il binding di variabili PHP locali e globali
    ai segnaposto Oracle, ha pieno supporto di LOB, FILE e ROWID 
    e permette di utilizzare variabili di definizione personalizzabili.
   </para>
   <para>
    Prima di usare questa estensione, occorre sicerarsi di aver impostato
    le variabili d'ambiente per l'utente Oracle, come pure
    per l'utente del server web. Le variabili che potrebbero necessitare l'impostazione sono
    le seguenti:
    <itemizedlist>
     <listitem>
      <simpara>
       ORACLE_HOME
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ORACLE_SID
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LD_PRELOAD
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LD_LIBRARY_PATH
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       NLS_LANG
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ORA_NLS33
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Dopo aver impostato le variabili d'ambiente per l'utente del server web,
    occorre sicerarsi di aver aggiunto anche l'utente stesso (nobody, www) al gruppo
    oracle.
   </para>
   <note>
    <title>Se il server web non parte o va in blocco</title>
    <para>
     Controllare che apache sia linkato con la libreria pthread: 
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
# ldd /www/apache/bin/httpd 
    libpthread.so.0 => /lib/libpthread.so.0 (0x4001c000)
    libm.so.6 => /lib/libm.so.6 (0x4002f000)
    libcrypt.so.1 => /lib/libcrypt.so.1 (0x4004c000)
    libdl.so.2 => /lib/libdl.so.2 (0x4007a000)
    libc.so.6 => /lib/libc.so.6 (0x4007e000)
    /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)
]]>
      </screen>
     </informalexample>
    </para>
    <para>
     Se la libpthread non compare nell'elenco, occorre reinstallare Apache:
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
# cd /usr/src/apache_1.3.xx
# make clean
# LIBS=-lpthread ./config.status
# make
# make install
]]>
      </screen>
     </informalexample>
    </para>
   </note>
   <para>
    <example>
     <title>Trucchi OCI</title>
     <programlisting role="php">
<![CDATA[
<?php
// by sergo@bacup.ru

// Usare l'opzione OCI_DEFAULT nel comando execute per ritardare l'esicuzione
OCIExecute($stmt, OCI_DEFAULT);

// per ricevere i dati utilizzare (dopo il fetch):

$result = OCIResult($stmt, $n);
if (is_object ($result)) $result = $result->load();

// come comandi  INSERT o UPDATE usare:

$sql = "insert into table (field1, field2) values (field1 = 'value',
 field2 = empty_clob()) returning field2 into :field2";
OCIParse($conn, $sql);
$clob = OCINewDescriptor($conn, OCI_D_LOB);
OCIBindByName ($stmt, ":field2", &$clob, -1, OCI_B_CLOB);
OCIExecute($stmt, OCI_DEFAULT);
$clob->save ("some text");
OCICommit($conn);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    You can easily access stored procedures in the same way as you
    would from the commands line.
    <example>
     <title>Using Stored Procedures</title>
     <programlisting role="php">
<![CDATA[
<?php
// by webmaster@remoterealty.com
$sth = OCIParse ( $dbh, "begin sp_newaddress( :address_id, '$firstname',
 '$lastname', '$company', '$address1', '$address2', '$city', '$state',
 '$postalcode', '$country', :error_code );end;" );

// Questo codice richiama la stord procedure sp_newaddress, dove :address_id è
// una variabile in/out e :error_code è una variabile out.
// Quindi si effettua il binding:

   OCIBindByName ( $sth, ":address_id", $addr_id, 10 );
   OCIBindByName ( $sth, ":error_code", $errorcode, 10 );
   OCIExecute ( $sth );

?>
]]>
     </programlisting>
    </example>
   </para>
  </partintro>

&reference.oci8.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

