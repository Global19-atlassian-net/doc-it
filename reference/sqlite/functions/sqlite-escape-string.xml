<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<refentry xml:id="function.sqlite-escape-string" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sqlite_escape_string</refname>
  <refpurpose>Inserisce il carattere di escape in stringa da usarsi in una query</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>sqlite_escape_string</methodname>
   <methodparam><type>string</type><parameter>item</parameter></methodparam>
  </methodsynopsis>
  <para>
   La funzione <function>sqlite_escape_string</function> inserisce i caratteri di escape nella stringa
   indicata da <parameter>item</parameter>, per poterla utilizzare 
   nelle istruzioni SQL. Questo processo include il raddoppio dell'apice
   singolo (<literal>'</literal>) e la verifica della presenza
   di dati binari non sicuri nella stringa.
  </para>
  <para>
   Se il parametro <parameter>item</parameter> contiene un <literal>NUL</literal>,
   oppure comincia con un carattere il cui numero ordinale è
   <literal>0x01</literal>, Il PHP applicherà lo schema di codifica binaria in modo da potere memorizzare
   e recuperare il dato in binario.
  </para>
  <para>
   Sebbene la codifica binaria permetta un sicuro inserimento dei dati, questo rende inutilizzabile
   i semplici confronti di testo e la clausola <literal>LIKE</literal> sulle
   colonne che contengono dati binari. In pratica, non
   dovrebbe essere un problema, se nello schema definito non si prevede
   l'uso di tali funzioni su colonne binarie (infatti è meglio memorizzati
   dati binari in altri modi, tipo in file a parte).
  </para>
  <warning>
   <simpara>
    La funzione <function>addslashes</function> <emphasis>NON</emphasis> dovrebbe essere utilizzata
    per inserire i caratteri di escape nelle query SQLite; questa porta a strani risultati
    quando si recuperano i dati.
   </simpara>
  </warning>
  <note>
   <simpara>
    Non utilizzare questa funzione per codificare i dati restituiti da funzioni UDF 
    create tramite <function>sqlite_create_function</function> o
    <function>sqlite_create_aggregate</function> - utilizzare invece
    <function>sqlite_udf_encode_binary</function>.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlite_udf_encode_binary</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
