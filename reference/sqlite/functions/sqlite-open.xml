<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<refentry xml:id="function.sqlite-open" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sqlite_open</refname>
  <refpurpose>Apre un database SQLite e crea il database se non esiste</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>sqlite_open</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">error_message</parameter></methodparam>
  </methodsynopsis>
  <para>Versione ad oggetti (costruttore):</para>
  <classsynopsis>
   <ooclass><classname>SQLiteDatabase</classname></ooclass>
   <constructorsynopsis>
    <methodname>__construct</methodname>
    <methodparam><type>string</type><parameter>filename</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter role="reference">error_message</parameter></methodparam>
   </constructorsynopsis>
  </classsynopsis>
  <para>
   Apre un database SQLite o lo crea se non esiste.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Nome del database SQLite.  Se il file non esiste, SQLite tenterà di 
       crearlo. Il PHP deve avere i permessi di scrittura sul file se si desidera inserire dei dati o modficare 
       lo schema del database, o creare il database
       se non esiste.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Specifica la modalità del file. E' inteso per essere utilizzato per l'apertura del file 
       in modalità read-only. Attualmente questo parametro viene ignorato da SQLite. Per default la
       modalità di apertura è il valore ottale <literal>0666</literal>, 
       ed è questa l'impostazione raccomandata.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error_message</parameter></term>
     <listitem>
      <para>
       Passato per riferimento, è impostato per  contenere un messaggio descrittivo di errore 
       nel caso non si riesca ad aprire il database a causa di un errore.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Restituisce una risorsa (database handle) se ha successo, oppure &false; se si verifica un errore.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Esempio di uso di <function>sqlite_open</function></title>
    <programlisting role="php">
<![CDATA[
<?php
if ($db = sqlite_open('mysqlitedb', 0666, $sqliteerror)) { 
    sqlite_query($db, 'CREATE TABLE foo (bar varchar(10))');
    sqlite_query($db, "INSERT INTO foo VALUES ('fnord')");
    $result = sqlite_query($db, 'select bar from foo');
    var_dump(sqlite_fetch_array($result)); 
} else {
    die($sqliteerror);
}
?>]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <simpara>
    Sui sistemi Unix, SQLite è sensibile agli script che utilizzano la chiamata di sistema fork(). 
    Se si sta utilizzando un tale script, si raccomanda di chiudere la connessione prima dell'esecuzione
    del fork, e quindi ri-aprirlo nel processo figlio/padre.
    Per maggiori informazioni su questo particolare vedere
    <link xlink:href="&url.sqlite.interface.c;">L'interfaccia C alla
    libreria SQLite</link> nella sezione intitolata
    <literal>Multi-Threading e SQLite</literal>. 
   </simpara>
  </tip>
  <tip>
   <simpara>
    Si raccomanda di non utilizzare database SQLite su partizioni montate via NFS.
    Poiché è noto che NFS non è affidabile con i lock,
    può capitare che si riesca neppure ad aprire il database, o, se ci si riesce,
    il comportamento dei lock può essere indefinito.
   </simpara>
  </tip>
  <note>
   <simpara>
     A partire dalla versione 2.8.2 della libreria SQLite, si può specificare
    <literal>:memory:</literal> come valore per il parametro <parameter>filename</parameter> in modo
    da creare database che risiedano soltanto in memoria.
    Principalmente questo è utile per le elaborazioni temporanee, poiché
    il database in memoria sarà distrutto non appena il processo termina. Può anche
    essere utilizzato in coppia con l'istruzione SQL <literal>ATTACH DATABASE</literal> 
    per caricare altri database in modo da potere muovere i dati tra di loro.
   </simpara>
  </note>
  <note>
   <simpara>
    SQLite sensibile alla &safemode; e a open_basedir.
   </simpara>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlite_popen</function></member>
    <member><function>sqlite_close</function></member>
    <member><function>sqlite_factory</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
