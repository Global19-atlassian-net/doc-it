<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.addcslashes" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>addcslashes</refname>
    <refpurpose>Esegue il quoting di una stringa con gli slash nello stile del C</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>addcslashes</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
      <methodparam><type>string</type><parameter>charlist</parameter></methodparam>
     </methodsynopsis>
    <para>
     La funzione restituisce una stringa con il carattere di backslash '\' anteposto
     ai caratteri che sono indicati nel parametro <parameter>charlist</parameter>. La funzione
     inserisce il carattere di escape nello stile C in caso di <literal>\n</literal>, <literal>\r</literal> ecc.,
     in caso di caratteri con codifica ASCII minore di 32 o superiore a 126
     si applica la conversione nella rappresentazione ottale.
    </para>
    <para>
     Occorre prestare attenzione se si imposta di anteporre il carattere di escape ai caratteri
     0, a, b, f, n, r, t e v. Questi saranno convertiti in \0, \a, \b, \f, \n, \r, \t 
     e \v. 
     In PHP \0 (NULL), \r (carriage return), \n (newline) e \t (tab) 
     sono sequenze di escape predefinite, anche in C tutte queste sono
     sequenze di escape predefinite.
    </para>
    <para>
     Valorizzare il parametro <parameter>charlist</parameter> con "\0..\37", 
     significa che si vuole inserire il carattere di escape davanti ai caratteri la cui codifica ASCII
     è comprese tra 0 e 31.
     <example>
      <title>Esempio di uso di <function>addcslashes</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$escaped = addcslashes($not_escaped, "\0..\37!@\177..\377");
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Quando si definisca una sequenza di caratteri nel parametro <parameter>charlist</parameter> 
     occorre essere consapevoli di quali caratteri sono compresi
     nel range.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
echo addcslashes('foo[ ]', 'A..z');
// output:  \f\o\o\[ \]
// Inserisce l'escape davanti a tutti i caratteri maiuscoli e minuscoli
// ... ma anche [\]^_` i tab, line
// feeds, carriage returns, etc.
?>
]]>
      </programlisting>
     </informalexample>
     Inoltre, se il primo carattere di un range ha una codifica ASCII maggiore del secondo,
     il range non sarà applicato.
     Soltanto il primo, i punti, e l'ultimo carattere avrà la sequenza di escape.
     Utilizzare la funzione <function>ord</function> per ottenere la
     codifica ASCII di un carattere.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
echo addcslashes("zoo['.']", 'z..A');
// output:  \zoo['\.']
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Vedere anche <function>stripcslashes</function>, 
     <function>stripslashes</function>, 
     <function>htmlspecialchars</function> e
     <function>quotemeta</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
