<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.15 Maintainer: darvina Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.echo" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <refnamediv>
    <refname>echo</refname>
    <refpurpose>Visualizza una o più stringhe</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>void</type><methodname>echo</methodname>
      <methodparam><type>string</type><parameter>arg1</parameter></methodparam>      
      <methodparam choice="opt"><type>string</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Visualizza tutti i parametri.
    </simpara>
    <para>
     <function>echo</function> in realtà non è una funzione (è un costrutto del
     linguaggio) pertanto non richiede l'uso di
     parametri. Infatti, se si vuole passare più di un parametro,
     non bisogna racchiuderli tra parentesi.
    </para>
    <para>
     <example>
      <title>Esempi di uso di <function>echo</function></title>
      <programlisting role="php">
<![CDATA[
<?php
echo "Hello World";

echo "This spans
multiple lines. The newlines will be 
output as well";

echo "This spans\nmultiple lines. The newlines will be\noutput as well.";

echo "Escaping characters is done \"Like this\".";

// Si possono utilizzare variabili all'interno dei parametri di echo
$foo = "foobar";
$bar = "barbaz";

echo "foo is $foo"; // foo is foobar

// Si possono utilizzare anche delle matrici
$bar = array("value" => "foo");

echo "this is {$bar['value']} !"; // this is foo !

// Utilizzando gli apici singoli viene visualizzato il nome della variabile, non il valore
echo 'foo is $foo'; // foo is $foo

// Se non vi sono altri caratteri, si può visualizzare soltanto il contenuto delle variabili
echo $foo;          // foobar
echo $foo,$bar;     // foobarbarbaz

// Alcuni programmatori preferiscono passare i parametri come sequenza di stringhe concatenate.
echo 'This ', 'string ', 'was ', 'made ', 'with multiple parameters.', chr(10);
echo 'This ' . 'string ' . 'was ' . 'made ' . 'with concatenation.' . "\n";

echo <<<END
Questo esempio utilizza la sintassi "here document"
per visualizzare più linee oltre al contenuto di $variable
Notare che il terminatore del testo richiede
anche il punto e virgola, senza alcun spazio aggiuntivo!
END;

// Poichè echo non è una funzione la seguente riga non è valida.
($some_var) ? echo 'true' : echo 'false';

// Tuttavia la seguente funziona
($some_var) ? print('true'): print('false'); // print è una funzione
echo $some_var ? 'true': 'false'; // altra versione dell'istruzione
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <function>echo</function> ha una sintassi alternativa abbreviata in cui si può
     fare seguire alle tag di apertura il segno di uguale. Questa sintassi abbreviata
     funziona solo se il parametro di configurazione <link
     linkend="ini.short-open-tag">short_open_tag</link> 
     è abilitato.
     <informalexample>
      <programlisting role="php">
<![CDATA[
I have <?=$foo?> foo.
]]>
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     Per una breve discussione sulle differenze tra 
     <function>print</function> e <function>echo</function>, vedere FAQTs
     Knowledge Base Article: <link xlink:href="&url.echo-print;">&url.echo-print;
     </link>
    </simpara>
    
    &note.language-construct;
    
    <simpara>
     Vedere anche
     <function>print</function>,
     <function>printf</function> e
     <function>flush</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
