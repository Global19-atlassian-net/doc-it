<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.bzip2">
  <title>Funzioni di compressione Bzip2</title>
  <titleabbrev>Bzip2</titleabbrev>

  <partintro>
   <para id="bzip2.intro">
    Le funzioni bzip2 sono utilizzate per leggere e scrivere in modo trasparente i file 
    compressi con bzip2 (.bz2).
   </para>
   
   <section id="bzip2.requirements">
    <title>Requisiti</title>
    <para>
     Questo modulo tuilizza le funzioni della libreria <ulink
     url="&url.bzip2;">bzip2</ulink> di Julian Seward
    </para>
   </section>

   <section id="bzip2.installation">
    <title>Installazione</title>
    <para>
     Il supporto di Bzip2 in PHP non &egrave; attivo per default. Si deve
     usare l'opzione di configurazione <link linkend="install.configure.with-bz2">--with-bz2</link>
     quando si compila PHP per sbilitare il supporto bzip2. Questo modulo
     richiede bzip2/libbzip2 con versione &gt;= 1.0.x.
    </para>
   </section>

   <section id="bzip2.configuration">
    <title>Configurazione di Runtime</title>
     &no.config;
   </section>

   <section id="bzip2.resources">
    <title>Tipi di risorse</title>
    <para>
     Questa estensione definisce un tipi di risorsa: un puntatore a file che identifica
     il file bz2 su cui lavorare.
    </para>
   </section>

   <section id="bzip2.constants">
    <title>Costanti predefinite</title>
    &no.constants;
   </section>

   <section id="bzip2-example">
    <title>Breve sorgente di esempio</title>
    <para>
     Questo esempio apre un file temporaneo e scrive una stringa di prova su
     di esso, quindi stampa il contenuto del file.
    </para>
    <example>
     <title>breve esempio di bzip2</title>
     <programlisting role="php">
<![CDATA[
<?php

$nomefile = "/tmp/filediprova.bz2";
$str = "Questa è una stringa di prova.\n";

// apre il file in lettura
$bz = bzopen($nomefile, "w");

// scrive la stringa sul file
bzwrite($bz, $str);

// chiude il file
bzclose($bz);

// apre il file in lettura
$bz = bzopen($nomefile, "r");

// legge 10 caratteri
print bzread($bz, 10);

// stampa fino alla fine del file (o fino ai prossimi 1024 caratteri) e chiude il file.
print bzread($bz);

bzclose($bz);

?>
]]>
     </programlisting>
    </example>
   </section>
  </partintro>

&reference.bzip2.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

