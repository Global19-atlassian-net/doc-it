<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.13 Maintainer: scaro  Status: wip -->
 <reference xml:id="ref.cpdf" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Funzioni ClibPDF</title>
  <titleabbrev>ClibPDF</titleabbrev>

  <partintro>
   <section xml:id="cpdf.intro">
   &reftitle.intro;
   <para>   
    ClibPDF permette di creare documenti PDF utilizzando PHP.  La funzionalit&agrave;
    e l' API di ClibPDF sono simili a quelle di <link linkend="ref.pdf">PDFlib</link>.
    Questa documentazione dovrebbe essere letta insieme al manuale di ClibPDF poichè
    entra maggiormente nel dettaglio della libreria.
   </para>
   <para>
    Molte funzioni nella ClibPDF nativa e nel modulo PHP , cos&igrave; come
    nella <link linkend="ref.pdf">PDFlib</link> hanno lo stesso nome.
    Tutte le funzioni ad eccezione di <function>cpdf_open</function> hanno
    l'identificatore del documento come loro primo parametro.
   </para>
   <para>
    Attualmente questo identificatore non &egrave; usato internamente dato che ClibPDF
    non supporta la creazione di svariati documenti PDF contemporaneamente.
    Attualmente non bisognerebbe provare a farlo, dato che i risultati sono imprevedibili.
    Non &egrave; possibile controllare quali siano le conseguenze in un ambiente multi
    processo. Secondo l'autore di ClibPDF questo cambier&agrave; in una delle
    prossime release (la versione corrente quando questo &egrave; stato scritto &egrave; la 1.10).
    Se si ha bisogno di questa funzionalit&agrave; utilizzare il modulo pdflib.
   </para>
   <para>
    Un'interessante caratteristica di ClibPDF (e <link
    linkend="ref.pdf">PDFlib</link>) &egrave; l'abilit&agrave; di creare il
    documento PDF completamente in memoria senza utilizzare file temporanei.
    Inoltre fornisce l'abilit&agrave; di passare le coordinare in un'unit&agrave;
    di lunghezza predefinita. (Questa caratteristica puo'essere simulata da
    <function>pdf_translate</function> quando si utilizzano le funzioni <link
    linkend="ref.pdf">PDFlib</link>.)
   </para>
   <para>
    Un'altra interessante caratteristica di ClibPDF &egrave; il fatto che ogni pagina pu&ograve; essere
    modificata in qualsiasi momento anche se &egrave; gi&agrave; stata aperta una nuova pagina. La funzione
    <function>cpdf_set_current_page</function> permette di lasciare la pagina
    corrente e modificare un'altra pagina.
   </para>
   <para>
    La maggioranza delle funzioni sono abbastanza facili da usare. La parte pi&ugrave; difficile
    &egrave; probabilmente creare un simplice documento PDF. L'esempio
    seguente dovrebbe essere utile per cominciare. Crea un documento
    con una pagina. La pagina contiene il testo "Times-Roman" con un
    font di 30pt. Il testo &egrave; sottolineato.
   </para>
   <note>
    <simpara>
     Se si è interessati ad alternativi generatori PDF free non utilizzare le librerie
     PDF esterne, vedere <link linkend="faq.using.freepdf">questa FAQ</link> per dettagli.
    </simpara>
   </note>
  </section>

  <section xml:id="cpdf.requirements">
   &reftitle.required;
   <para>
    Per potere utilizzare le funzioni ClibPDF occorre installare il modulo ClibPDF.
    Questo è disponibile in <link xlink:href="&url.fastio;">
    FastIO</link>, ma richiede l'acquisto di una licenza per uso commerciale.
    Il PHP richiede la libreria cpdflib &gt;= 2.
   </para>
  </section>
 
   &reference.cpdf.configure;
 
   <section xml:id="cpdf.configuration">
    &reftitle.runtime;
    &no.config;
   </section>
 
   &reference.cpdf.constants;
 
   <section xml:id="cpdf.examples">
    &reftitle.examples;
    <example>
     <title>Semplice esempio ClibPDF</title>
     <programlisting>
<![CDATA[
<?php
$cpdf = cpdf_open(0);
cpdf_page_init($cpdf, 1, 0, 595, 842, 1.0);
cpdf_add_outline($cpdf, 0, 0, 0, 1, "Page 1");
cpdf_begin_text($cpdf);
cpdf_set_font($cpdf, "Times-Roman", 30, "WinAnsiEncoding");
cpdf_set_text_rendering($cpdf, 1);
cpdf_text($cpdf, "Times Roman outlined", 50, 50);
cpdf_end_text($cpdf);
cpdf_moveto($cpdf, 50, 50);
cpdf_lineto($cpdf, 740, 330);
cpdf_stroke($cpdf);
cpdf_finalize_page($cpdf, 1);
cpdf_finalize($cpdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($cpdf);
cpdf_close($cpdf);
?>
]]>
     </programlisting>
    </example>
    <para>
     La distribuzione pdflib contiene un esempio pi&ugrave; complicato che crea una
     serie di pagine con un orologio analogico. Di seguito si trova questo esempio convertito
     in PHP utilizzando l'estensione ClibPDF:
    </para>
    <example>
     <title>esempio pdfclock dalla distribuzione pdflib 2.0</title>
     <programlisting>
<![CDATA[
<?php
$radius = 200;
$margin = 20;
$pagecount = 40;

$pdf = cpdf_open(0);
cpdf_set_creator($pdf, "pdf_clock.php");
cpdf_set_title($pdf, "Analog Clock");

while ($pagecount-- > 0) {
  cpdf_page_init($pdf, $pagecount+1, 0, 2 * ($radius + $margin), 2 * ($radius + $margin), 1.0);

  cpdf_set_page_animation($pdf, 4, 0.5, 0, 0, 0);  /* wipe */

  cpdf_translate($pdf, $radius + $margin, $radius + $margin);
  cpdf_save($pdf);
  cpdf_setrgbcolor($pdf, 0.0, 0.0, 1.0);

  /* linee dei minuti */
  cpdf_setlinewidth($pdf, 2.0);
  for ($alpha = 0; $alpha < 360; $alpha += 6) {
    cpdf_rotate($pdf, 6.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin/3, 0.0);
    cpdf_stroke($pdf);
  }

  cpdf_restore($pdf);
  cpdf_save($pdf);

  /* linee dei 5 minuti */
  cpdf_setlinewidth($pdf, 3.0);
  for ($alpha = 0; $alpha < 360; $alpha += 30) {
    cpdf_rotate($pdf, 30.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin, 0.0);
    cpdf_stroke($pdf);
  }

  $ltime = getdate();

  /* disegna la lancetta delle ore */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['minutes']/60.0) + $ltime['hours'] - 3.0) * 30.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius/2, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* disegna la lancetta dei minuti */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['seconds']/60.0) + $ltime['minutes'] - 15.0) * 6.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius * 0.8, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* disegna la lancetta dei secondi */
  cpdf_setrgbcolor($pdf, 1.0, 0.0, 0.0);
  cpdf_setlinewidth($pdf, 2);
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['seconds'] - 15.0) * 6.0));
  cpdf_moveto($pdf, -$radius/5, 0.0);
  cpdf_lineto($pdf, $radius, 0.0);
  cpdf_stroke($pdf);
  cpdf_restore($pdf);

  /* disegna un piccolo cerchio al centro */
  cpdf_circle($pdf, 0, 0, $radius/30);
  cpdf_fill($pdf);

  cpdf_restore($pdf);

  cpdf_finalize_page($pdf, $pagecount+1);
}

cpdf_finalize($pdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($pdf);
cpdf_close($pdf);
?>
]]>
     </programlisting>
    </example>
   </section>
   <section xml:id="cpdf.seealso">
    &reftitle.seealso;
    <para>
     Vedere anche la documentazione del modulo
     <link linkend="ref.pdf">PDFlib</link>.
    </para>
   </section>
  </partintro>
&reference.cpdf.functions;
 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
