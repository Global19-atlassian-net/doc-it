<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/array.xml, last change in rev 1.11 -->
<!-- last change to 'array-keys' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.4 Maintainer: cucinato Status: ready -->
<!-- OLD-Revision: 1.173/EN.1.2 -->
  <refentry id="function.array-keys">
   <refnamediv>
    <refname>array_keys</refname>
    <refpurpose>Restituisce tutte le chiavi di un array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>array_keys</methodname>
      <methodparam><type>array</type><parameter>input</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>
        search_value
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_keys</function> rstituisce le chiavi, numeriche e
     stringa, dell'array <parameter>input</parameter>.
    </para>
    <para>
     Se il parametro opzionale  <parameter>search_value</parameter> &egrave; specificato,
     solo le chiavi con che corrispondono a quel valore vengono restituite. Altrimenti, vengono restituite tutte
     le chiavi dell'array <parameter>input</parameter>.
    </para>
    <para>
     <example>
      <title>Esempio di <function>array_keys</function></title>
      <programlisting role="php">
<![CDATA[
$array = array (0 => 100, "colore" => "rosso");
print_r(array_keys ($array))

$array = array ("blu", "rosso", "verde", "blu", "blu");
print_r(array_keys ($array, "blu"));

$array = array ("colore" => array("blu", "rosso", "verde"), "misura" =&gt; array("piccola", "media", "grande"));
print_r(array_keys ($array));
]]>
      </programlisting>
      <para>
       Il risultato di questo programma sarà:
       <screen>
<![CDATA[
Array
(
    [0] => 0
    [1] => colore
)
Array
(
    [0] => 0
    [1] => 3
    [2] => 4
)
Array
(
    [0] => colore
    [1] => misura
)
]]>
       </screen>
      </para>
     </example>
    </para>
    <note>
     <para>
      Questa funzione &egrave; stata aggiunta in PHP 4, qui sotto c'&egrave; una implementazione per
      coloro che usano ancora PHP 3.
      <example>
       <title>
    Implementazione di <function>array_keys</function> per utenti
    PHP 3
       </title>
       <programlisting role="php">
<![CDATA[
function array_keys ($arr, $term="") {
    $t = array();
    while (list($k,$v) = each($arr)) {
        if ($term && $v != $term) {
            continue;
        }
        $t[] = $k;
    }
    return $t;
}
]]>
       </programlisting>
      </example>
     </para>
    </note>
    <para>
     Vedere anche <function>array_values</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
