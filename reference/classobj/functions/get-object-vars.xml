<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/classobj.xml, last change in rev 1.3 -->
<!-- last change to 'get-object-vars' in en/ tree in rev 1.1 -->
<!-- EN-Revision: 1.4 Maintainer: darvina Status: ready -->
<!-- OLD-Revision: 1.38/EN.1.1 -->
  <refentry id="function.get-object-vars">
   <refnamediv>
    <refname>get_object_vars</refname>
    <refpurpose>Restituisce un array associativo con le proprietà dell'oggetto</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>get_object_vars</methodname>
      <methodparam><type>object</type><parameter>oggetto</parameter></methodparam>
     </methodsynopsis>
    <para>
     Questa funzione restituisce un array associativo con le proprietà
     definite nell'oggetto passato nel parametro <parameter>oggetto
     </parameter>. 
    </para>
    <note>
     <para>
      Nelle versioni di PHP precedenti la 4.2.0, le eventuali variabili dichiarate in
      nella classe <parameter>oggetto</parameter> ma non ancora valorizzate non saranno
      restituite nell'array. Nelle versioni successive alla 4.2.0, saranno restituite
      nell'array con valore <constant>NULL</constant>.
     </para>
    </note>
    <para>
     <example>
      <title>Utilizzo di <function>get_object_vars</function></title>
      <programlisting role="php">
<![CDATA[
<?php
class Point2D {
    var $x, $y;
    var $etichetta;

    function Point2D($x, $y) {
        $this->x = $x;
        $this->y = $y;
    }

    function setetichetta($etichetta) {
        $this->etichetta = $etichetta;
    }

    function getPoint() {
        return array("x" => $this->x,
                     "y" => $this->y,
                     "etichetta" => $this->etichetta);
    }
}

// "$etichetta" è dichiarata ma non definita
$p1 = new Point2D(1.233, 3.445);
print_r(get_object_vars($p1));

$p1->setetichetta("point #1");
print_r(get_object_vars($p1));

?>
]]>
      </programlisting>
     <para>
      L'output del programma precedente sarà:
     </para>
     <screen> 
<![CDATA[ 
Array 
( 
     [x] => 1.233 
     [y] => 3.445 
     [label] =>
) 
    
Array 
( 
     [x] => 1.233 
     [y] => 3.445 
     [label] => point #1 
) 
]]> 
      </screen>     
     </example> 
    </para>
    <simpara>
     Vedere anche <function>get_class_methods</function> e
     <function>get_class_vars</function>
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
