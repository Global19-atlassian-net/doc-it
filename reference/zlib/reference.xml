<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.14 Maintainer: cucinato Status: ready -->
 <reference xml:id="ref.zlib" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Funzioni di compressione Zlib</title>
  <titleabbrev>Zlib</titleabbrev>

  <partintro>
   <section xml:id="zlib.intro">
    &reftitle.intro;
    <para>
     questo modulo permette di leggere e scrivere in modo trasparente
     i file compressi con gzip (.gz), attraverso versioni di molte delle
     funzioni del <link linkend="ref.filesystem">filesystem</link>
     in grado di operare su file compressi con gzip (ed anche su file non compressi,
     ma non con i socket).
    </para>
    <note>
     <para>
      La versione 4.0.4 ha introdotto un wrapper di fopen per i file .gz, che
      permette di usare una speciale URL 'zlib:' per accedere ai file compressi
      utilizzando le normali funzioni di accesso ai file [ f*() ], semplicemente
      anteponendo al nome del file o percorso il prefisso 'zlib:' nella chiamata a
      <function>fopen</function>.
     </para>
     <para>
      Nella versione 4.3.0, questo prefisso è stato cambiato in 'zlib://'
      per evitare ambiguità con i nomi di file contenenti il carattere ':'.
     </para>
     <para>
      Questa funzionalità richiedere una libreria di runtime C che fornisca la
      funzione <literal>fopencookie()</literal>. Al momento sembra che
      la GNU libc sia l'unica libreria a fornire
      questa funzionalità.
     </para>
    </note>
   </section>

   <section xml:id="zlib.requirements">
    &reftitle.required;
    <para>
     Questo modulo usa le funzioni di <link xlink:href="&url.zlib;">zlib</link>
     di Jean-loup Gailly e Mark Adler. Si deve utilizzare una
     versione &gt;= 1.0.9 con questo modulo.
    </para>
   </section>

   &reference.zlib.configure;

   &reference.zlib.ini;

   <section xml:id="zlib.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   &reference.zlib.constants;

   <section xml:id="zlib.examples">
    &reftitle.examples;
    <para>
     Questo esempio apre un file temporaneo e vi scrive una stringa di prova,
     quindi stampa il contenuto del file due volte.
    </para>
    <example>
     <title>Esempio di Zlib</title>
     <programlisting role="php">
<![CDATA[
<?php

$filename = tempnam('/tmp', 'zlibtest') . '.gz';
echo "<html>\n<head></head>\n<body>\n<pre>\n";
$s = "Only a test, test, test, test, test, test, test, test!\n";

// apre il file in scrittura con la massima compressione
$zp = gzopen($filename, "w9");

// scrive la stringa sul file
gzwrite($zp, $s);

// chiude il file
gzclose($zp);

// apre il file in lettura
$zp = gzopen($filename, "r");

// legge 3 caratteri
echo gzread($zp, 3);

// stampa fino alla fine del file e lo chiude
gzpassthru($zp);
gzclose($zp);

echo "\n";

// apre il file e stampa il contenuto (la seconda volta)
if (readgzfile($filename) != strlen($s)) {
        echo "Errore nelle funzioni zlib!";
}
unlink($filename);
echo "</pre>\n</body>\n</html>\n";

?>
]]>
     </programlisting>
    </example>
   </section>
  </partintro>

&reference.zlib.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

