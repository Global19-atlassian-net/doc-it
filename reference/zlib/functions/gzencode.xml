<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.4 Maintainer: cucinato Status: ready -->
<!-- splitted from ./en/functions/zlib.xml, last change in rev 1.4 -->
  <refentry xml:id="function.gzencode" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <refnamediv>
    <refname>gzencode</refname>
    <refpurpose>Crea una stringa compressa con gzip</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>gzencode</methodname>
      <methodparam><type>string</type><parameter>dati</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>livello</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>encoding_mode</parameter></methodparam>
     </methodsynopsis>
    <para>   
     Questa funzione restituisce una versione compressa di
     <parameter>dati</parameter> compatibile con l'output del
     programma <command>gzip</command>, oppure &false; se si verifica un
     errore. Il parametro opzionale <parameter>livello</parameter>
     varia da 0 (nessuna compressione) a 9 (compressione
     massima), se il livello di compressione non viene specificato verrà
     adottato quello di default della libreria zlib.
    </para>
    <para>
     Si può anche impostare <constant>FORCE_GZIP</constant> (il default)
     o <constant>FORCE_DEFLATE</constant> come terzo parametro opzionale
     <parameter>encoding_mode</parameter>. Se si utilizza
     <constant>FORCE_DEFLATE</constant>, si ottiene una stringa compressa
     col DEFLATE standard di zlib (comprendente gli header zlib) dopo l'header del file gzip
     ma senza il checksum crc32 finale.
     <note>
      <para>
       <parameter>livello</parameter> è stato aggiunto nel PHP 4.2, prima di
       questa versione <function>gzencode</function> aveva solo
       i parametri <parameter>dati</parameter> e (opzionale)
       <parameter>encoding_mode</parameter>.
      </para> 
     </note>
    </para>
    <para>
     I dati risultanti contengono gli header e la struttura adeguati
     per creare un file .gz standard, ad esempio:
     <example>
      <title>Creare un file gzip</title>
      <programlisting role="php">
<![CDATA[
<?php
    $data = implode("", file("bigfile.txt"));
    $gzdata = gzencode($data, 9);
    $fp = fopen("bigfile.txt.gz", "w");
    fwrite($fp, $gzdata);
    fclose($fp);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Per ulteriori informazioni sul formato dei file GZIP, consultare il documento:
     <link xlink:href="&url.rfc;1952">GZIP file format specification
     version 4.3</link> (RFC 1952).
    </para>
    <para>
     Vedere anche <function>gzcompress</function>.
     <function>gzuncompress</function>,
     <function>gzdeflate</function>,
     <function>gzinflate</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
