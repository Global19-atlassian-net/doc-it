<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.9 Maintainer: darvina Status: ready -->
  <refentry id="function.import-request-variables">
   <refnamediv>
    <refname>import_request_variables</refname>
    <refpurpose>Imposta la visibiltà a globale per le variabili GET/POST/Cookie</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>bool</type><methodname>import_request_variables</methodname>
      <methodparam><type>string</type><parameter>tipo</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>prefisso</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Imposta la visibilità delle variabili GET/POST/Cookie a globale.
     Ciò risulta utile nei casi in cui si è disabilitato
     <link linkend="ini.register-globals">register_globals</link>,
     ma si vuole avere per qualche variabile una visibilità globale.
    </simpara>
    <simpara>
     Tramite il parametro <parameter>tipo</parameter>, si può 
     specificare quale variabile rendere visibile. I valori ammessi sono
     i caratteri 'G', 'P' e 'C' rispettivamente per GET, POST e
     Cookie. Questi caratteri non distinguono tra maiuscole e minuscole
     pertanto si può usare qualsiasi combinazione di 'g', 'p' e 'c'.
     POST include le informazioni dei file caricati.
     Occorre prestare attenzione all'ordine delle lettere, ad esempio usando "gp",
     le variabili POST sovrascrivono le variabili GET con il medesimo
     nome. Qualsiasi altra lettera al di fuori di GPC sarà scartata.
    </simpara>  
    <simpara>  
     Il parametro <parameter>prefisso</parameter> viene utilizzato come prefisso
     nel nome della variabile, ovvero viene anteposto ai nomi di tutte le variabili portate 
     a visibilità globale. Quindi, se si ha una variabile GET chiamata "userid", e si è passato
     il prefisso "pref_", si otterrà una variabile globale chiamata
     $pref_userid.  
    </simpara>  
    <simpara>  
     Se si è interessati a rendere visibili altre
     variabili, come ad esempio SERVER, si consideri l'utilizzo della
     funzione <function>extract</function>.   
    </simpara>
    <note>
     <para>
      Sebbene il parametro <parameter>prefisso</parameter> sia
      opzionale, si ottiene un errore di livello <link linkend="internal.e-notice">E_NOTICE</link> 
      se non si specifica il prefisso, o si indica una stringa vuota.
      Ciò può comportare dei rischi di sicurezza. Gli errori
      di livello "notice" non sono visualizzati con il parametro 
      <link linkend="ini.error-reporting">error reporting</link> 
      impostato al valore standard.
     </para>
    </note>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
// Questo esempio rende visibili le variabili GET e POST 
// con il prefisso "rvar_" 
import_request_variables("gP", "rvar_");

print $rvar_foo;
?>
]]>
     </programlisting>
    </informalexample>
    <simpara>
     Vedere anche <link linkend="reserved.variables.request">$_REQUEST</link>,
     <link linkend="ini.register-globals">register_globals</link>,
     <link linkend="language.variables.predefined">Variabili predefinite</link>
     e <function>extract</function>. 
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
