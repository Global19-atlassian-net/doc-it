<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.14 Maintainer: darvina Status: ready -->
  <refentry id="function.isset">
   <refnamediv>
    <refname>isset</refname>
    <refpurpose>Verifica se una variabile è definita</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>bool</type><methodname>isset</methodname>
      <methodparam><type>mixed</type><parameter>variabile</parameter></methodparam>
      <methodparam choice="opt"><parameter>...</parameter></methodparam> 
     </methodsynopsis>
    
    <simpara>
     Restituisce &true; se la <parameter>variabile</parameter> esiste;
     &false; in caso contrario.
    </simpara>
    <para>
     Se una variabile è stata cancellata con <function>unset</function>,
     non potrà essere impostata. La funzione <function>isset</function>
     restituirà &false; se viene utilizzata per testare una variabile valorizzata
     a &null;. Inoltre occorre notare che il byte &null; (<literal>"\0"</literal>)
     non equivale alla costante PHP &null;.
    </para>
     <note>
      <title>Attenzione</title>
      <para>
       La funzione <function>isset</function> lavora soltanto con variabili, il
       passaggio di qualsiasi altro tipo di parametro genera un errore di parsing.
       Per verificare se le <link linkend="language.constants">costanti</link>
       sono definite utilizzare la funzione <function>defined</function>.
      </para>
     </note> 
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$var = '';

// Questo test sarà TRUE pertanto sarà visualizzato il testo.
if (isset($var)) {
    echo "Questa variabile è valorizzata, pertanto scrivo.";
}

// Nel prossimo esempio useremo var_dump per visualizzare
// il valore restituito da isset().

$a = "test";
$b = "anothertest";

var_dump(isset($a));      // TRUE
var_dump(isset($a, $b)); // TRUE

unset ($a);

var_dump(isset($a));     // FALSE
var_dump(isset($a, $b)); // FALSE

$foo = NULL;
var_dump(isset($foo));   // FALSE

?>  
]]>  
      </programlisting>  
     </informalexample>  
    </para>  
    <para>  
     Questo esempio utilizza gli elementi di un array:  
     <informalexample>  
      <programlisting role="php">  
<![CDATA[  
<?php  

$a = array ('test' => 1, 'hello' => NULL);

var_dump(isset($a['test']));            // TRUE
var_dump(isset($a['foo']));             // FALSE
var_dump(isset($a['hello']));           // FALSE

// La chiave 'hello' vale NULL pertanto viene considerata non impostata.
// Se si desidera verificare l'esistenza di chiavi con valore NULL, usare:
var_dump(array_key_exists('hello', $a)); // TRUE

?> 
]]>
      </programlisting>
     </informalexample>
    </para>

    &note.language-construct;

    <simpara>
     Vedere anche <function>empty</function>,
     <function>unset</function>, 
     <function>defined</function>,
     <link linkend="types.comparisons">la tabella di comparazione dei tipi</link>,
     <function>array_key_exists</function> e l'operatore di controllo 
     degli errori <link linkend="language.operators.errorcontrol">@</link>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
