<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/uodbc.xml, last change in rev 1.10 -->
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
  <refentry xml:id="function.odbc-prepare" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>odbc_prepare</refname>
    <refpurpose>Predispone un'espressione all'esecuzione</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <methodsynopsis>
     <type>resource</type><methodname>odbc_prepare</methodname>
     <methodparam><type>resource</type><parameter>id_connessione</parameter></methodparam>
     <methodparam><type>string</type><parameter>testo_query</parameter></methodparam>
    </methodsynopsis>
    <para>
     La funzione restituisce &false; su errore.
    </para>
    <para>
     Restituisce un identificativo di risultato ODBC se l'espressione SQL viene predisposta 
     correttamente. L'identificativo restituito può essere utilizzato successivamente per eseguire 
     l'espressione utilizzando la funzione <function>odbc_execute</function>.
    </para>
    <para>
     Alcuni database (tipo IBM DB2, MS SQL server e Oracle) gestiscono le
     le stored procedure che accettano parametri di tipo IN, INOUT e OUT come
     definito nelle specifiche ODBC. Tuttavia il driver Unified ODBC
     supporta soltanto i parametri di tipo IN.
    </para>
    <para>
     Nel seguente codice, <varname>$res</varname> sarà valido soltanto
     se tutti i tre parametri per myproc sono di tipo IN:
     <programlisting role='php'>
<![CDATA[<?php
$a = 1;
$b = 2;
$c = 3;
$stmt = odbc_prepare($conn, 'CALL myproc(?,?,?)');
$res = odbc_execute($stmt, array($a, $b, $c));
?>
]]>
     </programlisting>
     Se occorre utilizzare stored procedure che richiedono parametri INOUT od OUT,
     si suggerisce di utilizzare i moduli nativi del database
     (ad esempio, <link linkend='ref.mssql'>mssql</link> per MS SQL Server,
     o <link linkend='ref.mssql'>oci8</link> per Oracle).
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
