<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/pgsql.xml, last change in rev 1.10 -->
<!-- last change to 'pg-pconnect' in en/ tree in rev 1.82 -->
<!-- EN-Revision: 0.0 Maintainer: cortesi Status: ready -->
<!-- OLD-Revision: 1.70/EN.1.82 -->
  <refentry id="function.pg-pconnect">
   <refnamediv>
    <refname>pg_pconnect</refname>
    <refpurpose>Open a persistent PostgreSQL connection</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>pg_pconnect</methodname>
      <methodparam><type>string</type><parameter>connection_string</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_pconnect</function> opens a connection to a
     PostgreSQL database.  It returns a connection resource that is
     needed by other PostgreSQL functions.
    </para>
    <para>
     It returns a connection resource on success, or &false; if the
     connection could not be made. The arguments should be within a
     quoted string.  The arguments available include
     <parameter>host</parameter>, <parameter>port</parameter>,
     <parameter>tty</parameter>, <parameter>options</parameter>,
     <parameter>dbname</parameter>, <parameter>user</parameter>, and
     <parameter>password</parameter>.
    </para>
     <example>
     <title>Using pg_pconnect</title>
     <programlisting role="php">
<![CDATA[
<?php
$dbconn = pg_connect ("dbname=mary");
//connect to a database named "mary"
$dbconn2 = pg_connect ("host=localhost port=5432 dbname=mary");
// connect to a database named "mary" on "localhost" at port "5432"
$dbconn3 = pg_connect ("host=sheep port=5432 dbname=mary user=lamb password=foo");
//connect to a database named "mary" on the host "sheep" with a username and password
$conn_string = "host=sheep port=5432 dbname=test user=lamb password=bar";
$dbconn4 = pg_connect ($conn_string);
//connect to a database named "test" on the host "sheep" with a username and password
?>
]]>
     </programlisting>
     </example>
    <para>
     If a second call is made to <function>pg_pconnect</function> with
     the same arguments, no new connection will be established, but
     instead, the connection resource of the already opened connection
     will be returned. You can have multiple connections to the same
     database if you use different connection string.
    </para>
    <para>
     Multiple parameters syntax for <function>pg_pconnect</function> 
     <command>$conn = pg_pconnect ("host", "port", "options", "tty",
    "dbname")
     </command>
     has been deprecated.
    </para>
    <para>
     To enable persistent connection, <link
     linkend="ini.pgsql.allow-persistent">pgsql.allow_persistent</link>
     <filename>php.ini</filename> directive must be set to &quot;On&quot;. (Default is On)
     Max number of persistent connection can be defined by <link
     linkend="ini.pgsql.max-persistent">pgsql.max_persistent</link>
     <filename>php.ini</filename> directive. (Default is -1 which is no limit) Total number
     of connection can be set by <link
     linkend="ini.pgsql.max-links">pgsql.max_links</link> 
     <filename>php.ini</filename> directive.
    </para>
    <para>
     <function>pg_close</function> will not close persistent links
     generated by <function>pg_pconnect</function>.  
    </para>
    <para>
     See also <function>pg_connect</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
