<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.53 Maintainer: cucinato Status: working -->
<section xml:id="session.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
 <table>
  <title>Opzioni di configurazione della sessione</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>Name</entry>
     <entry>Default</entry>
     <entry>Modificabile</entry>
     <entry>Changelog</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>session.save_path</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.name</entry>
     <entry>"PHPSESSID"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.save_handler</entry>
     <entry>"files"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.auto_start</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.gc_probability</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.gc_divisor</entry>
     <entry>"100"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponibile dal PHP 4.3.2.</entry>
    </row>
    <row>
     <entry>session.gc_maxlifetime</entry>
     <entry>"1440"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.serialize_handler</entry>
     <entry>"php"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cookie_lifetime</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cookie_path</entry>
     <entry>"/"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cookie_domain</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cookie_secure</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponibile dal PHP 4.0.4.</entry>
    </row>
    <row>
     <entry>session.cookie_httponly</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponibile dal PHP 5.2.0.</entry>
    </row>
    <row>
     <entry>session.use_cookies</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.use_only_cookies</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponibile dal PHP 4.3.0.</entry>
    </row>
    <row>
     <entry>session.referer_check</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.entropy_file</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.entropy_length</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cache_limiter</entry>
     <entry>"nocache"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cache_expire</entry>
     <entry>"180"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.use_trans_sid</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP_INI_ALL in PHP &lt;= 4.2.3. PHP_INI_PERDIR in PHP &lt;= 4-cvs. Disponibile dal PHP 4.0.3.</entry>
    </row>
    <row>
     <entry>session.bug_compat_42</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponibile dal PHP 4.3.0.</entry>
    </row>
    <row>
     <entry>session.bug_compat_warn</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponibile dal PHP 4.3.0.</entry>
    </row>
    <row>
     <entry>session.hash_function</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponibile dal PHP 5.0.0.</entry>
    </row>
    <row>
     <entry>session.hash_bits_per_character</entry>
     <entry>"4"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponibile dal PHP 5.0.0.</entry>
    </row>
    <row>
     <entry>url_rewriter.tags</entry>
     <entry>"a=href,area=href,frame=src,form=,fieldset="</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponibile dal PHP 4.0.4.</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 &ini.php.constants;
 </para>
 <para>
  The session management system supports a number of configuration
  options which you can place in your &php.ini; file. We will give a
  short overview.
 <variablelist>

  <varlistentry xml:id="ini.session.save-handler">
   <term>
    <parameter>session.save_handler</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.save_handler</literal> definisce il nome
     dell'handler che è utilizzato per salvare e caricare i dati
     associati alla sessione. Il default è
     <literal>files</literal>. Si noti che le singole estensioni postono registrare
     i propri <literal>save_handler</literal>; gli handler registrati possono essere
     ottenuti per una specifica installazione consultando
     <function>phpinfo</function>. Vedere anche
     <function>session_set_save_handler</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.save-path">
   <term>
    <parameter>session.save_path</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.save_path</literal> definisce l'argomento che
     è passato all'handler di salvataggio. Se si sceglie l'handler di default
     files, questo è il percorso in cui i file sono creati. Vedere anche
     <function>session_save_path</function>. 
    </simpara>
    <para>
     C'è un argomento N opzionale per questa direttiva che determina
     il numero di livelli di carelle su cui verranno distribuiti i file di
     sessione.  Per esempio, impostarlo a <literal>'5;/tmp'</literal>
     può portare a creare un file di sessione con questo percorso:
     <literal>/tmp/4/b/1/e/3/sess_4b1e384ad74619bd212e236e52a5a174If
     </literal>.  Per usare N occorre creare tutte queste
     cartelle prima dell'utilizzo. Un piccolo shell script è presente in
     <filename>ext/session</filename> per eseguire questo lavoro, si chiama
     <filename>mod_files.sh</filename>. Notare anche che se N è
     usato ed è maggiore di 0 il garbage collection automatico non
     sarà eseguito, vedere un &php.ini; per ulteriori
     informazioni. Inoltre, se si usa N, assicurarsi di racchiudere
     <literal>session.save_path</literal> in  
     "doppie virgolette" poiché il separatore (<literal>;</literal>) è
     usato anche per i commenti in &php.ini;.
    </para>
    <warning>
     <para>
      Se si lascia questo parametro impostato su una cartella leggibile da tutti, come
      <filename>/tmp</filename> (il default), altri utenti sul server
      possono abusare delle informazioni delle sessioni ottenendo la lista dei
      file in quella cartella.
     </para>
    </warning>
    <note>
     <simpara>
      Prima del PHP 4.3.6, gli utenti di Windows dovevano cambiare questa variabile per
      utilizzare le sessioni di PHP. Un percorso valido deve essere specificato, es.:
      <filename>c:/temp</filename>.
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.name">
   <term>
    <parameter>session.name</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.name</literal> specifica il nome della
     sessione usato come nome del cookie. Dovrebbe contenere solamente
     caratteri alfanumerici. Il valore predefinito è <literal>PHPSESSID</literal>.
     Vedere anche <function>session_name</function>.
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.session.auto-start">
   <term>
    <parameter>session.auto_start</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.auto_start</literal> specifica se
     il modulo di sessione inizia automaticamente una sessione al momento della 
     richiesta. Il valore predefinito è <literal>0</literal> (disabilitato).
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.serialize-handler">
   <term>
    <parameter>session.serialize_handler</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.serialize_handler</literal> definisce il nome
     dell'identificativo usato per serializzare/deserializzare
     i dati. Attualmente sono supportati un fomrato interno (nome
     <literal>php</literal>) e WDDX (nome
     <literal>wddx</literal>). WDDX è disponibile solo se PHP è
     compilato con il supporto <link linkend="ref.wddx">WDDX
     </link>. Il valore predefinito è <literal>php</literal>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.gc-probability">
   <term>
    <parameter>session.gc_probability</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.gc_probability</literal> in combinazione con
     <literal>session.gc_divisor</literal> è usato per gestire la probabilità
     che la routine gc (garbage collection) venga eseguita.
     Il valore predefinito è <literal>1</literal>. Vedere <link
     linkend="ini.session.gc-divisor">session.gc_divisor</link> per i dettagli.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.gc-divisor">
   <term>
    <parameter>session.gc_divisor</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.gc_divisor</literal> in conmbinazione con 
     <literal>session.gc_probability</literal> definisce la probabilità 
     che la routine gc (garbage collection) venga eseguita ad ogni inizializzazione
     di sessione.
     La probabilità è calcolata usando gc_probability/gc_divisor,
     es. 1/100 significa che c'è la probabilità del 1% che il processo GC parta
     ad ogni richiesta.
     <literal>session.gc_divisor</literal> ha come valore predefinito <literal>100</literal>.
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.session.gc-maxlifetime">
   <term>
    <parameter>session.gc_maxlifetime</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.gc_maxlifetime</literal> specifica il numero
     di secondi dopo i quali i dati verranno visti come 'spazzatura' e
     quindi ripuliti. La ripulitura (Garbage Collection) avviene durante l'avvio della sessione.
    </simpara>
    <note>
     <para>
      Se differenti script hanno differenti valori di
      <literal>session.gc_maxlifetime</literal> ma condividono lo stesso spazio di
      memorizzazione dei dati di sessione allora lo script con il valore minimo sarà quello 
      che ripulirà i dati. In questo caso, utilizzare la direttiva assieme a <link
      linkend="ini.session.save-path">session.save_path</link>.
     </para>
    </note>
    <note>
     <simpara>Se si sta usando l'handler di sessione predefinito basato su file, il
     filesystem deve tener traccia degli orari di accesso (atime). Il filesystem FAT di Windows
     non lo fa, quindi occorre trovare un altro modo per gestire il garbage
     collecting della sessione se si è obbligati ad usare FAT o qualsiasi
     altro filesystem dove atime non è disponibile.
     Dal PHP 4.2.3 viene usato mtime (orario di modifica) invece di atime. In questo modo
     non ci sono problemi con filesystem dove l'atime non è disponibile.
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.referer-check">
   <term>
    <parameter>session.referer_check</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.referer_check</literal> contains the
     substring you want to check each HTTP Referer for. If the
     Referer was sent by the client and the substring was not
     found, the embedded session id will be marked as invalid.
     Defaults to the empty string.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.entropy-file">
   <term>
    <parameter>session.entropy_file</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.entropy_file</literal> gives a path to an
     external resource (file) which will be used as an additional
     entropy source in the session id creation process. Examples are
     <literal>/dev/random</literal> or <literal>/dev/urandom</literal>
     which are available on many Unix systems.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.entropy-length">
   <term>
    <parameter>session.entropy_length</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.entropy_length</literal> specifies the number
     of bytes which will be read from the file specified
     above. Defaults to <literal>0</literal> (disabled).
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.use-cookies">
   <term>
    <parameter>session.use_cookies</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.use_cookies</literal> specifies whether the
     module will use cookies to store the session id on the client
     side. Defaults to <literal>1</literal> (enabled).
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.use-only-cookies">
   <term>
    <parameter>session.use_only_cookies</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.use_only_cookies</literal> specifies whether
     the module will <emphasis role="strong">only</emphasis> use
     cookies to store the session id on the client side. Defaults
     to <literal>0</literal> (disabled, for backward compatibility).
     Enabling this setting prevents attacks involved passing session
     ids in URLs. This setting was added in PHP 4.3.0.
    </simpara>
   </listitem>
  </varlistentry>


  <varlistentry xml:id="ini.session.cookie-lifetime">
   <term>
    <parameter>session.cookie_lifetime</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_lifetime</literal> specifies the lifetime of
     the cookie in seconds which is sent to the browser. The value 0
     means "until the browser is closed." Defaults to
     <literal>0</literal>. See also
     <function>session_get_cookie_params</function> and
     <function>session_set_cookie_params</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-path">
   <term>
    <parameter>session.cookie_path</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_path</literal> specifies path to set
     in session_cookie. Defaults to <literal>/</literal>. See also
     <function>session_get_cookie_params</function> and
     <function>session_set_cookie_params</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-domain">
   <term>
    <parameter>session.cookie_domain</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_domain</literal> specifies the domain to
     set in session_cookie. Default is none at all. See also
     <function>session_get_cookie_params</function> and
     <function>session_set_cookie_params</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-secure">
   <term>
    <parameter>session.cookie_secure</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_secure</literal> specifies whether
     cookies should only be sent over secure connections. Defaults to
     <literal>off</literal>.
     This setting was added in PHP 4.0.4. See also
     <function>session_get_cookie_params</function> and
     <function>session_set_cookie_params</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cache-limiter">
   <term>
    <parameter>session.cache_limiter</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cache_limiter</literal> specifies cache
     control method to use for session pages
     (none/nocache/private/private_no_expire/public). Defaults to
     <literal>nocache</literal>. See also
     <function>session_cache_limiter</function>.
    </simpara>
   </listitem>
  </varlistentry>


  <varlistentry xml:id="ini.session.cache-expire">
   <term>
    <parameter>session.cache_expire</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cache_expire</literal> specifies time-to-live
     for cached session pages in minutes, this has no effect for
     nocache limiter. Defaults to <literal>180</literal>. See also
     <function>session_cache_expire</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.use-trans-sid">
   <term>
    <parameter>session.use_trans_sid</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.use_trans_sid</literal> whether transparent
     sid support is enabled or not. Defaults to
     <literal>0</literal> (disabled).
    </simpara>
    <note>
     <simpara>
      For PHP 4.1.2 or less, it is enabled by compiling with 
      <link linkend="configure.enable-trans-sid">
      <literal>--enable-trans-sid</literal></link>.
      From PHP 4.2.0, trans-sid feature is always compiled.
     </simpara>
     <simpara>
      URL based session management has additional security risks
      compared to cookie based session management. Users may send
      a URL that contains an active session ID to their friends by
      email or users may save a URL that contains a session ID to
      their bookmarks and access your site with the same session ID
      always, for example.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.session.bug-compat-42">
   <term>
    <parameter>session.bug_compat_42</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     PHP versions 4.2.0 and lower have an undocumented feature/bug that
     allows you to to initialize a session variable in the global scope,
     albeit <link linkend="ini.register-globals">register_globals</link>
     is disabled.  PHP 4.3.0 and later will warn you, if this feature is
     used, and if <link linkend="ini.session.bug-compat-warn">
     session.bug_compat_warn</link> is also enabled.  
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.session.bug-compat-warn">
   <term>
    <parameter>session.bug_compat_warn</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     PHP versions 4.2.0 and lower have an undocumented feature/bug that
     allows you to to initialize a session variable in the global scope,
     albeit <link linkend="ini.register-globals">register_globals</link>
     is disabled.  PHP 4.3.0 and later will warn you, if this feature is
     used by enabling both 
     <link linkend="ini.session.bug-compat-42">session.bug_compat_42</link>
     and <link linkend="ini.session.bug-compat-warn">
     session.bug_compat_warn</link>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.hash-function">
   <term>
    <parameter>session.hash_function</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.hash_function</literal> allows you to specify the hash
     algorithm used to generate the session IDs. '0' means MD5 (128 bits) and
     '1' means SHA-1 (160 bits).
    </simpara>
    <note>
     <para>
      This was introduced in PHP 5.
     </para>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.hash-bits-per-character">
   <term>
    <parameter>session.hash_bits_per_character</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.hash_bits_per_character</literal> allows you to define
     how many bits are stored in each character when converting the binary
     hash data to something readable. The possible values are '4' (0-9, a-f),
     '5' (0-9, a-v), and '6' (0-9, a-z, A-Z, "-", ",").
    </simpara>
    <note>
     <para>
      This was introduced in PHP 5.
     </para>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.url-rewriter.tags">
   <term>
    <parameter>url_rewriter.tags</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>url_rewriter.tags</literal> specifies which HTML tags
     are rewritten to include session id if transparent sid support
     is enabled. Defaults to
     <literal>a=href,area=href,frame=src,input=src,form=fakeentry,fieldset=</literal>
    </simpara>
    <note>
     <simpara>
      If you want XHTML conformity, remove the <literal>form</literal> entry and
      use the &lt;fieldset&gt; tags around your form fields.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>

 <para>
  The <link
  linkend="ini.track-vars"><literal>track_vars</literal></link> and
  <link
  linkend="ini.register-globals"><literal>register_globals</literal></link>
  configuration settings influence how the session variables get
  stored and restored.
 </para>

 <note>
  <para>
   As of PHP 4.0.3, <link
   linkend="ini.track-vars"><literal>track_vars</literal></link> is
   always turned on.
  </para>
 </note>

</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
