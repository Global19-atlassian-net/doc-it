<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/filesystem.xml, last change in rev 1.15 -->
<!-- last change to 'fgetcsv' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.1 Maintainer: cortesi Status: working -->
<!-- OLD-Revision: 1.134/EN.1.2 -->
  <refentry id="function.fgetcsv">
   <refnamediv>
    <refname>fgetcsv</refname>
    <refpurpose>Prende una riga da un puntatore a file e l'analizza in cerca di campi CSV</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>fgetcsv</methodname>
      <methodparam><type>int</type><parameter>fp</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Simile a <function>fgets</function> eccetto che per il fatto che
     <function>fgetcsv</function> analizza le righe che legge in cerca di campi 
     in in formato <acronym>CSV</acronym> e restituisce un vettore contenente 
     i campi letti.  Il delimitatore di campo è una virgola, a meno che non
     venga specificato un altro delimitatore con il terzo parametro opzionale.
    </simpara>
    <simpara>
     <parameter>Fp</parameter> deve essere un puntatore valido ad un file 
     correttamente aperto da <function>fopen</function>,
     <function>popen</function> o <function>fsockopen</function>
    </simpara>
    <simpara>
     Length deve essere maggiore della linea più lunga trovata nel file CSV
     (compresi i caratteri di fine riga).
    </simpara>
    <simpara>
     <function>fgetcsv</function> restituisce &false; in caso d'errore e
     alla fine del file.
    </simpara>
    <simpara>
     N.B. Una riga vuota in un file CVS verrà riportata come un vettore
     contenente un solo campo vuoto (&null;) e non verrà trattata come un 
     errore.
    </simpara>
    <example>
     <title>
      <function>fgetcsv</function> example - Legge e scrive l'intero contenuto
      di un file CSV.
     </title>
     <programlisting role="php">
<![CDATA[
$row = 1;
$fp = fopen ("test.csv","r");
while ($data = fgetcsv ($fp, 1000, ",")) {
    $num = count ($data);
    print "&lt;p&gt; $num fields in line $row: &lt;br&gt;";
    $row++;
    for ($c=0; $c&lt;$num; $c++) {
        print $data[$c] . "&lt;br&gt;";
    }
}
fclose ($fp);
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
