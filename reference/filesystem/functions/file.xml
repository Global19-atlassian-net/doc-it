<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/filesystem.xml, last change in rev 1.15 -->
<!-- last change to 'file' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.2 Maintainer: cortesi Status: working -->
<!-- OLD-Revision: 1.134/EN.1.2 -->
  <refentry id="function.file">
   <refnamediv>
    <refname>file</refname> 
    <refpurpose>Legge l'intero file in un vettore</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>file</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
     </methodsynopsis>
    <para> 
     Identica a <function>readfile</function>, eccetto per il fatto che
     <function>file</function> restituisce il file in un vettore. Ogni
     elemento del vettore corrisponde ad una riga del file, con il carattere di
     newline ancora inserito.
    </para>
    <note>
     <para>
      Each line in the resulting array will include the line ending, so you
      still need to use <function>trim</function> if you do not want the line
      ending present.
     </para>
    </note>
    <para>
     Puoi impostare il secondo parametro (opzionale) ad "1", se
     vuoi cercare il file nel <link
     linkend="ini.include-path">include_path</link>.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// inserisce una pagina web in un array e la stampa
$fcontents = file ('http://www.php.net');
while (list ($line_num, $line) = each ($fcontents)) {
    echo "&lt;b&gt;Line $line_num:&lt;/b&gt; " . htmlspecialchars ($line) . "&lt;br&gt;\n";
}

// inserisce una pagina web in una stringa
$fcontents = join ('', file ('http://www.php.net'));
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      As of PHP 4.3.0 you can use <function>file_get_contents</function> to
      return the contents of a file as a string in a binary safe manner.
     </para>
    </note>
    &note.not-bin-safe;
    &tip.fopen-wrapper;
    <para> 
     Vedere anche <function>readfile</function>,
     <function>fopen</function>, <function>fsockopen</function> e
     <function>popen</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
