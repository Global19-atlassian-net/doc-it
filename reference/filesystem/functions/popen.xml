<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/filesystem.xml, last change in rev 1.15 -->
<!-- EN-Revision: 1.13 Maintainer: fernando Status: working -->
<!-- CREDITS: cortesi -->    
<refentry xml:id="function.popen" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>popen</refname>
    <refpurpose>Apre un puntatore ad un file di processo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>resource</type><methodname>popen</methodname>
      <methodparam><type>string</type><parameter>command</parameter></methodparam>
      <methodparam><type>string</type><parameter>mode</parameter></methodparam>
     </methodsynopsis>
    <para> 
     Apre una pipe ad un processo eseguito forzando il comando dato 
     da command.
    </para>
    <para> 
     Restituisce un puntatore a file identico a quello restituito da
     <function>fopen</function>, eccetto che per il fatto che è unidirezionale (può 
     solo essere usato per la lettura o la scrittura) e deve essere chiudo con
     <function>pclose</function>. Questo puntatore può essere usato con
     <function>fgets</function>, <function>fgetss</function> e
     <function>fwrite</function>.
    </para>
    <para>
     Se si verifica un errore, restituisce &false;.
    </para>
    <note>
     <para>
      Se si sta cercando un supporto bi-direzionale (2 vie), utilizzare
      <function>proc_open</function>.
     </para>
    </note>
    <para>
     <example>
      <title>Esempio di uso di <function>popen</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$handle = popen("/bin/ls", "r");
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Se il comando che deve essere eseguito non è trovato, la funzione
     restituisce una risorsa valida. Questo sembra strano, ma ha un senso;
     esso permette di accedere ai messaggi di erore restituiti dalla shell:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
error_reporting(E_ALL);

/* Aggiunge una redirezione, così possiamo ottenere stderr. */
$handle = popen('/path/to/spooge 2>&1', 'r');
echo "'$handle'; " . gettype($handle) . "\n";
$read = fread($handle, 2096);
echo $read;
pclose($handle);
?>
]]>
       </programlisting>
      </informalexample>
     </para>
      &note.exec-path;
      &warn.sm.exec;    
    <para>
     Vedere anche <function>pclose</function>, <function>fopen</function>
     e <function>proc_open</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
