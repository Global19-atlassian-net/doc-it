<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/filesystem.xml, last change in rev 1.15 -->
<!-- last change to 'fopen' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.2 Maintainer: cortesi Status: working -->
<!-- OLD-Revision: 1.134/EN.1.2 -->
  <refentry id="function.fopen">
   <refnamediv>
    <refname>fopen</refname>
    <refpurpose>Apre un file o un URL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>fopen</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam><type>string</type><parameter>mode</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Se <parameter>filename</parameter> inizia con "http://" (indipendentemente 
     dalle maiuscole), viene aperta una connessione HTTP 1.0 al server 
     specificato, la pagina viene richiesta usando il metodo HTTP 
     GET e un puntatore a file viene restituito all'inizio del corpo della 
     risposta. Un header 'Host:' viene inviato con la richiesta
     in modo di soddisfare i virtual host name-based.
    </simpara>
    <simpara>
     As of PHP 4.3.0 (not yet released), if you have compiled in
     support for OpenSSL, you may use "https://" to open an HTTP
     connection over SSL.
    </simpara>
    <simpara>
     Nota che il puntatore al file ti permette di ottenere solo il
     <emphasis>body</emphasis> della risposta; to retrieve the HTTP
     response header you need to be using PHP 4.0.5 or later;
     The headers will be stored in the $http_response_header variable.
     As of PHP 4.3.0 (not yet released), the header information can
     be retrieved using the <function>fgetwrapperdata</function>.
    </simpara>
    <simpara>
     HTTP connections are read-only; you cannot write data or copy
     files to an HTTP resource.
    </simpara>
    <simpara>
     Le versioni precedenti al PHP 4.0.5 non elaborano i redirect HTTP. Perciò, 
     le directory devono includere gli slash finali.
    </simpara>
    <simpara>
     Se <parameter>filename</parameter> inizia con "ftp://" (case insensitive), 
     Viene aperta una connessione ftp al server specificato e viene restituito
     un puntatore al file richiesto. Se il server non supporta l'FTP passivo, fallirà. 
     Via ftp puoi aprire 
     file sia in lettura che scrittura (ma non 
     contemporaneamente).
    </simpara>
    <simpara>
     If <parameter>filename</parameter> is one of "php://stdin",
     "php://stdout", or "php://stderr", the corresponding stdio
     stream will be opened.  (This was introduced in PHP 3.0.13;
     in earlier versions, a filename such as "/dev/stdin" or
     "/dev/fd/0" must be used to access the stdio streams.)
    </simpara>
    <simpara>
     If <parameter>filename</parameter> begins with anything else, the
     file will be opened from the filesystem, and a file pointer to
     the file opened is returned.
    </simpara>
    <simpara>
     If the open fails, the function returns &false;.
    </simpara>
    <para>
     <parameter>mode</parameter> può essere uno dei seguenti:
     <itemizedlist>
      <listitem>
       <simpara>
        'r' - Apre in sola lettura; posiziona il puntatore 
        all'inizio del file.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        'r+' - Apre in lettura e scrittura; posiziona il puntatore 
        all'inizio del file.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        'w' - Apre il file in sola scrittura; posiziona il puntatore all'inizio del file
        e tronce il file alla lunghezza zero.
        Se il file non esiste, tenta di crearlo.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        'w+' - Apre in lettura e scrittura; posiziona il puntatore all'inizio del file
        e tronce il file alla lunghezza zero.
        Se il file non esiste, tenta di crearlo.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        'a' - Apre in sola scrittura; posiziona il puntatore alla fine 
        del file. Se il file non esiste, tenta di 
        crearlo.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        'a+' - Apre in lettura e scrittura; posiziona il 
        puntatore alla fine del file. Se il file non esiste, tenta 
        di crearlo.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <note>
     <para>
      <parameter>mode</parameter> può anche essere impostato a 
      'b'. Ciò è utile solo in sistemi che differenziano fra file binari e di testo
      (ad esempio Windows. è inutile su Unix). 
      Se non è necessario, tale valore verrà ignorato.
     </para>
    </note>
    <para>
     Puoi utilizzare il terzo parametro opzionale ed impostarlo ad "1", se 
     vuoi cercare il file anche 
     nel <link linkend="ini.include-path">include_path</link>.
    </para>
    <para>
     <example>
      <title>Esempio di <function>fopen</function></title>
      <programlisting role="php">
<![CDATA[
$fp = fopen ("/home/rasmus/file.txt", "r");
$fp = fopen ("/home/rasmus/file.gif", "wb");
$fp = fopen ("http://www.php.net/", "r");
$fp = fopen ("ftp://user:password@example.com/", "w");
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Se incontri problemi nella lettura o scrittura di file e stai usando una
     versione di PHP come modulo server, ricorda 
     di verificare che i file e le directory che stai usando siano 
     accessibili al processo server.
    </simpara>
    <para>
     Sulle piattaforme Windows, fai attenzione ad dichiarare ogni backslash
     utilizzata nel percorso del file, o utilizza gli slash semplici.
     <informalexample>
      <programlisting role="php"> 
<![CDATA[
$fp = fopen ("c:\\data\\info.txt", "r");
]]>
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     Vedere anche <function>fclose</function>,
     <function>fsockopen</function>,
     <function>socket_set_timeout</function> e
     <function>popen</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
