<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/pcre.xml, last change in rev 1.5 -->
<!-- last change to 'preg-replace' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.2 Maintainer: darvina Status: ready -->
<!-- OLD-Revision: 1.78/EN.1.2 -->
  <refentry id="function.preg-replace">
   <refnamediv>
    <refname>preg_replace</refname>
    <refpurpose>Esegue una ricerca ed una sostituzione con le espressioni regolari</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>mixed </type><methodname>preg_replace</methodname> 
      <methodparam><type>mixed </type><parameter>espressione_regolare</parameter></methodparam>
      <methodparam><type>mixed </type><parameter>sostituto</parameter></methodparam>
      <methodparam><type>mixed </type><parameter>testo</parameter></methodparam>
      <methodparam choice="opt"><type>int </type><parameter>limite</parameter></methodparam>
     </methodsynopsis>
    <para>
     La funzione ricerca in <parameter>testo</parameter> i criteri
     impostati in <parameter>espressione_regolare</parameter>. Se 
     riconosce dei testi, li sostituisce con <parameter>sostituto</parameter>.
     Se si specifica <parameter>limite</parameter>, verranno sostituiti
     solamente <parameter>limite</parameter> testi riconosciuti;
     se viene omesso, oppure impostato a -1, verranno sostituiti tutti
     i testi riconosciuti.
    </para>
    <para>
     Il parametro <parameter>sostituto</parameter> può contenere riferimenti
     nella forma di <literal>\\<replaceable>n</replaceable></literal>, oppure,
     a partire dalla versione 4.0.4 di PHP, <literal><replaceable>$n</replaceable>
     </literal>, con la preferenza per la seconda sintassi. Questo tipo di 
     riferimento verrà sostituito dal testo che soddisfa l'<replaceable>n
     </replaceable>-esimo criterio presente in <parameter>espressione_regolare
     </parameter>. Sono ammessi numeri compresi tra 0 e 99 inclusi. Il valore 0
     (<literal>\\0</literal> oppure <literal>$0</literal>) si riferisce al testo
     riconosciuto tramite tutta l'espressione regolare passata. Nel conteggio
     dei criteri di riconoscimento presenti, sono contate le parentesi 
     aperte da sinistra verso destra partendo da 1.
    </para>
    <para>
     Se verranno riconosciuti dei testi, la funzione restituisce la nuova
     versione di <parameter>testo</parameter>, altrimenti il parametro 
     sarà restituito inalterato.
    </para>
    <para>
     Ogni parametro passato alla funzione <function>preg_replace</function> 
     può essere una matrice.
    </para>
    <para>
     Se il campo <parameter>testo</parameter> è una matrice, la ricerca
     e la sostituzione sarà eseguita su ogni elemento della matrice, 
     e conseguentemente la funzione restituirà una matrice.
    </para>
    <para>
     Se <parameter>espressione_regolare</parameter> ed <parameter>sostituto</parameter>
     sono entrambi delle matrici, la funzione <function>preg_replace</function> 
     utilizza gli elementi di ciascuna matrice per la ricerca e la sostituzione 
     delle stringhe in <parameter>testo</parameter>. Nel caso in cui la
     matrice passata in <parameter>sostituto</parameter> abbia 
     meno elementi che <parameter>espressione_regolare</parameter>,
     la funzione utilizzerà una stringa vuota per compensare gli 
     elementi mancanti nella fase di sostituzione. Se, invece,
     <parameter>espressione_regolare</parameter> è una matrice,
     mentre il campo <parameter>sostituto</parameter> è una stringa,
     quest'ultima sarà usata come valore da sostituire ad ogni testo
     riconosciuto. Un discorso contrario non ha senso.
    </para>
    <para>
     Il modificatore <literal>/e</literal>, permette alla funzione
     di considerare il testo posto in <parameter>sostituto</parameter>
     come codice PHP dopo aver valorizzato gli opportuni riferimenti.
     Suggerimento: accertarsi che <parameter>sostituto</parameter> 
     sia del codice PHP valido, altrimenti si ottiene un errore di
     parsing alla linea della funzione <function>preg_replace</function>.
    </para>
    <para>
     <example>
      <title>Esempi di sostituzione di valori</title>
      <programlisting>
<![CDATA[
$patterns = array ("/(19|20)(\d{2})-(\d{1,2})-(\d{1,2})/",
                   "/^\s*{(\w+)}\s*=/");
$replace = array ("\\3/\\4/\\1\\2", "$\\1 =");
print preg_replace ($patterns, $replace, "{startDate} = 1999-5-27");
]]>
      </programlisting>
     </example>
     Questo esempio visualizzerà:
     <programlisting>
<![CDATA[
$startDate = 5/27/1999
]]>
     </programlisting>
     <example>
      <title>Utilizzo del modificatore /e </title>
      <programlisting role="php">
<![CDATA[
preg_replace ("/(<\/?)(\w+)([^>]*>)/e", 
              "'\\1'.strtoupper('\\2').'\\3'", 
              $html_body);
]]>
      </programlisting>
      <para>
       Nell'esempio precedente tutti i tag HTML presenti nel testo di  
       input saranno convertiti in maiuscolo.
      </para>
     </example>
     <example>
      <title>Esempio di conversione di codice HTML in testo</title>
      <programlisting role="php">
<![CDATA[
// $document contiene un documento HTML.
// In questo esempio la funzione rimuove i tag HTML,
// le sezioni javascript e gli spazi bianchi.
// Inoltre si convertirà le entità HTML nella loro
// rappresentazione testuale.
$search = array ("'<script[^>]*?>.*?</script>'si",  // Rimozione del javascript
                 "'<[\/\!]*?[^<>]*?>'si",           // Rimozione dei tag HTML
                 "'([\r\n])[\s]+'",                 // Rimozione degli spazi bianchi
                 "'&(quot|#34);'i",                 // Sostituzione delle entità HTML
                 "'&(amp|#38);'i",
                 "'&(lt|#60);'i",
                 "'&(gt|#62);'i",
                 "'&(nbsp|#160);'i",
                 "'&(iexcl|#161);'i",
                 "'&(cent|#162);'i",
                 "'&(pound|#163);'i",
                 "'&(copy|#169);'i",
                 "'&#(\d+);'e");                    // Valuta come codice PHP

$replace = array ("",
                  "",
                  "\\1",
                  "\"",
                  "&",
                  "<",
                  ">",
                  " ",
                  chr(161),
                  chr(162),
                  chr(163),
                  chr(169),
                  "chr(\\1)");

$text = preg_replace ($search, $replace, $document);
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Il parametro <parameter>limite</parameter> è stato aggiunto 
      successivamente alla versione 4.0.1pl2 di PHP.
     </para>
    </note>	 
    <para>
     Vedere anche <function>preg_match</function>,
     <function>preg_match_all</function> e
     <function>preg_split</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
