<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
  <refentry xml:id="function.preg-replace-callback" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>preg_replace_callback</refname>
    <refpurpose>Esegue ricerche e sostituzioni con espressioni regolari 
    usando il callback</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>mixed </type><methodname>preg_replace_callback</methodname> 
      <methodparam><type>mixed </type><parameter>espressione_regolare</parameter></methodparam>
      <methodparam><type>callback</type><parameter>callback</parameter></methodparam>
      <methodparam><type>mixed </type><parameter>testo</parameter></methodparam>
      <methodparam choice="opt"><type>int </type><parameter>limite</parameter></methodparam>
     </methodsynopsis>
    <para>
     Fondamentalmente questa funzione si comporta come
     <function>preg_replace</function>, eccetto che per la 
     presenza del <parameter>callback</parameter>. Con quest'ultimo
     parametro si indica una funzione da richiamare a cui verrà
     passata una matrice con i testi riconosciuti in <parameter>testo</parameter>.
     La funzione di callback dovrebbe restituire la stringa da sostituire.
    </para>
    <example> 
     <title>Esempio dell'uso di <function>preg_replace_callback</function></title> 
     <programlisting role='php'>
<![CDATA[
<?php 
// questo test è stato usato nel 2002
// lo si vuole avere aggiornato per il 2003
$text = "April fools day is 04/01/2002\n"; 
$text.= "Last christmas was 12/24/2001\n"; 
// la funzione di callback
function next_year($matches) 
{ 
// come solito: $matches[0] è il testo riconosciuto completo
// $matches[1] la parte riconosciuta per il primo criterio
// racchiuso in '(...)' e così via
return $matches[1].($matches[2]+1); 
}
echo preg_replace_callback(
     "|(\d{2}/\d{2}/)(\d{4})|",
     "next_year",
     $text);
// il risultato sarà:
// April fools day is 04/01/2003
// Last christmas was 12/24/2002
?>
]]>
     </programlisting>
    </example>
    <para>
     Spesso si ha la necessità di richiamare la funzione <parameter>callback</parameter>
     soltanto in un unico posto.
     In questo caso si può utilizzare <function>create_function</function>
     per dichiarare una funzione anonima come callback per 
     <function>preg_replace_callback</function>.In questo modo si
     hanno tutte le informazioni per la chiamata in un unico posto
     e non si disperde con funzioni di callback non
     utilizzate altrove.
    </para>
    <example>
     <title><function>preg_replace_callback</function> e <function>create_function</function></title>
     <programlisting role='php'>
<![CDATA[
<?php
/* Un filtro da linea di comando stile Unix che converte
 * la maiuscole poste all'inizio delle parole in minuscolo */
$fp = fopen("php://stdin", "r") or die("can't read stdin");
while (!feof($fp)) {
      $line = fgets($fp);
      $line = preg_replace_callback(
             '|<p>\s*\w|',
             create_function(
                  // l'apice singolo è essenziale qui, 
                  // o in alternativa occorre usare la sequenza di escape \$ 
                  // per tutte le occorrenze di $ 
                 '$matches',
                 'return strtolower($matches[0]);' 
                 ), 
               $line 
      );
      echo $line; 
}
fclose($fp);
?>
]]> 
     </programlisting>
    </example>
    <para>
     Vedere anche <function>preg_replace</function>
     <function>create_function</function>,
     &listendand; &seealso.callback;.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
