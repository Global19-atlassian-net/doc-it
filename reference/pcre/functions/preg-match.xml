<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./it/functions/pcre.xml, last change in rev 1.1 -->
<!-- last change to 'preg-match' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.1 Maintainer: darvina Status: ready -->
<!-- OLD-Revision: 1.78/EN.1.2 -->
  <refentry id="function.preg-match">
   <refnamediv>
    <refname>preg_match</refname>
    <refpurpose>Riconoscimento con espressioni regolari</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int </type><methodname>preg_match</methodname> 
      <methodparam><type>string </type><parameter>criterio</parameter></methodparam>
      <methodparam><type>string </type><parameter>testo</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>testi_riconosciuti</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esegue un riconoscimento nel parametro <parameter>testo</parameter> utilizzando 
     l'espressione regolare indicata in <parameter>criterio</parameter>.
    </para>
    <para>
     Se viene fornito il terzo parametro, <parameter>testi_riconosciuti</parameter>, questo verrà valorizzato 
     con i risultati della ricerca. In dettaglio $testi_riconosciuti[0] conterrà il testo che 
     si incrocia con l'intero criterio di ricerca, $testi_riconosciuti[1] conterrà il testo che soddisfa 
     il primo criterio posto tra parentesi, $testi_riconosciuti[2] il secondo e così via.
    </para>
    <para>
     La funzione restituisce &true; se avviene il riconoscimento del <parameter>criterio</parameter> nella stringa 
     passata, altrimenti sarà restituito &false; se non si ha alcun riconoscimento
     oppure se si rilevano degli errori.
    </para>
    <para>
     <example>
      <title>Ricerca del testo "php"</title>
      <programlisting role="php">
<![CDATA[
// La lettera "i" dopo i delimitatori indica una ricerca case-insensitive
if (preg_match ("/php/i", "PHP è il linguaggio scelto.")) {
    print "Il riconoscimento è avvenuto.";
} else {
    print "Testo non riconosciuto.";
}
]]>
      </programlisting>
     </example>
     <example>
      <title>Cerca la parola "web"</title>
      <programlisting role="php">
<![CDATA[
// La lettera \b nel criterio indica i limiti della parola. Così verrà riconosciuta solo
// la parola "web" e non parte di una parola più lunga come "webbing" oppure "cobweb"
if (preg_match ("/\bweb\b/i", "PHP è un linguaggio di programmazione per il web scelto da molti.")) {
    print "Il riconoscimento è avvenuto.";
} else {
    print "Testo non riconosciuto.";
}
if (preg_match ("/\bweb\b/i", "PHP è un linguaggio di programmazione installato su molti website")) {
    print "Il riconoscimento è avvenuto.";
} else {
    print "Testo non riconosciuto.";
}
]]>
      </programlisting>
     </example>
     <example>
      <title>Estrapolazione del dominio da un URL</title>
      <programlisting role="php">
<![CDATA[
// come ottenere il nome dell'host da un URL
preg_match("/^(http:\/\/)?([^\/]+)/i",
"http://www.php.net/index.html", $matches);
$NomeHost = $matches[2];
// come ottenere gli ultimi due segmenti del nome dell'host
preg_match("/[^\.\/]+\.[^\.\/]+$/",$NomeHost,$matches);
echo "Nome del dominio: ".$matches[0]."\n";
]]>
      </programlisting>
      <para>
       L'esempio visualizzerà:
       <screen>
<![CDATA[
Nome del dominio: php.net
]]>
       </screen>
      </para>
     </example>
     Vedere anche <function>preg_match_all</function>, 
     <function>preg_replace</function> e
     <function>preg_split</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
