<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.2 Maintainer: cortesi Status: working -->
  <refentry id="function.exec">
   <refnamediv>
    <refname>exec</refname>
    <refpurpose>Esegue un programma esterno</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>exec</methodname>
      <methodparam><type>string</type><parameter>command</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>array
       </parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>return_var</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>exec</function> esegue il comando passato da 
     <parameter>command</parameter>, la funzione non invia nessun output.
     Restituisce semplicemente l'ultima linea dal risultato del comando.
     Se si ha bisogno di eseguire un comando ed avere tutti i dati passati
     direttamente indietro senza alcuna interferenza, usare la funzione <function>passthru</function>.
    </para>
    <para>
     Se l'argomento <parameter>array</parameter> è presente, allora tale vettore specificato
     verrà riempito con ogni linea del output del comando.  
     Notare che se il vettore contiene già degli elementi,
     <function>exec</function> li aggiungerà in coda al vettore.
     Se non si vuole che la funzione aggiunga elementi, eseguire un 
     <function>unset</function> sul vettore prima di passarlo ad
     <function>exec</function>.
    </para>
    <para>
     Se viene passato l'argomento <parameter>return_var</parameter>
     assieme all'argomento <parameter>array</parameter>, allora lo stato
     del comando eseguito verrà scritto in questa variabile.
    </para>
    <warning>
    <para>
     Si osservi che se si intende allocare dati che giungono dall'utente
     per passarli a questa funzione, si dovrebbe usare
     <function>escapeshellarg</function> o
     <function>escapeshellcmd</function> per assicurarsi che l'utente
     non forzi il sistema ad eseguire comandi arbitrari.
    </para>
   </warning>
   <note>
    <para>
     Notare anche che se si esegue un programma usando questa funzione e lo si vuole lasciare
     in esecuzione in background, ci si deve assicurare che l'output del programa venga rediretto
     ad un file o a qualche altro flusso di output, altrimenti PHP rimarrà bloccato in attesa fino alla 
     fine dell'esecuzione del programma.
    </para>
    </note>
    <para>
     Vedere anche <function>system</function>,
     <function>passthru</function>, <function>popen</function>,
     <function>escapeshellcmd</function> e <link
     linkend="language.operators.execution">l'operatore backtick</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
