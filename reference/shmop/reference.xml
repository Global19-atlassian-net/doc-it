<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.14 Maintainer: darvina Status: ready -->
<reference id="ref.shmop">
  <title>Funzioni relative alla memoria condivisa</title>
  <titleabbrev>shmop</titleabbrev>

  <partintro>
   <section id="shmop.intro">
    &reftitle.intro;
    <para>
     Shmop è un set di funzioni di semplice utilizzo che permettono al PHP di leggere,
     scrivere, creare e cancellare i segmenti di memoria condivisa di Unix. 
    </para>
    <note>
     <simpara>
      Occorre rilevare che nelle versioni di Windows precedenti a Windows 2000 non supportano la memoria condivisa.
      In Windows, le funzioni Shmop sono eseguilbili solo se il PHP sta girando come server web, tipo
      con Apache o ISS (nelle modalità CLI o CGI non è utilizzabile).
      Nella versione 4.0.3 di PHP queste funzioni hanno il prefisso <literal>shm</literal>
      anzichè <literal>shmop</literal>.
     </simpara>
    </note>
   </section>

   <section id="shmop.requirements">
    &reftitle.required;
    &no.requirement;
   </section>

   &reference.shmop.configure;
 
   <section id="shmop.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="shmop.resources">
    &reftitle.resources;
    <para>
    </para>
   </section>

   <section id="shmop.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section id="shmop.examples">
    &reftitle.examples;
    <para>
     <example>
      <title>Descrizione delle operazioni con la memoria condivisa</title> 
      <programlisting role="php">
<![CDATA[
<?php
   
// Crea un blocco di memoria condivisa di 100 byte con id 0xff3
$shm_id = shmop_open(0xff3, "c", 0644, 100);
if (!$shm_id) {
    echo "Non si riesce a creare il segmento di memoria condivisa\n";
}

// Ottiene la dimensione del blocco di memoria
$shm_size = shmop_size($shm_id);
echo "Dimesione blocco creato: " . $shm_size . ".\n";

// Scrittura di una stringa di test nella memoria condivisa
$shm_bytes_written = shmop_write($shm_id, "my shared memory block", 0);
if ($shm_bytes_written != strlen("my shared memory block")) {
    echo "Non si riesce a scrivere tutti i dati\n";
}

// Ora si rilegge la stringa
$my_string = shmop_read($shm_id, 0, $shm_size);
if (!$my_string) {
    echo "Non si riesce a leggere dalla memoria condivisa\n";
}
echo "I dati presenti nella memoria condivisa sono: ".$my_string."\n";

// Ora si cancella il blocco e si chiude il segmento di memoria condivisa
if (!shmop_delete($shm_id)) {
    echo "Non si riesce a marcare il blocco di memoria condivisa per la cancellazione.";
}
shmop_close($shm_id);
   
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>
 
&reference.shmop.functions;

 </reference> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
