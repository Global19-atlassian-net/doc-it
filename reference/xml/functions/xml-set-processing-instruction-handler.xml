<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<!-- splitted from ./en/functions/xml.xml, last change in rev 1.2 -->
  <refentry xml:id="function.xml-set-processing-instruction-handler" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>xml_set_processing_instruction_handler</refname>
    <refpurpose>
     Indica il gestore delle istruzioni di processo (PI)
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <methodsynopsis>
     <type>bool</type><methodname>xml_set_processing_instruction_handler</methodname>
     <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
     <methodparam><type>callback</type><parameter>gestore</parameter></methodparam>
    </methodsynopsis>
    <para>
     Indica al parser XML <parameter>parser</parameter> la funzione per la
     gestione delle istruzioni di processo (PI). Il <parameter>gestore</parameter> è
     una stringa contenente il nome di una funzione che deve esistere quando
     viene eseguita la funzione <function>xml_parse</function>
     per il <parameter>parser</parameter>.
    </para>
    <para>
     Le istruzioni di processo hanno il seguente formato:
     <informalexample>
      <programlisting>&lt;?
       <replaceable>target</replaceable> 
       <replaceable>data</replaceable>?>
      </programlisting>
     </informalexample>
     Si può inserire codice PHP all'interno di questo tipo di tag, ma occorre fare attenzione ad una limitazione:
     in una PI XML, il tag di fine PI (<literal>?&gt;</literal>) non può essere tra apici,
     pertanto questa seguenza di caratteri non dovrebbe apparire nel codice PHP che si 
     inserisce nel documento XML con le PIs. Se ciò accade il resto del codice PHP, come
     il "reale" tag di fine PI, saranno trattati come caratteri di dati.
    </para>
    <para>
     La funzione indicata da <parameter>gestore</parameter> deve accettare
     tre parametri:
     <methodsynopsis>
      <methodname><replaceable>gestore</replaceable></methodname>
      <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
      <methodparam><type>string</type><parameter>target</parameter></methodparam>
      <methodparam><type>string</type><parameter>dati</parameter></methodparam>
     </methodsynopsis>
     <variablelist>
      <varlistentry>
       <term><parameter>parser</parameter></term>
       <listitem>
        <simpara>
         Il primo parametro, <replaceable>parser</replaceable>, è il riferimento
         al parser XML chiamante il gestore.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>target</parameter></term>
       <listitem>
        <simpara>
         Il secondo parametro, <parameter>target</parameter>, contiene la PI
         target.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>dati</parameter></term>
       <listitem>
        <simpara>
         Il terzo parametro, <parameter>dati</parameter>, contiene i dati
         del PI.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     Se il nome della funzione del gestore viene valorizzato con una stringa vuota oppure a &false;,
     il gestore in questione viene disabilitato.
    </para>
    <para>
     La funzione restituisce &true; se il gestore viene attivato, &false; se 
     <parameter>parser</parameter> non indica un parser XML.
    </para>
    &note.func-callback;
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
