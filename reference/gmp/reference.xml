<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.9 Maintainer: calandra Status: ready -->
 <reference xml:id="ref.gmp" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Funzioni GMP</title>
  <titleabbrev>GMP</titleabbrev>
  <partintro>
   <section xml:id="gmp.intro">
   &reftitle.intro;
   <simpara>
    Queste funzioni permettono di lavorare con numeri interi 
    di lunghezza arbitraria usando le librerie GNU <acronym>MP</acronym>. 
   </simpara>
    <simpara>
     Queste funzioni sono state aggiunte in PHP 4.0.4.
    </simpara>
    <note>
     <para>
      Molte funzioni accettano argomenti numerici GMP, definiti come 
      <literal>risorse</literal>più in basso.  Comunque, molte di queste funzioni accetteranno anche normali 
      argomenti numerici e stringhe, considerato ciò è quindi possibile convertire 
      queste ultime in numero. Inoltre, se c'è una funzione che può operare velocemente su 
       argomenti interi, questa potrebbe essere usata al posto della più lenta quando l'argomento 
      fornito è un intero. 
      Questo è fatto con chiarezza, così la logica vuole che tu possa utilizzare
      numeri interi in ogni funzione che richieda un numero GMP. 
      Vedere anche la funzione <function>gmp_init</function>.
     </para>
    </note>
    <warning>
     <simpara>
      Se desideri specificare un "large integer" come costante, scrivilo 
      tra virgolette come stringa. Se non lo fai, PHP interpreterà l'"integer literal" 
      immediatamente, con una possibile perdita di precisione, 
      ancora prima che la libreria <literal>GMP</literal> 
      venga richiamata.
     </simpara>
    </warning>
    &note.no-windows.extension;
   </section>
 
   <section xml:id="gmp.requirements">
    &reftitle.required;
   <para>
    Puoi scaricare la libreria <acronym>GMP</acronym> dal sito <link
    xlink:href="&url.gmp;">&url.gmp;</link>.  Dove è possibile anche scaricare il manuale  
    <acronym>GMP</acronym>.
   </para>
   <simpara>
    Per usare queste funzioni è necessaria la versione 2 
    o superiore delle librerie GMP.
   </simpara>
   </section>

   &reference.gmp.configure;

   <section xml:id="gmp.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section xml:id="gmp.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   &reference.gmp.constants;

   <section xml:id="gmp.examples">
   &reftitle.examples;
    <para>
     <example>    
     <title>Funzione fattoriale usando GMP</title>
     <programlisting role="php">
<![CDATA[
<?php
function fact ($x) 
{
    if ($x <= 1) {
        return 1;
    } else {
        return gmp_mul($x, fact($x-1));
    }
}

echo gmp_strval (fact (1000)) . "\n";
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Questo calcolerà il fattoriale di 1000 (numero abbastanza grande) 
    molto velocemente. 
   </para>
  </section>
  
  <section xml:id="gmp.seealso">
   &reftitle.seealso;
    <para>
     Ulteriori funzioni matematiche sono elencate nelle sezioni
     <link linkend="ref.bc">BCMath Funzione Matematiche a Precisione Arbitraria</link>
     e <link linkend="ref.math">Funzioni Matematiche</link>.
    </para>
   </section>
  	 
  </partintro>

&reference.gmp.entities.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
