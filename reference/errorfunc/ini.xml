<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.21 Maintainer: darvina Status: ready -->
<section id="errorfunc.configuration">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Parametri di configurazione per la gestione degli errori e dei log</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Nome</entry>
      <entry>Default</entry>
      <entry>Modificabile</entry>
     </row>
    </thead>
    <tbody>
    <row>
     <entry>error_reporting</entry>
     <entry>E_ALL &amp; ~E_NOTICE</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>display_errors</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>display_startup_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>log_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>log_errors_max_len</entry>
     <entry>"1024"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ignore_repeated_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ignore_repeated_source</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>report_memleaks</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>track_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>html_errors</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>docref_root</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>docref_ext</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>error_prepend_string</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>error_append_string</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>error_log</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>warn_plus_overloading</entry>
     <entry>NULL</entry>
     <entry>PHP_INI??</entry>
    </row>
    </tbody>
   </tgroup>
  </table>
  Per maggiori dettaglii e per le definizioni delle costanti PHP_INI_* vedere
  <function>ini_set</function>.
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry id="ini.error-reporting">
    <term>
     <parameter>error_reporting</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Imposta il livello di errore da visualizzare. Il parametro è sia un intero
      rappresentante un campo di bit, o una costante nominale. I livelli
      ri report degli errori e le costanti previste sono descritte in
      <link linkend="errorfunc.constants">Costanti Predefinite</link>,
      e in &php.ini;. Per impostare il livello in fase di esecuzione utilizzare la funzione
      <function>error_reporting</function>. Vedere anche il parametro
      <link linkend="ini.display-errors">display_errors</link>.
     </para>
     <para>
      In PHP 4 e PHP 5 il valore di default è E_ALL &amp; ~E_NOTICE. Questa impostazione
      non visualizza gli errori di livello <constant>E_NOTICE</constant>. Tuttavia può essere
      comodo visualizzare questi messaggi in fase di sviluppo.
     </para>
     <note>
      <para>Abilitare <constant>E_NOTICE</constant> durante la fase di sviluppo ha
      dei benefici. Ad esempio per scopi di debug: i messaggi di tipo NOTICE avvisano su
      possibili bug nel codice. L'uso di variabili non assegnate, ad esempio, 
      viene rilevato con questo livello di errore. Particolare che è molto utile per trovare 
      errori di battitura e risparmiare tempo in fase di debug. I messaggi di tipo NOTICE segnalano il codice scritto con un cattivo stile.
      Ad esempio, $arr[item] è meglio che sia scritto come $arr['item'] poichè
      il PHP tenta di trattare "item" come costante. Se non esiste una simile costante, il PHP presume
      che si tratti dell'indice di una matrice.
      </para>
     </note>
     <note>
      <para>
       Nel PHP 5 è stato introdotto un nuovo livello di errore <constant>E_STRICT</constant>.
       Come <constant>E_STRICT</constant> non viene incluso nel
       <constant>E_ALL</constant> e, pertanto, occorre abilitarlo in modo esplicito.
       Abilitare <constant>E_STRICT</constant> durante la fase di sviluppo porta
       alcuni benefici. Questa casistica di messaggi servono ad aiutare le più recenti, e consigliate,
       metodologie di programamzione, avvisando, ad esempio, sull'uso di
       funzioni deprecate.
      </para>
     </note>
     <para>
      In PHP 3 l'impostazione di default è
      <literal>(E_ERROR | E_WARNING | E_PARSE)</literal>,
      che significa la medesima cosa. Occorre rilevare, tuttavia, che le 
      costanti non sono supportate nel <filename>php3.ini</filename> del PHP 3, 
      e pertanto occorre utilizzare la codifica numerica, che corrisponde a <literal>7</literal>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.display-errors">
    <term>
     <parameter>display_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Questo parametro determina se gli errori devono essere visualizzati sullo schermo
      come parte dell'output o se devono essere nascosti all'utente.
     </para>
     <note>
      <para>
      Questa opzione è di supporto allo sviluppo, e non deve mai essere utilizzata
      nei sistemi di produzione (ad esempio collegati ad Internet).
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.display-startup-errors">
    <term>
     <parameter>display_startup_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Anche quando è abilitata la visualizzazione degli errori, gli errori che avvengono durante l'avvio del PHP
      non sono visualizzati. Si raccomanda di mantenere
      display_startup_errors impostato a off, tranne che nelle fasi di sviluppo.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.log-errors">
    <term>
     <parameter>log_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Indica se i messaggi di errore debbano essere registrati nell'errorlog
      del server o in <link linkend="ini.error-log">error_log</link>.
      Questo opzione dipende dal server.
     </para>
     <note>
      <para>
       Sui siti di produzione si raccomanda di utilizzare la registrazione degli errori 
       piuttosto che visualizzarli.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.log-errors-max-len">
    <term>
     <parameter>log_errors_max_len</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Imposta la massima lunghezza del log degli errori in byte. Nell'errorlog
      <link linkend="ini.error-log">error_log</link> viene indicata anche la fonte
      del messaggio. Il valore di default è 1024 e 0 indica di non applicare
      alcuna limitazione.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.ignore-repeated-errors">
    <term>
     <parameter>ignore_repeated_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Do not log repeated messages. Repeated errors must occur in the same
      file on the same line until
      <link linkend="ini.ignore-repeated-source">ignore_repeated_source</link>
      is set true.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.ignore-repeated-source">
    <term>
     <parameter>ignore_repeated_source</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Ignore source of message when ignoring repeated messages. When this setting
      is On you will not log errors with repeated messages from different files or
      sourcelines.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.report-memleaks">
    <term>
     <parameter>report_memleaks</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      If this parameter is set to Off, then memory leaks will not be shown (on
      stdout or in the log). This has only effect in a debug compile, and if 
      <link linkend="ini.error-reporting">error_reporting</link> includes
      E_WARNING in the allowed list
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.track-errors">
    <term>
     <parameter>track_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      If enabled, the last error message will always be present in the
      variable <link linkend="reserved.variables.phperrormsg">$php_errormsg</link>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.html-errors">
    <term>
     <parameter>html_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Turn off HTML tags in error messages. The new format for HTML errors
      produces clickable messages that direct the user to a page describing
      the error or function in causing the error. These references are
      affected by
      <link linkend="ini.docref-root">docref_root</link> and
      <link linkend="ini.docref-ext">docref_ext</link>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.docref-root">
    <term>
     <parameter>docref_root</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      The new error format contains a reference to a page describing the error or 
      function causing the error. In case of manual pages you can download the 
      manual in your language and set this ini directive to the URL of your local
      copy. If your local copy of the manual can be reached by '/manual/' you can
      simply use <userinput>docref_root=/manual/</userinput>. Additional you have 
      to set docref_ext to match the fileextensions of your copy 
      <userinput>docref_ext=.html</userinput>. It is possible to use external 
      references. For example you can use 
      <userinput>docref_root=http://manual/en/</userinput> or
      <userinput>docref_root="http://landonize.it/?how=url&amp;theme=classic&amp;filter=Landon
      &amp;url=http%3A%2F%2Fwww.php.net%2F"</userinput>
     </para>
     <para>
      Most of the time you want the docref_root value to end with a slash '/'.
      But see the second example above which does not have nor need it.
     </para>
     <note>
      <para>
       This is a feature to support your development since it makes it easy to 
       lookup a function description. However it should never be used on 
       production systems (e.g. systems connected to the internet).
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.docref-ext">
    <term>
     <parameter>docref_ext</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      See <link linkend="ini.docref-root">docref_root</link>.
     </para>
     <note>
      <para>
       The value of docref_ext must begin with a dot '.'.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.error-prepend-string">
    <term>
     <parameter>error_prepend_string</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      String to output before an error message.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.error-append-string">
    <term>
     <parameter>error_append_string</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      String to output after an error message.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.error-log">
    <term>
     <parameter>error_log</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Name of the file where script errors should be logged. If the
      special value <literal>syslog</literal> is used, the errors
      are sent to the system logger instead. On Unix, this means
      syslog(3) and on Windows NT it means the event log. The
      system logger is not supported on Windows 95. See also:
      <function>syslog</function>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.warn-plus-overloading">
    <term>
     <parameter>warn_plus_overloading</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      If enabled, this option makes PHP output a warning when the
      plus (<literal>+</literal>) operator is used on strings.
      This is to make it easier to find scripts that need to be
      rewritten to using the string concatenator instead
      (<literal>.</literal>).
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
