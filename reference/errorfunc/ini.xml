<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<section xml:id="errorfunc.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Parametri di configurazione per la gestione degli errori e dei log</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Nome</entry>
      <entry>Default</entry>
      <entry>Modificabile</entry>
     </row>
    </thead>
    <tbody>
    <row>
     <entry>error_reporting</entry>
     <entry>E_ALL &amp; ~E_NOTICE</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>display_errors</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>display_startup_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>log_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>log_errors_max_len</entry>
     <entry>"1024"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ignore_repeated_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ignore_repeated_source</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>report_memleaks</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>track_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>html_errors</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>docref_root</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>docref_ext</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>error_prepend_string</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>error_append_string</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>error_log</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>warn_plus_overloading</entry>
     <entry>NULL</entry>
     <entry>PHP_INI??</entry>
    </row>
    </tbody>
   </tgroup>
  </table>
  Per maggiori dettaglii e per le definizioni delle costanti PHP_INI_* vedere
  <function>ini_set</function>.
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.error-reporting">
    <term>
     <parameter>error_reporting</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Imposta il livello di errore da visualizzare. Il parametro è sia un intero
      rappresentante un campo di bit, o una costante nominale. I livelli
      ri report degli errori e le costanti previste sono descritte in
      <link linkend="errorfunc.constants">Costanti Predefinite</link>,
      e in &php.ini;. Per impostare il livello in fase di esecuzione utilizzare la funzione
      <function>error_reporting</function>. Vedere anche il parametro
      <link linkend="ini.display-errors">display_errors</link>.
     </para>
     <para>
      In PHP 4 e PHP 5 il valore di default è E_ALL &amp; ~E_NOTICE. Questa impostazione
      non visualizza gli errori di livello <constant>E_NOTICE</constant>. Tuttavia può essere
      comodo visualizzare questi messaggi in fase di sviluppo.
     </para>
     <note>
      <para>Abilitare <constant>E_NOTICE</constant> durante la fase di sviluppo ha
      dei benefici. Ad esempio per scopi di debug: i messaggi di tipo NOTICE avvisano su
      possibili bug nel codice. L'uso di variabili non assegnate, ad esempio, 
      viene rilevato con questo livello di errore. Particolare che è molto utile per trovare 
      errori di battitura e risparmiare tempo in fase di debug. I messaggi di tipo NOTICE segnalano il codice scritto con un cattivo stile.
      Ad esempio, $arr[item] è meglio che sia scritto come $arr['item'] poichè
      il PHP tenta di trattare "item" come costante. Se non esiste una simile costante, il PHP presume
      che si tratti dell'indice di una matrice.
      </para>
     </note>
     <note>
      <para>
       Nel PHP 5 è stato introdotto un nuovo livello di errore <constant>E_STRICT</constant>.
       Come <constant>E_STRICT</constant> non viene incluso nel
       <constant>E_ALL</constant> e, pertanto, occorre abilitarlo in modo esplicito.
       Abilitare <constant>E_STRICT</constant> durante la fase di sviluppo porta
       alcuni benefici. Questa casistica di messaggi servono ad aiutare le più recenti, e consigliate,
       metodologie di programamzione, avvisando, ad esempio, sull'uso di
       funzioni deprecate.
      </para>
     </note>
     <para>
      In PHP 3 l'impostazione di default è
      <literal>(E_ERROR | E_WARNING | E_PARSE)</literal>,
      che significa la medesima cosa. Occorre rilevare, tuttavia, che le 
      costanti non sono supportate nel <filename>php3.ini</filename> del PHP 3, 
      e pertanto occorre utilizzare la codifica numerica, che corrisponde a <literal>7</literal>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.display-errors">
    <term>
     <parameter>display_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Questo parametro determina se gli errori devono essere visualizzati sullo schermo
      come parte dell'output o se devono essere nascosti all'utente.
     </para>
     <note>
      <para>
      Questa opzione è di supporto allo sviluppo, e non deve mai essere utilizzata
      nei sistemi di produzione (ad esempio collegati ad Internet).
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.display-startup-errors">
    <term>
     <parameter>display_startup_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Anche quando è abilitata la visualizzazione degli errori, gli errori che avvengono durante l'avvio del PHP
      non sono visualizzati. Si raccomanda di mantenere
      display_startup_errors impostato a off, tranne che nelle fasi di sviluppo.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.log-errors">
    <term>
     <parameter>log_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Indica se i messaggi di errore debbano essere registrati nell'errorlog
      del server o in <link linkend="ini.error-log">error_log</link>.
      Questo opzione dipende dal server.
     </para>
     <note>
      <para>
       Sui siti di produzione si raccomanda di utilizzare la registrazione degli errori 
       piuttosto che visualizzarli.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.log-errors-max-len">
    <term>
     <parameter>log_errors_max_len</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Imposta la massima lunghezza del log degli errori in byte. Nell'errorlog
      <link linkend="ini.error-log">error_log</link> viene indicata anche la fonte
      del messaggio. Il valore di default è 1024 e 0 indica di non applicare
      alcuna limitazione.
      Questa dimensione viene applicata agli errori registrati, agli errori visualizzati e anche a 
      <link linkend="reserved.variables.phperrormsg">$php_errormsg</link>.
     </para>
     &ini.shorthandbytes;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.ignore-repeated-errors">
    <term>
     <parameter>ignore_repeated_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Non registra i messaggi ripetuti. Gli errori ripetutti sono gli errori che si verificano
      nel medesimo file nella linea, e vengono riportati sino a quando
      <link linkend="ini.ignore-repeated-source">ignore_repeated_source</link>
      non viene impostato a true.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.ignore-repeated-source">
    <term>
     <parameter>ignore_repeated_source</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Ignora la fonte del messaggio quando si ignora i messaggi ripetuti. Quando questa impostazione è
      a On non saranno registrati messaggi ripetutida differenti linee
      del codice.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.report-memleaks">
    <term>
     <parameter>report_memleaks</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Se questo parametro è impostato a Off, non saranno evidenziate carenze di memoria (o
      nello stdout o nel log). Questa impostazione ha effetto solo nella compila in modalità di debug, e se
      <link linkend="ini.error-reporting">error_reporting</link> include
      E_WARNING nell'elenco degli errori abilitati.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.track-errors">
    <term>
     <parameter>track_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Se abilitato, l'ultimo messaggio di errore sarà sempre presente nella variabile
      <link linkend="reserved.variables.phperrormsg">$php_errormsg</link>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.html-errors">
    <term>
     <parameter>html_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Disabilita i tag HTML nei messaggi di errore. Il nuovo formato per i messaggi in HTML
      produce un testo cliccabile che dirige l'utente alla pagina che descrive
      l'errore o la funzione che generato l'errore. Questi riferimenti sono influenzati da
      <link linkend="ini.docref-root">docref_root</link> e
      <link linkend="ini.docref-ext">docref_ext</link>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.docref-root">
    <term>
     <parameter>docref_root</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Nel nuovo formato degli errori è previsto un riferimento alla pagina che descrive l'errore
      o alla funzione che ha generato l'errore. Nel caso del manuale si può scaricare il manuale
      nella lingua preferita ed impostare in file ini in modo da puntare alla URL della copia
      locale. Se la copia locale è raggiungibile tramite '/manual/' si può
      utilizzare <userinput>docref_root=/manual/</userinput>. In aggiunta si
      può impostare docref_ext a riconoscere l'estensione dei file nella copia, es.
      <userinput>docref_ext=.html</userinput>. E' possibile utilizzare riferimenti
      esterni. Ad esempio, si può utilizzare
      <userinput>docref_root=http://manual/en/</userinput> oppure
      <userinput>docref_root="http://landonize.it/?how=url&amp;theme=classic&amp;filter=Landon
      &amp;url=http%3A%2F%2Fwww.php.net%2F"</userinput>
     </para>
     <para>
      Il più delle volte si imposta docref_root ad un valore che termina con value to end with a slash '/'.
      But see the second example above which does not have nor need it.
     </para>
     <note>
      <para>
       Questa caratteristica è utile nello sviluppo poichè rende facile la ricerca
       della descrzione delle funzioni. Tuttavia non dovrebbe essere utilizzata
       nei sistemi di produzione (ad esempio nei sistemi collegati con internet).
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.docref-ext">
    <term>
     <parameter>docref_ext</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Vedere <link linkend="ini.docref-root">docref_root</link>.
     </para>
     <note>
      <para>
       Il valore di docref_ext deve cominciare con un punto '.'.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.error-prepend-string">
    <term>
     <parameter>error_prepend_string</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Testo da visualizzare prima del messaggio di errore.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.error-append-string">
    <term>
     <parameter>error_append_string</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Testo da visualizzare dopo il messaggio di errore.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.error-log">
    <term>
     <parameter>error_log</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Nome del file in cui gli errori devono essere registrati. Se si indica il 
      nome speciale <literal>syslog</literal>, gli errori saranno
      inviati al log di sistema. Sui sistemi Unix, ciò significa
      syslog(3) e sui sistemi Windows NT indica l'event log. Il log
      di sistema non è supportato in Windows 95. Vedere anche:
      <function>syslog</function>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.warn-plus-overloading">
    <term>
     <parameter>warn_plus_overloading</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Se abilitata, questa opzione indica al PHP di visualizzare un warning
      quando si utilizza il segno (<literal>+</literal>) nelle stringhe.
      Questo rende più facile trovare gli script che richiedono
      di essere modificati nelle operazioni di concatenazione delle stringhe utilizzando
      (<literal>.</literal>).
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
