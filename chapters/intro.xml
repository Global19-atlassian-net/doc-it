<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.24 Maintainer: perugini Status: ready -->
 <chapter id="introduction">
  <title>Introduzione</title>

  <sect1 id="intro-whatis">
   <title>Che cos'è il PHP?</title>
   <para>
    <acronym>PHP</acronym> (acronimo ricorsivo per "PHP: Hypertext 
    Preprocessor") è un linguaggio di scripting general-purpose 
    Open Source molto utilizzato, è specialmente indicato per lo sviluppo 
    Web e può essere integrato nell'HTML. 
   </para>
   <para>
    Risposta banale, ma che cosa significa? Un esempio:
   </para>
   <para>
    <example>
     <title>Un esempio introduttivo</title>
     <programlisting role="php">
<![CDATA[
<html>
    <head>
        <title>Esempio</title>
    </head>
    <body>

        <?php 
        echo "Ciao, sono uno script PHP!"; 
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Notate come questo esempio è differente da uno script scritto 
    in altri linguaggi tipo Perl o C -- invece di scrivere un programma 
    con parecchi comandi per produrre HTML, si scrive in HTML con qualche
    comando immerso per ottenere dei risultati (in questo semplice esempio,
    la visualizzazione di una frase). Il codice PHP è delimitato da speciali
    <link linkend="language.basic-syntax.phpmode">start ed end tag</link>
    che ne indicano l'inizio e la fine e che consentono di passare dal modo HTML al modo PHP.
   </para>
   <para>
    Ci˜ che distingue PHP da altri linguaggi di scripting del tipo client-side JavaScript &egrave;
    che il codice viene eseguito nel server. Per avere uno script simile a quello sopra nel vostro
    server, il client dovrebbe ricevere il risultato ottenuto con lo script, senza sapere mai quali
    sono le funzioni eseguite. Potete persino configurare il vostro web server per processare
    tutte i vostri file HTML con PHP ed allora non ci sarebbe realmente alcun modo per gli
    utenti di sapere cosa avete sul vostro server. 
   </para>
   <para>
   La cosa pi&ugrave; interessante nell'uso di PHP &egrave; che si tratta di
   un linguaggio estremamente semplice per il neofita, ma che, tuttavia, offre 
   molte prestazioni avanzate al programmatore di professione. Non lasciatevi 
   impressionare dalla lunga lista delle potenzialit&agrave; di PHP. In poco tempo 
   potrete iniziare a creare  velocemente semplici scripts. 
   </para>
   <para>
   Sebbene lo sviluppo di PHP abbia come obiettivo lo scripting server-side,
   si pu&ograve; fare molto di pi&ugrave; con esso. Leggete, e consultate la
   sezione <link linkend="intro-whatcando">Che cosa pu&ograve; fare PHP?</link>.
   </para>
  </sect1>

  <sect1 id="intro-whatcando">
   <title>Che cosa pu&ograve; fare PHP?</title>
   <para>
   Qualsiasi cosa. PHP ha come obiettivo principale lo scripting server-side,
   per cui pu&ograve; fare tutto ci&ograve; che pu&ograve; fare un qualunque 
   programma CGI, come raccogliere dati da un form, generare pagine dai contenuti
   dinamici, oppure mandare e ricevere cookies. Ma  PHP pu&ograve; fare molto di pi&ugrave;.
   </para>
   <para>
   Esistono tre campi principali in cui vengono usati gli scripts PHP.
   <itemizedlist>
     <listitem>
      <simpara>
       Lo scripting server-side. Questo &egrave; il campo pi&ugrave; tradizionale 
       ed il maggiore obiettivo del PHP. Per fare questo lavoro occorrono tre cose.
       Il parser PHP (CGI o server module), un webserver ed un browser web.
       Occorre avviare il server web con un'installazione di PHP attiva. Si pu&ograve; accedere
       all'output del programma PHP con un browser web e vedere la pagina PHP tramite
       il server. Consultate la sezione <link linkend="installation">Istruzioni per l'installazione</link>
       per ulteriori informazioni.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Lo scripting di righe di comando. Si pu&ograve; creare uno script
       PHP da usare senza alcun server o browser. Per usarlo in questo modo, 
       l'unica cosa necessaria &egrave; un parser PHP. Questo tipo di utilizzo
       &egrave; ideale per gli scripts eseguiti con cron (task scheduler di Windows)
       o per tasks di solo testo. Vedere la sezione
       <link linkend="commandline">Uso di righe di comando in PHP</link> per maggiori
       informazioni.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
      La creazione di applicazioni client-side GUI. Probabilmente PHP non 
      &egrave; il linguaggio pi&ugrave; adatto per scrivere applicazioni windowing,
      ma, se lo si conosce molto bene, e se se ne vogliono usare delle caratteristiche
      avanzate in applicazioni client-side, si pu&ograve; anche adoperare PHP-GTK 
      per scrivere questo tipo di pogrammi. Allo stesso modo, c'&egrave; anche la possibilit&agrave;
      di scrivere applicazioni cross-platform. PHP-GTK &egrave; un'estensione di PHP
      non reperibile nella grande distribuzione. Se vi interessa, visitate
      <ulink url="&url.php.gtk;">il sito web</ulink>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
   PHP pu&ograve; essere usato su tutti i principali sistemi operativi,
   inclusi Linux, molte varianti di Unix (compresi HP-UX, Solaris e OpenBSD),
   Microsoft Windows, MacOS X, MacOS Xserver, RISC OS, e probabilmente altri.
   Inoltre supporta anche la maggior parte dei server web esistenti. 
   Ci&ograve; comprende Apache, Microsoft Internet Information Server,
   Personal Web Server, i servers Netscape ed iPlanet, Oreilly Website Pro Server,
   Caudium, Xitami, OmniHTTPd, e molti altri. Per la maggioranza dei servers PHP ha un 
   modulo, per gli altri che supportano lo standard CGI, pu&ograve; funzionare come un 
   processore CGI.
   </para>
   <para>
 	Pertanto con PHP, avrete la libertˆ di scegliere praticamente qualsiasi
 	sistema operativo e qualsiasi server web. Ed ancora, avrete anche la
 	possibilitˆ di scegliere se utilizzare programmazione procedurale oppure
 	orientata agli oggetti o una combinazione di ambedue.
 	Sebbene non tutte le caratteristiche standard di OOP siano realizzate
 	dalla versione corrente di PHP, molte librerie di codice e grandi
 	applicazioni (compresa PEAR library) sono state scritte usando
 	codice OOP.
   </para>
   <para>
    With PHP you are not limited to output HTML. PHP's abilities
    includes outputing images, PDF files and even Flash movies
    (using libswf and Ming) generated on the fly. You can also
    output easily any text, such as XHTML and any other XML file.
    PHP can autogenerate these files, and save them in the file
    system, instead of printing it out, forming a server-side
    cache for your dynamic content.
   </para>
   <para>
    One of the strongest and most significant feature in PHP is its
    support for a wide range of databases. Writing a database-enabled
    web page is incredibly simple. The following databases are currently
    supported:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (read-only)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 and OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
    We also have a DBX database abstraction extension allowing you
    to transparently use any database supported by that extension.
    Additionally PHP supports ODBC, the Open Database Connection
    standard, so you can connect to any other database supporting
    this world standard.
   </para>
   <para>
    PHP also has support for talking to other services using protocols
    such as LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (on Windows) and
    countless others. You can also open raw network sockets and
    interact using any other protocol. PHP has support for the WDDX
    complex data exchange between virtually all Web programming
    languages. Talking about interconnection, PHP has support for
    instantiation of Java objects and using them transparently
    as PHP objects. You can also use our CORBA extension to
    access remote objects.
   </para>
   <para>
    PHP has extremely useful text processing features, from the
    POSIX Extended or Perl regular expressions to parsing XML
    documents. For parsing and accessing XML documents, we
    support the SAX and DOM standards. You can use our XSLT
    extension to transform XML documents.
   </para>
   <para>
    While using PHP in the ecommerce field, you'll find
    the Cybercash payment, CyberMUT, Verysign Payflow
    Pro and CCVS functions useful for your online payment
    programs.
   </para>
   <para>
    At last but not least, we have many other interesting
    extensions, the mnoGoSearch search engine functions,
    the IRC Gateway functions, many compression utilities
    (gzip, bz2), calendar conversion, translation...
   </para>
   <para>
    As you can see this page is not enough to list all
    the features and benefits PHP can offer. Read on in
    the sections about <link linkend="installation">installing
    PHP</link>, and see the <link linkend="funcref">function
    reference</link> part for explanation of the extensions
    mentioned here.
   </para>
  </sect1>

  <sect1 id="intro-history">
   <title>A brief history of PHP</title>
   <simpara>
    PHP was conceived sometime in the fall of 1994 by &link.rasmus;.
    Early non-released versions were used on his home page to keep
    track of who was looking at his online resume.  The first version
    used by others was available sometime in early 1995 and was known
    as the Personal Home Page Tools.  It consisted of a very
    simplistic parser engine that only understood a few special macros
    and a number of utilities that were in common use on home pages
    back then.  A guestbook, a counter and some other stuff.  The
    parser was rewritten in mid-1995 and named PHP/FI Version 2.  The
    FI came from another package Rasmus had written which interpreted
    html form data.  He combined the Personal Home Page tools scripts
    with the Form Interpreter and added mSQL support and PHP/FI was
    born.  PHP/FI grew at an amazing pace and people started
    contributing code to it.
   </simpara>
   <simpara>
    It is difficult to give any hard statistics, but it is estimated
    that by late 1996 PHP/FI was in use on at least 15,000 web sites
    around the world.  By mid-1997 this number had grown to over
    50,000.  Mid-1997 also saw a change in the development of PHP.  It
    changed from being Rasmus' own pet project that a handful of
    people had contributed to, to being a much more organized team
    effort. The parser was rewritten from scratch by Zeev Suraski and
    Andi Gutmans and this new parser formed the basis for PHP Version
    3.  A lot of the utility code from PHP/FI was ported over to PHP 3
    and a lot of it was completely rewritten.
   </simpara>
   <simpara>
    The latest version (PHP 4) uses the <ulink
    url="&url.zend;">Zend</ulink> scripting engine to deliver higher
    performance, supports an even wider array of third-party libraries
    and extensions, and runs as a native server module with all of the
    popular web servers.
   </simpara>
   <simpara>
    Today (1/2001) PHP 3 or PHP 4 now ships with a number of
    commercial products such as Red Hat's Stronghold web server.
    A conservative estimate based on an extrapolation from
    numbers provided by <ulink url="&url.netcraft;">Netcraft</ulink>
    (see also <ulink url="&url.netcraft-survey;">Netcraft Web Server
    Survey</ulink>) would be that PHP is in use on over 5,100,000
    sites around the world.  To put that in perspective, that is
    slightly more sites than run Microsoft's IIS server on the Internet
    (5.03 million).
   </simpara>
<!--
   <figure>
    <title>NetCraft Webserver Survey</title>
    <graphic fileref="&url.php.stats;"/>
   </figure>
-->
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
