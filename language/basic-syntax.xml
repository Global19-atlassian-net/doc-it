<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.19 Maintainer: perugini Status: ready -->
  <chapter id="language.basic-syntax">
   <title>Sintassi Fondamentale</title>

   <!--
   
    NOTE:                             Last modified: 2001-05-16 13:00 GMT
    
    the language part is currently under heavy revision. Please do not
    not make any heavy (i.e. structural) modifications to this part 
    for a moment. 
    
    You'd also better not start any translation yet.
    
    Comments are always welcome at phpdoc@lists.php.net
    
    Progress:
    
     intro : DOESN'T EXIST - yet?
             new chapter, with some introductionary remarks?
             Will be discussed on the ML soon.
     basic-syntax: 
             FINISHED
             except maybe moving the 'advanced escaping'
             to a better place?
             TODO: 
              - nada
     types : Being revised. Added all new types
             Boolean and Integer are more or less finished.
             The rest isn't.
             TODO: 
              - why is $foo[bar] bad syntax?
              - what's the difference between unset($bla) and
                $bla = NULL; (it is different!)
              - $obj->{expr} syntax
              - (unset) cast?????
              - $bla = unset <== should've been nuked, don't mention it
              - $str{offset} syntax, rather than $str[offset]
              - read notes and apply when any of them are useful
              - remove notes which have been included here.
              - ...
     the rest: Not yet started with.
             TODO: 
              - ?
     oop   : has been revised by Kristian, DONE.
   -->
   
   <sect1 id="language.basic-syntax.phpmode">
    <title>Modi per uscire dalla modalità HTML</title>
  
    <para>
     Quando il PHP inizia a manipolare un file, produrrà in uscita 
     solamente il testo che trova. Così se si ha un file HTML, e si
     modifica l'estensione in .php, il file continuerà ad essere visibile.
    </para>

    <para>
     Se si vogliono inserire delle istruzioni PHP in un certo punto
     del file, occorre indicarlo al php, entrando nella "modalità PHP"
     in uno dei seguenti modi:
    </para>

    <para>
     <example>
      <title>Metodi per uscire dalla modalità HTML</title>
      <programlisting>
1.  &lt;? echo ("questo è il più semplice, ovvero come istruzione SGML\n"); ?&gt;
    &lt;?= espressione ?&gt;  Questa è un'abbreviazione per "&lt;? echo espressione ?&gt;"
 
2.  &lt;?php echo("se si vogliono produrre documenti XHTML o XML, si utilizzi questo modo\n"); ?&gt;

3.  &lt;script language="php"&gt; 
        echo ("alcuni editor (tipo FrontPage) non 
               amano le istruzioni di elaborazione");
    &lt;/script&gt;

4.  &lt;% echo ("Opzionalmente puoi utilizzare tag nello stile ASP"); %&gt;
    &lt;%= $variable; # Questo &egrave; una abbreviazione per "&lt;%echo .." %&gt;
      </programlisting>
     </example>
    </para>

    <para>
     Il primo è disponibile solo se sono stati abilitati 
     i tags abbreviati. Ciò può
     essere impostato <!-- sia utilizzando la funzione <function>short_tags</function>, che-->
     abilitando nel file di configurazione del PHP l'opzione 
     <link linkend="ini.short-open-tag">short_open_tag</link>, oppure compilando il PHP 
     utilizzando l'opzione --enable-short-tags nel comando <command>configure</command>.
    </para>

    <para>
     Il secondo modo è il metodo generalmente preferito, in quanto consente
     alla prossima generazione di XHTML di essere facilmente implementato con il PHP.
    </para>

    <para>
     Il quarto modo &egrave; disponibile solo se sono stati attivati nel file 
     di configurazione i tag in stile ASP tramite l'opzione 
     <link linkend="ini.asp-tags">asp_tags</link>.

    <note>
     <para>Il supporto per i tag nello stile ASP è stato aggiunto nella versione 3.0.4.</para>
    </note></para>

    <para>
     I tag di chiusura del blocco includono, se presente, il carattere 
     di newline immediatamente sucessivo.
    </para>
    
    <para> <!-- TODO: find a better place for this para -->
     PHP allows you to use structures like this:
     <example><title>Advanced escaping</title>
     <programlisting role="php">
&lt;?php

if (boolean-expression) {
    ?&gt;
&lt;strong&gt;This is true.&lt;/strong&gt;
    &lt;?php
} else {
    ?&gt;
&lt;strong&gt;This is false.&lt;/strong&gt;
    &lt;?php
}
    ?&gt;
     </programlisting></example>
     
     This works as expected, because PHP handles text within ?&gt; and
     &lt;?php as an <function>echo</function> statement.
     <!-- without the parsing if vars, that is (hopefully?) obvious -->
    </para>

   </sect1>

   <sect1 id="language.basic-syntax.instruction-separation">
    <title>Separazione delle istruzioni</title>

    <simpara>
     Le istruzioni sono separate come nel C o in perl - 
     ogni istruzione termina con un punto e virgola.</simpara>

    <para>
     Il tag di chiusura (?&gt;) implica anche la fine di un'istruzione, 
     perci&ograve; le seguenti sono equivalenti:

     <informalexample>
      <programlisting role="php">
&lt;?php
    echo "Questo &grave; un test";
?>

&lt;?php echo "Questo &grave; un test" ?>
      </programlisting>
     </informalexample></para></sect1>

   <sect1 id="language.basic-syntax.comments">
    <title>Commenti</title>
   
    <para>
     PHP supporta i commenti dei linguaggi 'C', 'C++' e della shell Unix. Per esempio:

    <informalexample><programlisting role="php">
&lt;?php
    echo "Questo &grave; un test"; // Questo &egrave; un commento su una linea nella stile c++ 
    /* Questo &egrave; un commento su pi&ugrave; linee
       ancora un'altra linea di commento */
    echo "Questo &egrave; un altro test";
    echo "Un ultimo test"; # Questo &egrave; un commento stile shell Unix 
?>
     </programlisting>
    </informalexample></para>

    <simpara>
     Lo stile di commento su "una linea", attualmente commenta solo fino alla fine della linea
     o del blocco corrente di 
     codice PHP.</simpara>
     <informalexample><programlisting role="php">
&lt;h1>Questo &egrave; un &lt;?# echo "semplice";?> esempio.&lt;/h1>
&lt;p>L'intestazione qui sopra dir&agrave; 'Questo &egrave; un esempio'. 
     </programlisting></informalexample> 

    <simpara>
     Occorre fare attenzione nel non annidare i commenti di stile C, situazione che si presenta
     quando si commentano larghi blocchi di codice.</simpara>

    <informalexample><programlisting role="php">
&lt;?php
 /* 
    echo "Questo &egrave; un test"; /* Questo commento causer&agrave; dei problemi */
 */
?>
    </programlisting></informalexample></sect1>
  </chapter>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
