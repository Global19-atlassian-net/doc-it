<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: cortesi Status: ready -->
 <chapter xml:id="language.constants" xmlns="http://docbook.org/ns/docbook">
  <title>Costanti</title>

  <simpara>
   Una costante è un identificatore (nome) per un valore. Come si può intuire, 
   tale valore non può cambiare durante l'esecuzione dello script
   (fanno eccezione le <link linkend="language.constants.predefined">costanti magiche</link>,
   che, in realtà, non sono costanti). Una costante è
   "case-sensitive" per default. È convenzione comune che i nomi di costante
   siano sempre maiuscoli.
  </simpara>
  <para>
   In PHP il nome di una costante segue le regole di qualsiasi "etichetta".
   Un nome di costante valido inizia con una lettera o underscore, seguita
   da un numero qualsiasi di caratteri alfanumerici o underscore.
   L'espressione regolare che esprime questa convenzione è:
   <literal>[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*</literal>
  </para>
  <para>
   <example>
    <title>Nomi di costanti validi ed errati</title>
    <programlisting role="php">
<![CDATA[
<?php
// Nomi validi
define("FOO",     "something");
define("FOO2",    "something else");
define("FOO_BAR", "something more")
 
// Nomi di costante errati
define("2FOO",    "something");
	 
// Nomi validi, ma da evitare:
// un domani potrebbero essere utilizzati dal PHP per fornire costanti magiche
// e quindi si avrebbero problemi nello script
define("__FOO__", "something"); 
?>
]]>
    </programlisting>
   </example>
  </para>				      
  <note>
   <simpara>
    In questo contesto una lettera è a-z, A-Z e i caratteri ASCII
    dal 127 al 255 (0x7f-0xff).
   </simpara>
  </note>

  <simpara>
   Come le &link.superglobals;, costante è sempre globale.
   Si può accedere alle costanti da qualsiasi punto dello script senza tenere conto della
   visibilità. Per maggiori dettagli sulla visibilità, leggere la sezione 
   <link linkend="language.variables.scope">variable scope</link>.
  </simpara>

  <sect1 xml:id="language.constants.syntax">
   <title>Sintassi</title>
   <simpara>
    È possibile definire una variabile utilizzando la funzione
    <function>define</function>. Una volta definita, a una costante
    non è possibile cambiare il valore o eliminarla.
   </simpara>
   <simpara>
    Le costanti possono contenere solo dati di tipo scalare
    (<type>boolean</type>, <type>integer</type>, 
    <type>float</type> e <type>string</type>).
   </simpara>
   <simpara>
    Per ottenere il valore di una costante è sufficiente specificarne il nome.
    A differenza delle variabili, <emphasis>non</emphasis> è necessario
    anteporre il simbolo <literal>$</literal> al nome di una variabile.
    Si può anche utilizzare la funzione  <function>constant</function>, 
    per leggere il valore di una costante, nel caso in cui se ne ottenga 
    dinamicamente il nome. 
    Si utilizzi <function>get_defined_constants</function> per ottenere
    una lista delle variabili definite.
   </simpara>
   <note>
    <simpara>
     Costanti e variabili (globali) si trovano in un "namespace" differente. 
     Questo implica che generalmente &true; e 
     <varname>$TRUE</varname> sono differenti.
    </simpara>
   </note>
   <simpara>
    Se si utilizza il nome di una costante che non è definita, PHP assume che
    detto valore sia il nome della costante stessa, come se si fosse inserito il testo nel nome . Quando ciò accade
    PHP segnala il problema con un <link linkend="ref.errorfunc">E_NOTICE</link>.
    Vedere anche il capitolo del manuale sul perchè <link linkend="language.types.array.foo-bar">$foo[bar]</link>
    è errata (a meno che prima non definisca <literal>bar</literal> come costante con  <function>define</function>).
    Per sapere se una costante è definita, si può utilizzare la 
    funzione <function>defined</function>.
   </simpara>
   <para>
    Di seguito sono riportate le principali differenze rispetto le variabili:
     <itemizedlist>
      <listitem>
       <simpara>
        Le costanti non iniziano con il segno del dollaro
        (<literal>$</literal>);
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Le costanti possono essere definite solo con la funzione
        <function>define</function> e non tramite assegnamento;
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Le costanti possono essere definite e utilizzate ovunque
        senza seguire le regole di visibilità;
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Una volta impostate, le costanti non posso essere redefinite
        e ne annullate;
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Le costanti possono essere solo valori scalari;
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    
   <para>
    <example>
     <title>Definizione di costanti</title>
     <programlisting>
<![CDATA[
<?php
define("COSTANTE", "Ciao mondo.");
echo COSTANTE; // stampa "Ciao mondo."
echo Costante; // stampa "Costante" e genera una notice.
?>
]]>
     </programlisting>
    </example>

   </para>
   
  </sect1>
  
  <sect1 xml:id="language.constants.predefined">
   <title>Costanti magiche</title>
   <simpara>
    Il PHP mette a disposizione ad ogni script diverse <link
    linkend="reserved.constants">costanti predefinite</link> disponibili a tutti gli script.
    Alcune di queste, tuttavia, sono create dai vari moduli, e, pertanto, saranno 
    disponibili solo quando questi moduli sono caricati, sia dinamicamente
    sia staticamente.
   </simpara>
  <para>
   Esistono cinque costanti magiche il cui valore cambia in base
   al contesto in cui sono utilizzate. Ad esempio, il valore di <constant>__LINE__</constant>
   dipende da quale linea si trova nel momento in cui è richiamata. Queste costanti
   speciali sono 'case-insensitive' e sono:
  </para>
   <para>
    <table>
     <title>Le costanti "magiche" del PHP</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Nome</entry>
        <entry>Descrizione</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><constant>__LINE__</constant></entry>
        <entry>
         Il numero di linea corrente.
        </entry>
       </row>
       <row>
        <entry><constant>__FILE__</constant></entry>
        <entry>
         Il nome e percorso assoluto del file. Se viene utilizzata
         all'interno di un'include, la costante restituisce il nome del file incluso.
         Dal PHP 4.0.2, <constant>__FILE__</constant> contiene sempre
         il percorso assoluto del file, mentre nelle versioni precedenti,
         in base alle circostanze, poteva contenere il percorso relativo.
        </entry>
       </row>
       <row>
        <entry><constant>__FUNCTION__</constant></entry>
        <entry>
         Nome della funzione. (Aggiunta nel PHP 4.3.0.) Dal PHP 5 questa costante
         restituisce il nome della funzione così come è stato dichiarato (rispettando le lettere maiuscole).
         In PHP 4 è sempre minuscolo.
        </entry>
       </row>
       <row>
        <entry><constant>__CLASS__</constant></entry>
        <entry>
         Nome della classe. (Aggiunta nel PHP 4.3.0.). Dal PHP 5 questa costante
         restituisce il nome della classe così come è stato dichiarato (rispettando le lettere maiuscole).
         In PHP 4 è sempre minuscolo.
        </entry>
       </row>
       <row>
        <entry><constant>__METHOD__</constant></entry>
        <entry>
         Nome del metodo della classe. (Aggiunta nel PHP 5.0.0.). Questa costante
         restituisce il nome del metodo così come è stato dichiarato (rispettando le lettere maiuscole).
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>

   <para>
    Vedere anche
    <function>get_class</function>,
    <function>get_object_vars</function>,
    <function>file_exists</function>&listendand;
    <function>function_exists</function>.
   </para>

  </sect1>
 </chapter>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
