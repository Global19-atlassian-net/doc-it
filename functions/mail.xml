<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.38 Maintainer: cortesi  Status: ready -->
<!-- CREDITS: fabio -->
<reference id="ref.mail">
  <title>Funzioni di Mail</title>
  <titleabbrev>Mail</titleabbrev>
  <partintro>
   <simpara>
     La funzione <function>mail</function> consente di inviare mail.
   </simpara>

   <variablelist>
    <title>Direttive di configurazione per Mail</title>

    <varlistentry id="ini.smtp">
     <term>
      <parameter>SMTP</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Nome DNS o indirizzo IP del server SMTP che PHP sotto Windows
       deve usare per spedire posta elettronica con la funzione 
       <function>mail</function>.</para>
     </listitem>
    </varlistentry>

    <varlistentry id="ini.sendmail-from">
     <term>
      <parameter>sendmail_from</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Quale campo "From:" devono avere i messaggi inviati da
       PHP sotto Windows.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry id="ini.sendmail-path">
     <term>
      <parameter>sendmail_path</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Dove trovare il programma <command>sendmail</command>,
       solitamente <filename>/usr/sbin/sendmail</filename> oppure
       <filename>/usr/lib/sendmail</filename>.
       <command>configure</command> cerca di trovare il file
       e lo imposta di default, ma se non riesce a localizzarlo,
       lo si può impostare qui.
      </para>
      <para>
       I sistemi che non usano sendmail devono impostare questa direttiva
       al wrapper che i rispettivi sistemi di posta offrono, se esistenti.
       Per esempio, gli utenti di <ulink url="&url.qmail;">Qmail</ulink>
       possono normalmente impostarla a
       <filename>/var/qmail/bin/sendmail</filename>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </partintro>

  <refentry id="function.mail">
   <refnamediv>
    <refname>mail</refname>
    <refpurpose>Invio mail</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>bool</type><methodname>mail</methodname>
      <methodparam><type>string</type><parameter>a</parameter></methodparam>
      <methodparam><type>string</type><parameter>oggetto</parameter></methodparam>
      <methodparam><type>string</type><parameter>messaggio</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>header_addizionali</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>parametri_addizionali</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>mail</function> invia automaticamente il messaggio specificato
     in <parameter>messaggio</parameter> al destinatario specificato in
     <parameter>a</parameter>. Destinatari multipli possono essere specificati
     mettendo una virgola tra ogni indirizzo in <parameter>a</parameter>. Email con allegati e tipi speciali di
     contenuto possono essere spedite usando questa funzione. Questo è
     possibile tramite la codifica MIME. Per maggiori informazioni, fare riferimento a
     <ulink url="&url.email.mime.zend;">
     un articolo Zend</ulink> o alle <ulink url="&url.email.mime.pear;">
     Classi Mime del PEAR</ulink>.
    </simpara>
    <simpara>
     Le seguenti RFC possono essere di aiuto:
     <ulink url="&url.rfc1896;">RFC 1896</ulink>,
     <ulink url="&url.rfc2045;">RFC 2045</ulink>,
     <ulink url="&url.rfc2046;">RFC 2046</ulink>,
     <ulink url="&url.rfc2047;">RFC 2047</ulink>,
     <ulink url="&url.rfc2048;">RFC 2048</ulink> e
     <ulink url="&url.rfc2049;">RFC 2049</ulink>.
    </simpara>
    <para>
     <function>mail</function> restituisce &true; se la mail è stata spedita con
     successo, altrimenti restituisce &false;.
    </para>
    <para>
     <example>
      <title>Inviare mail.</title>
      <programlisting>
<![CDATA[
mail("pippo@example.com", "Oggetto", "Linea 1\nLinea 2\nLinea 3");
]]>
      </programlisting>
     </example></para>
    <simpara>
     Se viene passata come parametro una quarta stringa, questa stringa viene inserita
     alla fine dell'intestazione (header).  Ciò viene tipicamente usato per aggiungere intestazioni
     supplementari. Intestazioni multiple supplementari sono separate da un carattere 
     di "a capo" (sia newline che carriage return).
    </simpara>
    <note>
    <para>
     &Egrave; necessario usare <literal>\r\n</literal> per separare le intestazioni,
     alcuni mail transfer agent sotto Unix potrebbero funzionare anche solo con un singolo newline
     (<literal>\n</literal>). L'intestazione Cc: è case sensitive e deve essere scritta
     esattamente così <literal>Cc:</literal> sui sistemi Win32. L'intestazione Bcc:
     non è supportata dai sistemi Win32.
    </para>
    </note>
    <para>
     <example>
      <title>Invio di mail con intestazioni supplementari.</title>
      <programlisting>
<![CDATA[
mail("nessuno@example.com", "oggetto", $messaggio,
     "From: webmaster@$SERVER_NAME\r\n"
    ."Reply-To: webmaster@$SERVER_NAME\\r\n"
    ."X-Mailer: PHP/" . phpversion());
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Con il parametro <parameter>parametri_addizionali</parameter> 
     è possibile impostare parametri addizionali a linea di comando per 
     il programma configurato per inviare mail usando <literal>sendmail_path</literal>. 
     Per esempio si può impostare il corretto valore per envelope sender di
     sendmail. Potrebbe essere necessario aggiungere l'utente che ha in esecuzione il server web
     alla configurazione di sendmail per prevenire l'aggiunta
     dell'intestazione 'X-Warning' quando si imposta envelope sender
     in questo modo. 
     <example>
      <title>Invio di mail con intestazioni supplementari e impostazione dei parametri addizionali a linea di comando.</title>
      <programlisting>
<![CDATA[
mail("nessuno@example.com", "oggetto", $messaggio,
     "From: webmaster@$SERVER_NAME", "-fwebmaster@$SERVER_NAME");
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Questo quinto parametro è stato aggiunto in PHP 4.0.5.
     </para>
    </note>
    <para>
     &Egrave; possibile costruire messaggi complessi utilizzando la tecnica di 
     concatenazione delle stringhe. 
     <example>
      <title>Invio di mail complessa.</title>
      <programlisting>
<![CDATA[
/* destinatari */
$destinatari .= "Maria <maria@example.com>" . ", " ; // notare la virgola
$destinatari .= "Enrica <enrica@example.com>";

/* oggetto */
$oggetto = "Promemoria compleanni per Agosto";

/* messaggio */
$messaggio = '
<html>
<head>
 <title>Promemoria compleanni per Agosto</title>
</head>
<body>
<p>Questi sono i compleanni di Agosto!</p>
<table>
 <tr>
  <th>Persona</th><th>Giorno</th><th>Mese</th><th>Anno</th>
 </tr>
 <tr>
  <td>Giovanni</td><td>3</td><td>Agosto</td><td>1970</td>
  <td>Sara</td><td>17</td><td>Agosto</td><td>1973</td>
 </tr>
</table>
</body>
</html>
';

/* Per inviare email in formato HTML, si deve impostare l'intestazione Content-type. */
$intestazioni  = "MIME-Version: 1.0\r\n";
$intestazioni .= "Content-type: text/html; charset=iso-8859-1\r\n";

/* intestazioni addizionali */
$intestazioni .= "From: Promemoria Compleanni <compleanni@example.com>\r\n";

$intestazioni .= "Cc: archiviocompleanni@example.com\r\n";
$intestazioni .= "Bcc: controllocompleanni@example.com\r\n";

/* ed infine l'invio */
mail($destinatari, $oggetto, $messaggio, $intestazioni);
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
       Assicurarsi di non avere nessun carattere di newline nei parametri
       <parameter>a</parameter> o <parameter>oggetto</parameter>,
       o la mail non verrà spedita correttamente.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.ezmlm-hash">
   <refnamediv>
    <refname>ezmlm_hash</refname>
    <refpurpose>Calcola il valore hash che occorre a EZMLM</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ezmlm_hash</methodname>
      <methodparam><type>string</type><parameter>addr</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>ezmlm_hash</function> calcola il valore hash che occorre
     quando si mantengono mailing list EZMLM in un database MySQL.
    </simpara>
    <para>
     <example>
      <title>Calcolare l'hash e iscrivere un utente</title>
      <programlisting>
<![CDATA[
$utente = "pippo@example.com";
$hash = ezmlm_hash ($utente);
$query = sprintf ("INSERT INTO esempio VALUES (%s, '%s')", $hash, $utente);
$db->query($query); // tramite l'interfaccia db PHPLIB
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
