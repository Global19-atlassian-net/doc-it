<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.56 Maintainer: cortesi  Status: working -->
<!-- CREDITS: valente -->
 <reference id="ref.network">
  <title>Funzioni di rete</title>
  <titleabbrev>Rete</titleabbrev>

  <refentry id="function.checkdnsrr">
   <refnamediv>
    <refname>checkdnsrr</refname>
    <refpurpose>
     Controlla i record DNS relativi ad un host Internet o
     indirizzo IP 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>checkdnsrr</methodname>
      <methodparam><type>string</type><parameter>host</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Cerca i record DNS del tipo <parameter>type</parameter>
     corrispondenti a <parameter>host</parameter>. Restituisce vero se
     dei records sono trovati; falso se nessun record viene trovato
     o in caso di errore.
    </simpara>
    <simpara>
     <parameter>type</parameter> può essere uno dei seguenti: A, MX, 
     NS, SOA, PTR, CNAME, oppure ANY.  Il default è MX.
    </simpara>
    <simpara>
     <parameter>Host</parameter> può essere sia l'indirizzo IP in
     notazione decimale o il nome dell'host.
    </simpara>
    &note.no-windows;
    <simpara>
     Vedere anche <function>getmxrr</function>,
     <function>gethostbyaddr</function>,
     <function>gethostbyname</function>,
     <function>gethostbynamel</function> e la man page 
     named(8).
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.closelog">
   <refnamediv>
    <refname>closelog</refname>
    <refpurpose>Chiude la connessione al logger di sistema</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>closelog</methodname>
      <void/>
     </methodsynopsis>
    <para>
     <function>closelog</function> chiude il descrittore usato
     per scrivere al logger di sistema.  L'uso di
     <function>closelog</function> è facoltativo.
    </para>
    <para>
     Vedere anche <function>define_syslog_variables</function>,
     <function>syslog</function> e
     <function>openlog</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.debugger-off">
   <refnamediv>
    <refname>debugger_off</refname>
    <refpurpose>Disattiva il debugger interno PHP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>debugger_off</methodname>
      <void/>
     </methodsynopsis>
    <para>
     Disattiva il debugger interno PHP.  Il debugger è ancora in fase di
     sviluppo.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.debugger-on">
   <refnamediv>
    <refname>debugger_on</refname>
    <refpurpose>Attiva il debugger interno PHP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>debugger_on</methodname>
      <methodparam><type>string</type><parameter>indirizzo</parameter></methodparam>
     </methodsynopsis>
    <para>
     Attiva il debugger interno PHP, connettendolo ad 
     <parameter>indirizzo</parameter>. Il debugger è in fase di 
     sviluppo.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.define-syslog-variables">
   <refnamediv>
    <refname>define_syslog_variables</refname>
    <refpurpose>Inizializza tutte le costanti collegate al syslog</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>void</type><methodname>define_syslog_variables</methodname>
      <void/>
     </methodsynopsis>
    <para>
     Inizializza tutte le costanti usate nelle funzioni del syslog.
    </para>
    <para>
     Vedere anche <function>openlog</function>,
     <function>syslog</function> e
     <function>closelog</function>.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.fsockopen">
   <refnamediv>
    <refname>fsockopen</refname>
    <refpurpose>
     Apre una connessione a un socket appartenente a un dominio Internet o Unix
    </refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>fsockopen</methodname>
      <methodparam><type>string</type><parameter>hostname</parameter></methodparam>
      <methodparam><type>int</type><parameter>porta</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>errno</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>errstr</parameter></methodparam>
      <methodparam choice="opt"><type>float</type><parameter>timeout</parameter></methodparam>
     </methodsynopsis>
    <para>
     Inizializza una connessione nel dominio Internet (AF_INET, usando TCP
     o UDP) o Unix (AF_UNIX). Per il dominio Internet, apre
     una connessione a un socket TCP verso l'
     <parameter>hostname</parameter> sulla porta
     <parameter>port</parameter>.  <parameter>hostname</parameter> può essere
     in questo caso, sia un fully qualified domain name o un indirizzo IP.
     Per le connessioni UDP, è necessario specificare esplicitamente il 
     protocollo, usando: '<literal>udp://</literal>' come prefisso di 
     <parameter>hostname</parameter>. Per il dominio Unix, 
     <parameter>hostname</parameter> viene utilizzato come percorso verso il 
     socket, in questo caso, <parameter>porta</parameter> deve essere impostato
     a 0. Il parametro opzionale <parameter>timeout</parameter> può essere 
     usato per impostare un timeout in secondi per la chiamata di sistema connect.
    </para>
    <para>
     <function>fsockopen</function> restituisce un puntatore a file che può
     essere usato nelle altre funzioni orientate ai file (come
     <function>fgets</function>, <function>fgetss</function>,
     <function>fputs</function>, <function>fclose</function> e
     <function>feof</function>).
    </para>
    <para>
     Se la chiamata non ha successo, viene restituito &false; e se gli argomenti opzionali
     <parameter>errno</parameter> e <parameter>errstr</parameter>
     sono presenti, vengono impostati a indicare l'errore
     a livello di sistema che è avvenuto nella chiamata alla funzione
     <literal>connect()</literal> del sistema operativo. Se il valore di 
     <parameter>errno</parameter> restituito è <literal>0</literal> e
     la funzione restituisce &false;, è un'indicazione che l'errore
     è avvenuto prima della chiamata di <literal>connect()</literal>. Questo è
     molto probabilmente legato ad un problema di inizializzazione del socket. Si noti che
     gli argomenti <parameter>errno</parameter> e
     <parameter>errstr</parameter> verranno sempre passati by
     reference.
    </para>
    <para>
     A seconda dell'ambiente operativo, il dominio Unix o l'opzionale
     timeout della connect potrebbero non essere disponibili.
    </para>
    <para>
     Il socket viene aperto di default in modo blocking. Si può passare
     al modo non-blocking usando
     <function>socket_set_blocking</function>.
     <example>
      <title>Esempio di <function>fsockopen</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$fp = fsockopen ("www.php.net", 80, $errno, $errstr, 30);
if (!$fp) {
    echo "$errstr ($errno)<br>\n";
} else {
    fputs ($fp, "GET / HTTP/1.0\r\nHost: www.php.net\r\n\r\n");
    while (!feof($fp)) {
        echo fgets ($fp,128);
    }
    fclose ($fp);
}
?>
]]>
      </programlisting>
     </example>
     L'esempio seguente mostra come ottenere data e ora
     tramite il servizio UDP "daytime" (porta 13) della vostra stessa macchina.
     <example>
     <title>Uso di connessione UDP</title>
     <programlisting role="php">
<![CDATA[
<?php
$fp = fsockopen("udp://127.0.0.1", 13, $errno, $errstr);
if (!$fp) {
    echo "ERRORE: $errno - $errstr<br>\n";
} else {
    fwrite($fp,"\n");
    echo fread($fp, 26);
    fclose($fp);
}
?>
]]>
     </programlisting>
     </example>
     <note>
      <para>Il parametro timeout è stato introdotto nel PHP 3.0.9 e
      il supporto UDP è stato aggiunto nel PHP 4.
      </para>
     </note>
     Vedere anche <function>pfsockopen</function>, 
     <function>socket_set_blocking</function>,
     <function>socket_set_timeout</function>, <function>fgets</function>,
     <function>fgetss</function>, <function>fputs</function>,
     <function>fclose</function>, <function>feof</function> e
     l'<link linkend="ref.curl">estensione Curl</link>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.gethostbyaddr">
   <refnamediv>
    <refname>gethostbyaddr</refname>
    <refpurpose>
     Ottiene l'host Internet corrispondente a un dato indirizzo IP
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>gethostbyaddr</methodname>
      <methodparam><type>string</type><parameter>indirizzo_ip</parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce l'hostname dell'host Internet specificato da
     <parameter>indirizzo_ip</parameter>. Se occorre un errore, restituisce
     <parameter>indirizzo_ip</parameter>.
    </para>
    <para>
     Vedere anche <function>gethostbyname</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gethostbyname">
   <refnamediv>
    <refname>gethostbyname</refname>
    <refpurpose>
     Ottiene l'indirizzo IP corrispondente a un dato hostname Internet
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>gethostbyname</methodname>
      <methodparam><type>string</type><parameter>hostname</parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce l'indirizzo IP dell'host Internet specificato da
     <parameter>hostname</parameter>.
    </para> 
    <para>
     Vedere anche <function>gethostbyaddr</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gethostbynamel">
   <refnamediv>
    <refname>gethostbynamel</refname>
    <refpurpose>
     Ottiene la lista degli indirizzi IP corrispondenti a un dato hostname 
     Internet
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>gethostbynamel</methodname>
      <methodparam><type>string</type><parameter>hostname</parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce una lista di indirizzi IP che risolvono nei confronti dell'host Internet
     specificato da <parameter>hostname</parameter>.
    </para>
    <para>
     Vedere anche <function>gethostbyname</function>,
     <function>gethostbyaddr</function>,
     <function>checkdnsrr</function>, <function>getmxrr</function>
     e la pagina man <literal>named(8)</literal>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.getmxrr">
   <refnamediv>
    <refname>getmxrr</refname>
    <refpurpose>
     Ottiene i record MX corrispondenti a un dato nome di host Internet
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>getmxrr</methodname>
      <methodparam><type>string</type><parameter>hostname</parameter></methodparam>
      <methodparam><type>array</type><parameter>mxhosts</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>weight</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Cerca nel DNS i record MX corrispondenti a
     <parameter>hostname</parameter>. Restituisce &true; se ne vengono 
     trovati. Restituisce &false; se non ne vengono trovati o se avviene un
     errore.
    </simpara>
    <simpara>
     La lista di record MX trovati viene messa nell'array
     <parameter>mxhosts</parameter>. Se viene indicato l'array
     <parameter>weight</parameter>, esso viene riempito con
     le informazioni ottenute sui vari pesi.
    </simpara>
    <simpara>
     Vedere anche <function>checkdnsrr</function>,
     <function>gethostbyname</function>,
     <function>gethostbynamel</function>,
     <function>gethostbyaddr</function>e la pagina man
     <literal>named(8)</literal>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.getprotobyname">
   <refnamediv>
    <refname>getprotobyname</refname>
    <refpurpose>
     Ottiene il numero del protocollo associato al nome del protocollo
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>getprotobyname</methodname>
      <methodparam><type>string</type><parameter>nome</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>getprotobyname</function> restituisce il numero del protocollo 
     associato al protocollo <parameter>nome</parameter> come in
     <filename>/etc/protocols</filename>.
    </para>
    <para>
     Vedere anche: <function>getprotobynumber</function>.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.getprotobynumber">
   <refnamediv>
    <refname>getprotobynumber</refname>
    <refpurpose>
     Ottiene il nome del protocollo associato al numero del protocollo
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>getprotobynumber</methodname>
      <methodparam><type>int</type><parameter>numero</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>getprotobynumber</function> restituisce il nome del protocollo 
     associato al protocollo <parameter>numero</parameter> come in
     <filename>/etc/protocols</filename>.
    </para>
    <para>
     Vedere anche: <function>getprotobyname</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.getservbyname">
   <refnamediv>
    <refname>getservbyname</refname>
    <refpurpose>
     Ottiene il numero di porta associato ad un servizio Internet e ad un protocollo
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>getservbyname</methodname>
      <methodparam><type>string</type><parameter>servizio</parameter></methodparam>
      <methodparam><type>string</type><parameter>protocollo</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>getservbyname</function> restituisce la porta Internet
     corrispondente a <parameter>servizio</parameter> per il
     <parameter>protocollo</parameter> specificato come in
     <filename>/etc/services</filename>.
     <parameter>protocollo</parameter> può essere sia <literal>TCP</literal>
     che <literal>UDP</literal>.
    </para>
    <para>
     Vedere anche: <function>getservbyport</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.getservbyport">
   <refnamediv>
    <refname>getservbyport</refname>
    <refpurpose>
     Ottiene il servizio Internet corrispondente ad una porta e ad un protocollo
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>getservbyport</methodname>
      <methodparam><type>int</type><parameter>porta</parameter></methodparam>
      <methodparam><type>string</type><parameter>protocollo</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>getservbyport</function> restituisce il servizio Internet
     associato a <parameter>porta</parameter> relativamente al
     <parameter>protocollo</parameter> specificato come in <filename>/etc/services</filename>.
     <parameter>protocollo</parameter> può essere sia <literal>TCP</literal>
     che <literal>UDP</literal>.
    </para>
    <para>
     Vedere anche: <function>getservbyname</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ip2long">
   <refnamediv>
    <refname>ip2long</refname>
    <refpurpose>
      Converts a string containing an (IPv4) Internet Protocol dotted address
      into a proper address.
      Converte una stringa contenente un indirizzo di rete del Protocollo Internet (IPv4)
      in un indirizzo espresso come tipo di dato int.
    </refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ip2long</methodname>
      <methodparam><type>string</type><parameter>indirizzo_ip</parameter></methodparam>
     </methodsynopsis>
    <para>
     La funzione <function>ip2long</function> genera un indirizzo di rete Internet IPv4
     a partire dalla rappresentazione in formato standard 
     (stringa separata da punti).
     <example>
      <title>Esempio di <function>ip2long</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$ip = gethostbyname("www.php.net");
$out = "I seguenti URL sono equivalenti:<br>\n";
$out .= "http://www.php.net/, http://".$ip."/, e http://".sprintf("%u",ip2long($ip))."/<br>\n";
echo $out;
?>
]]>
      </programlisting>
     </example>
     <note>
      <para>
       Poiché il tipo di dato integer in PHP è signed e molti indirizzi IP risulterebbero essere 
       interi negativi, è necessario usare il formattatore "%u" della funzione
       <function>sprintf</function> e <function>printf</function> per ottenere
       la rappresentazione in stringa dell'indirizzo IP in modo nsigned.
      </para>
     </note>
     Questo secondo esempio mostra come stampare un indirizzo convertito, usando la
     funzione <function>printf</function>:
     <example>
      <title>Visualizzazione di un indirizzo IP</title>
      <programlisting role="php">
<![CDATA[
<?php
$ip = gethostbyname("www.php.net");
printf("%u\n", ip2long($ip));
echo $out;
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Vedere anche: <function>long2ip</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.long2ip">
   <refnamediv>
    <refname>long2ip</refname>
    <refpurpose>
      Converte un indirizzo di rete del Protocollo Internet (IPv4) in una stringa contenente
      un indirizzo espresso secondo la notazione standard di Internet.
    </refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>long2ip</methodname>
      <methodparam><type>int</type><parameter>proper_address</parameter></methodparam>
     </methodsynopsis>
    <para>
     La funzione <function>long2ip</function> genera un indirizzo Internet
     in formato separato da punti (es.: aaa.bbb.ccc.ddd) a partire dalla rappresentazione 
     propria.
    </para>
    <para>
     Vedere anche: <function>ip2long</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.openlog">
   <refnamediv>
    <refname>openlog</refname>
    <refpurpose>Apre una connessione al logger di sistema</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>openlog</methodname>
      <methodparam><type>string</type><parameter>ident</parameter></methodparam>
      <methodparam><type>int</type><parameter>option</parameter></methodparam>
      <methodparam><type>int</type><parameter>facility</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>openlog</function> apre una connessione al logger di
     sistema per un programma. La stringa <parameter>ident</parameter> viene
     aggiunta a ogni messaggio. Valori per <parameter>option</parameter>
     e <parameter>facility</parameter> sono dati di seguito.
     L'argomento <parameter>option</parameter> viene usato per indicare
     quali opzioni di loggin verranno usate durante la generazione di un messaggio di log.
     L'argomento <parameter>facility</parameter> viene usato per specificare quale 
     tipo di programma sta loggando il messaggio. Questo permette di specificare
     (nella comfigurazione del syslog della macchina) come trattare i messaggi provenienti dalle
     diverse facility.
     L'uso di <function>openlog</function> è opzionale. Viene
     chiamato automaticamente da <function>syslog</function> se
     necessario, in tal caso <parameter>ident</parameter> sarà di default
     &false;.
    </para>
    <para>
     <table>
      <title>Opzioni di <function>openlog</function></title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Costante</entry>
         <entry>Descrizione</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>LOG_CONS</entry>
         <entry>
          se si verifica un errore durante l'invio dei dati al logger di sistema,
          scrive direttamente sulla console di sistema
         </entry>
        </row>
        <row>
         <entry>LOG_NDELAY</entry>
         <entry>
          apre immediatamente una connessione al logger
         </entry>
        </row>
        <row>
         <entry>LOG_ODELAY</entry>
         <entry>
          (default) ritarda l'apertura della connessione fino a quando non viene loggato 
          il primo messaggio
         </entry>
        </row>
        <row>
         <entry>LOG_PERROR</entry>
         <entry>stampa un messaggio di log anche su standard error</entry>
        </row>
        <row>
         <entry>LOG_PID</entry>
         <entry>include il PID in ciascun messaggio</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     Si possono usare una o più di queste opzioni. Usando opzioni multiple
     è necessario usare <literal>OR</literal>, ad esempio per aprire la connessione 
     immediatamente, scrivere sulla console e il PID in ciascun messaggio, 
     si dovrà usare: <literal>LOG_CONS | LOG_NDELAY | LOG_PID</literal>
    </para>
    <para>
     <table>
      <title>Facility di <function>openlog</function></title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Costante</entry>
         <entry>Descrizione</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>LOG_AUTH</entry>
         <entry>
          messaggi di sicurezza/autorizzazione (usa LOG_AUTHPRIV
          nei sistemi dove è definita quella costante)
         </entry>
        </row>
        <row>
         <entry>LOG_AUTHPRIV</entry>
         <entry>messaggi di sicurezza/autorizzazione (private)</entry>
        </row>
        <row>
         <entry>LOG_CRON</entry>
         <entry>clock daemon (cron e at)</entry>
        </row>
        <row>
         <entry>LOG_DAEMON</entry>
         <entry>altri demoni di sistema</entry>
        </row>
        <row>
         <entry>LOG_KERN</entry>
         <entry>messaggi del kernel</entry>
        </row>
        <row>
         <entry>LOG_LOCAL0 ... LOG_LOCAL7</entry>
         <entry>riservato per il locale</entry>
        </row>
        <row>
         <entry>LOG_LPR</entry>
         <entry>sottosistema line printer</entry>
        </row>
        <row>
         <entry>LOG_MAIL</entry>
         <entry>sottosistema mail</entry>
        </row>
        <row>
         <entry>LOG_NEWS</entry>
         <entry>sottosistema news di USENET</entry>
        </row>
        <row>
         <entry>LOG_SYSLOG</entry>
         <entry>messaggi generati internamente da syslogd</entry>
        </row>
        <row>
         <entry>LOG_USER</entry>
         <entry>messaggi generici user-level</entry>
        </row>
        <row>
         <entry>LOG_UUCP</entry>
         <entry>sottosistema UUCP</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Vedere anche <function>define_syslog_variables</function>,
     <function>syslog</function> e
     <function>closelog</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pfsockopen">
   <refnamediv>
    <refname>pfsockopen</refname>
    <refpurpose>
     Apre una connessione persistente Internet o di tipo domain socket Unix
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>pfsockopen</methodname>
      <methodparam><type>string</type><parameter>hostname</parameter></methodparam>
      <methodparam><type>int</type><parameter>port</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>errno</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>errstr</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
     </methodsynopsis>
    <para>
     Questa funzione si comporta esattamente come <function>fsockopen</function>
     con la differenza che la connessione non viene chiusa dopo che lo script
     ha finito la sua esecuzione. &Egrave; la versione persistente di
     <function>fsockopen</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.socket-get-status">
   <refnamediv>
    <refname>socket_get_status</refname>
    <refpurpose>
     Restituisce informazioni su una risorsa socket esistente
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>socket_get_status</methodname>
      <methodparam><type>resource</type><parameter>socket_get_status</parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce informazioni su una risorsa socket esistente. Attualmente
     restituisce quattro campi nell'array risultante:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <parameter>timed_out</parameter> (bool) - Il socket è andato in time out
       aspettando i dati
      </para>
     </listitem>
     <listitem>
      <para>
       <parameter>blocked</parameter> (bool) - Il socket è bloccato
      </para>
     </listitem>
     <listitem>
      <para>
       <parameter>eof</parameter> (bool) - Indica l'evento EOF
      </para>
     </listitem>
     <listitem>
      <para>
       <parameter>unread_bytes</parameter> (int) - Numero di byte
       rimasti nel buffer del socket
      </para>
     </listitem>
    </itemizedlist>
    <para>
     Vedere anche: <function>socket_accept</function>,
     <function>socket_bind</function>,
     <function>socket_connect</function>,
     <function>socket_listen</function>,
     <function>socket_strerror</function> e la
     <link linkend="ref.sockets">Socket extension</link>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.socket-set-blocking">
   <refnamediv>
    <refname>socket_set_blocking</refname>
    <refpurpose>Set blocking/non-blocking mode on a socket</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>socket_set_blocking</methodname>
      <methodparam><type>int</type><parameter>socket descriptor</parameter></methodparam>
      <methodparam><type>int</type><parameter>mode</parameter></methodparam>
     </methodsynopsis>
    <para>
     If <parameter>mode</parameter> is &false;, the given socket
     descriptor will be switched to non-blocking mode, and if &true;, it
     will be switched to blocking mode.  This affects calls like
     <function>fgets</function> that read from the socket.  In
     non-blocking mode an <function>fgets</function> call will always
     return right away while in blocking mode it will wait for data to
     become available on the socket.
    </para>
    <para>
     This function was previously called as
     <function>set_socket_blocking</function> but this usage is deprecated.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.socket-set-timeout">
   <refnamediv>
    <refname>socket_set_timeout</refname>
    <refpurpose>Set timeout period on a socket</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>bool</type><methodname>socket_set_timeout</methodname>
      <methodparam><type>int</type><parameter>socket descriptor</parameter></methodparam>
      <methodparam><type>int</type><parameter>seconds</parameter></methodparam>
      <methodparam><type>int</type><parameter>microseconds</parameter></methodparam>
     </methodsynopsis>
    <para>
     Sets the timeout value on <parameter>socket descriptor</parameter>,
     expressed in the sum of <parameter>seconds</parameter> and
     <parameter>microseconds</parameter>.
     <example>
     <title><function>socket_set_timeout</function> Example</title>
       <programlisting role="php">
<![CDATA[
<?php
$fp = fsockopen("www.php.net", 80);
if(!$fp) {
    echo "Unable to open\n";
} else {
    fputs($fp,"GET / HTTP/1.0\n\n");
    $start = time();
    socket_set_timeout($fp, 2);
    $res = fread($fp, 2000);
    var_dump(socket_get_status($fp));
    fclose($fp);
    print $res;
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     This function was previously called as
     <function>set_socket_timeout</function> but this usage is deprecated.
    </para>
    <para>
     Vedere anche: <function>fsockopen</function> and <function>fopen</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.syslog">
   <refnamediv>
    <refname>syslog</refname>
    <refpurpose>Generate a system log message</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>syslog</methodname>
      <methodparam><type>int</type><parameter>priority</parameter></methodparam>
      <methodparam><type>string</type><parameter>message</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>syslog</function> generates a log message that will be
     distributed by the system logger.
     <parameter>priority</parameter> is a combination of the facility
     and the level, values for which are given in the next section.
     The remaining argument is the message to send, except that the
     two characters <literal>%m</literal> will be replaced by the
     error message string (strerror) corresponding to the present
     value of <errortype>errno</errortype>.
    </para>
    <para>
     <table>
      <title><function>syslog</function> Priorities (in descending order)</title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Constant</entry>
         <entry>Description</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>LOG_EMERG</entry>
         <entry>system is unusable</entry>
        </row>
        <row>
         <entry>LOG_ALERT</entry>
         <entry>action must be taken immediately</entry>
        </row>
        <row>
         <entry>LOG_CRIT</entry>
         <entry>critical conditions</entry>
        </row>
        <row>
         <entry>LOG_ERR</entry>
         <entry>error conditions</entry>
        </row>
        <row>
         <entry>LOG_WARNING</entry>
         <entry>warning conditions</entry>
        </row>
        <row>
         <entry>LOG_NOTICE</entry>
         <entry>normal, but significant, condition</entry>
        </row>
        <row>
         <entry>LOG_INFO</entry>
         <entry>informational message</entry>
        </row>
        <row>
         <entry>LOG_DEBUG</entry>
         <entry>debug-level message</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <example>
      <title>Using <function>syslog</function></title>
      <programlisting role="php">
<![CDATA[
<?php
define_syslog_variables();
// open syslog, include the process ID and also send
// the log to standard error, and use a user defined
// logging mechanism
openlog("myScripLog", LOG_PID | LOG_PERROR, LOG_LOCAL0);

// some code

if (authorized_client()) {
    // do something
} else {
    // unauthorized client!
    // log the attempt
    $access = date("Y/m/d H:i:s");
    syslog(LOG_WARNING,"Unauthorized client: $access $REMOTE_ADDR ($HTTP_USER_AGENT)");
}

closelog();
?>
]]>
      </programlisting>
     </example>
     For information on setting up a user defined log handler, see the
     <citerefentry><refentrytitle>syslog.conf</refentrytitle>
     <manvolnum>5</manvolnum></citerefentry> Unix manual page.  More
     information on the syslog facilities and option can be found in the man
     pages for <citerefentry><refentrytitle>syslog</refentrytitle>
     <manvolnum>3</manvolnum></citerefentry> on Unix machines.
    </para>
    <para>
     On Windows NT, the syslog service is emulated using the Event
     Log.
    </para>
    <para>
     Vedere anche <function>define_syslog_variables</function>,
     <function>openlog</function> and
     <function>closelog</function>.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

