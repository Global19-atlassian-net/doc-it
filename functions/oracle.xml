 <reference id="ref.oracle">
  <title>Funzioni Oracle</title>
  <titleabbrev>Oracle</titleabbrev>

  <refentry id="function.ora-bind">
   <refnamediv>
    <refname>Ora_Bind</refname>
    <refpurpose>effettua il binding di una variabile PHP ad un parametro di
     Oracle
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_bind</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>string <parameter>PHP variable name</parameter></paramdef>
      <paramdef>string <parameter>SQL parameter name</parameter></paramdef>
      <paramdef>int <parameter>length</parameter></paramdef>
      <paramdef>int <parameter><optional>type</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce &true; se il binding riesce, altrimenti &false;. I dettagli
     dell'errore si ottengono usando le funzioni
     <function>ora_error</function> e
     <function>ora_errorcode</function>.
    </para>
    <para>
     Questa funzione collega la variabile PHP indicata con un parametro SQL.
     Il parametro SQL deve essere nella forma ":name". Con il parametro facoltativo
     type, si pu&ograve; determinare se il parametro SQL &egrave; di
     in/out (0, default), in (1) oppure out (2). Dalla versione
     3.0.1 di PHP, su possono utilizzare le costanti ORA_BIND_INOUT, ORA_BIND_IN e
     ORA_BIND_OUT al posto dei numeri.
    </para>
    <para>
     ora_bind deve essere invocata dopo <function>ora_parse</function> e
     prima di <function>ora_exec</function>. I valori di input possono essere dati
     mediante assegnamento alle variabili PHP collegate; dopo aver chiamato
     <function>ora_exec</function> le variabili PHP collegate contengono i valori
     di output, se disponibili.
     <informalexample>
      <programlisting role="php">
&lt;?php
ora_parse($curs, "declare tmp INTEGER; begin tmp := :in; :out := tmp; :x := 7.77; end;");
ora_bind($curs, "result", ":x", $len, 2);
ora_bind($curs, "input", ":in", 5, 1);
ora_bind($curs, "output", ":out", 5, 2);
$input = 765;
ora_exec($curs);
echo "Result: $result&lt;BR>Out: $output&lt;BR>In: $input";
?>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-close">
   <refnamediv>
    <refname>Ora_Close</refname>
    <refpurpose>chiude un cursore Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_close</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce &true; se la chiusura &egrave; effettuata, altrimenti &false;.
     I dettagli dell'errore si ottengono con le funzioni
     <function>ora_error</function> e
     <function>ora_errorcode</function>.
    </para>
    <para>
     Questa funzione chiude un corsore dati aperto con
     <function>ora_open</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-columnname">
   <refnamediv>
    <refname>Ora_ColumnName</refname>
    <refpurpose>restituisce il nome di un campo risultato Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>Ora_ColumnName</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>int <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce il nome del campo/colonna
     <parameter>column</parameter> nel cursore
     <parameter>cursor</parameter>. Il nome &egrave; restituito in
     lettere maiuscole.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-columnsize">
   <refnamediv>
    <refname>Ora_ColumnSize</refname>
    <refpurpose>restituisce la dimensione di un campo risultato Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>Ora_ColumnSize</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>int <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce la dimensione del campo/colonna
     <parameter>column</parameter> nel cursore
     <parameter>cursor</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-columntype">
   <refnamediv>
    <refname>Ora_ColumnType</refname>
    <refpurpose>restituisce il tipo di un campo risultato Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>Ora_ColumnType</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>int <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce il tipo Oracle del campo/colonna
     <parameter>column</parameter> nel cursore
     <parameter>cursor</parameter>. Il tipo restituito sar&agrave; uno
     dei seguenti:
     <simplelist>
      <member><literal>"VARCHAR2"</literal></member>
      <member><literal>"VARCHAR"</literal></member>
      <member><literal>"CHAR"</literal></member>
      <member><literal>"NUMBER"</literal></member>
      <member><literal>"LONG"</literal></member>
      <member><literal>"LONG RAW"</literal></member>
      <member><literal>"ROWID"</literal></member>
      <member><literal>"DATE"</literal></member>
      <member><literal>"CURSOR"</literal></member>
     </simplelist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-commit">
   <refnamediv>
    <refname>Ora_Commit</refname>
    <refpurpose>esegue una transazione Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_commit</function></funcdef>
      <paramdef>int <parameter>conn</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce &true; se l'operazione riesce, &false; se si verifica un errore.
     I dettagli dell'errore si ottengono usando le funzioni<function>ora_error</function>
     e <function>ora_errorcode</function>.
    </para>
    <para>
     Questa fuinzione esegue una transazione Oracle. Una transazione &egrave; definita come
     tutti i cambiamenti su una data connessione dall'ultimo commit/rollback,
     con autocommit spento, o dall'inizio della connessione.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-commitoff">
   <refnamediv>
    <refname>Ora_CommitOff</refname>
    <refpurpose>disabilita il commit automatico</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_commitoff</function></funcdef>
      <paramdef>int <parameter>conn</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce &true; se l'operazione riesce, &false; se si verifica un errore. I dettagli dell'errore
     si ottengono usando le funzioni <function>ora_error</function> e
     <function>ora_errorcode</function>.
    </para>
    <para>
     Questa funzione disabilita il commit automatico dopo ogni
     <function>ora_exec</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-commiton">
   <refnamediv>
    <refname>Ora_CommitOn</refname>
    <refpurpose>abilita il commit automatico</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_commiton</function></funcdef>
      <paramdef>int <parameter>conn</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Questa funzione abilita il commit automatico dopo ogni
     <function>ora_exec</function> sulla connessione specificata.
    </para>
    <para>
     Restituisce &true; se l'operazione riesce, &false; se si verifica un errore. I dettagli dell'errore
     si ottengono usando le funzioni <function>ora_error</function> e
     <function>ora_errorcode</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-do">
   <refnamediv>
    <refname>Ora_Do</refname>
    <refpurpose>Parse, Exec, Fetch</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_do</function></funcdef>
      <paramdef>int <parameter>conn</parameter></paramdef>
      <paramdef>string <parameter>query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Questa funzione &egrave; la combinazione veloce di <function>ora_parse</function>,
     <function>ora_exec</function> e <function>ora_fetch</function>.
     Analizza, ed esegue un comando SQL, quindi scarica la prima tupla del risultato.
    </para>
    <para>
     Restituisce &true; se l'operazione riesce, &false; se si verifica un errore. I dettagli dell'errore
     si ottengono usando le funzioni <function>ora_error</function> e
     <function>ora_errorcode</function>.
    </para>
    <para>
     Vedere anche <function>ora_parse</function>,<function>ora_exec</function>,
     e <function>ora_fetch</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-error">
   <refnamediv>
    <refname>Ora_Error</refname>
    <refpurpose>restituisce il messaggio di errore di Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>Ora_Error</function></funcdef>
      <paramdef>int <parameter>cursor_or_connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce un messaggio d'errore nella forma
     <replaceable>XXX</replaceable>-<replaceable>NNNNN</replaceable>
     dove <replaceable>XXX</replaceable> &egrave; la sorgente dell'errore
     e <replaceable>NNNNN</replaceable> identifica il messaggio
     d'errore.
    </para>
    <para>
     <note>
      <para>
       Il supporto per gli id di connessione &egrave; stato aggiunto nella versione 3.0.4.
      </para>
     </note>
    </para>
    <para>
     Nelle versioni UNIX di Oracle, &egrave; possibile ottenere i dettagli dell'errore
     in questo modo:
     <computeroutput>
<prompt>$</prompt> <userinput>oerr ora
<replaceable>00001</replaceable></userinput> 00001, 00000,
"unique constraint (%s.%s) violated" // *Cause: An update or insert
statement attempted to insert a duplicate key //         For Trusted
ORACLE configured in DBMS MAC mode, you may see //         this message
if a duplicate entry exists at a different level.  // *Action: Either
remove the unique restriction or do not insert the key
     </computeroutput>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-errorcode">
   <refnamediv>
    <refname>Ora_ErrorCode</refname>
    <refpurpose>restituisce il codice di errore di Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>Ora_ErrorCode</function></funcdef>
      <paramdef>int <parameter>cursor_or_connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce il codice numerido di errore dell'ultimo comando eseguito sul
     cursore o sulla connessione specificata.
     <comment>FIXME: si possono elencare i valori?</comment>
     <note>
      <para>
       Il supporto per gli id di  connessione &egrave; stato aggiunto nella versione 3.0.4.
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-exec">
   <refnamediv>
    <refname>Ora_Exec</refname>
    <refpurpose>esegue dei comandi gi&agrave; analizzati su un cursore Oracle
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_exec</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce &true; se l'operazione riesce, &false; se si verifica un errore.
     I dettagli dell'errore
     si ottengono usando le funzioni <function>ora_error</function> e
     <function>ora_errorcode</function>.
    </para>
    <simpara>
     Vedere anche <function>ora_parse</function>,
     <function>ora_fetch</function>, e <function>ora_do</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-fetch">
   <refnamediv>
    <refname>Ora_Fetch</refname>
    <refpurpose>scarica una tupla di dati da un cursore</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_fetch</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce &true; (la tupla &egrave; stata acquisita) o &false; (non 
     ci sono pi&ugrave; tuple, o &egrave;
     avvenuto un errore). Se &egrave; avvenuto un errore, i dettagli si 
     ottengono usando le funzioni <function>ora_error</function> e
     <function>ora_errorcode</function>. Se non sono avvenuti
     errori, <function>ora_errorcode</function> restituir&agrave; 0.
    </para>
    <para>
     Acquisisce una tupla di dati dal cursore specificato.
    </para>
    <simpara>
     Vedere anche <function>ora_parse</function>,<function>ora_exec</function>,
     e <function>ora_do</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-fetch-into">
   <refnamediv>
    <refname>Ora_Fetch_Into</refname>
    <refpurpose>Scarica una tupla nell'array specificato</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_fetch_into</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>array <parameter>result</parameter></paramdef>
      <paramdef>int
       <parameter>
        <optional>flags</optional>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Con questa funzione si pu&ograve; scaricare una tapla dentro un array.
     <example>
      <title>Oracle fetch into array</title>
      <programlisting role="php">
&lt;?php
array($results);
ora_fetch_into($cursor, &amp;$results);
echo $results[0];
echo $results[1];
?>
      </programlisting>
     </example>
     Si noti che l'array va passato come riferimento.
    </para>
    <simpara>
     Vedere anche <function>ora_parse</function>,<function>ora_exec</function>,
     <function>ora_fetch</function>, e <function>ora_do</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-getcolumn">
   <refnamediv>
    <refname>Ora_GetColumn</refname>
    <refpurpose>restituisce i dati di un campo acquisito</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>ora_getcolumn</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>mixed <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce il contenuto del campo/colonna. Se avviene un errore, 
     viene restituito il valore &false;
     e <function>ora_errorcode</function>
     restituir&agrave; un valore diverso da zero. Si noti, comunque, che 
     un test al valore &false;
     sul risultato di questa funzione pu&ograve; dare esito positivo anche in caso
     non ci siano errori (campo NULL, stringa vuota, il numero 0, la
     stringa "0").
    </para>
    <para>
     Restituisce i dati del campo o del risultato di una funzione.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-logoff">
   <refnamediv>
    <refname>Ora_Logoff</refname>
    <refpurpose>chiude una connessione Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_logoff</function></funcdef>
      <paramdef>int <parameter>connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce &true; se l'operazione riesce, &false; se si verifica un 
     errore. I dettagli dell'errore
     si ottengono usando le funzioni <function>ora_error</function> e
     <function>ora_errorcode</function>.
    </para>
    <para>
     Depenna l'utente e disconnette dal server.
    </para>
    <simpara>
     Vedere anche <function>ora_logon</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-logon">
   <refnamediv>
    <refname>Ora_Logon</refname>
    <refpurpose>apre una connessione Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_logon</function></funcdef>
      <paramdef>string <parameter>user</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Stabilisce una connessione tra PHP e un database Oracle utilizzando
     le username e password specificate.
    </para>
    <para>
     Le connessioni possono essere create usando <productname>SQL*Net</productname>
     fornendo il nome<acronym>TNS</acronym> a
     <parameter>user</parameter> in questo modo:
     <informalexample>
      <programlisting role="php">
$conn = Ora_Logon("user<emphasis>@TNSNAME</emphasis>", "pass");
</programlisting>
     </informalexample>
    </para>
    <para>
     Se i dati contengono caratteri non-ASCII, si deve
     controllare di avere impostato <envar>NLS_LANG</envar> nel proprio
     environment. Per quanto riguarda i moduli del server, occorre impostarlo
     nell' environment del server prima di avviarlo.
    </para>
    <para>
     Restituisce un indice di connessione se l'operazione ha success, oppure
     &false; in caso di errore.
     I dettagli dell'erroresi ottengono usando le funzioni
     <function>ora_error</function> e <function>ora_errorcode</function>
     functions.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-plogon">
   <refnamediv>
    <refname>Ora_pLogon</refname>
    <refpurpose>
     Apre una connessione Oracle permanente
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_plogon</function></funcdef>
      <paramdef>string <parameter>user</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Stabilisce una connessione permanente tra PHP ed un database Oracle con
     le username and password specificate.
    </para>
    <simpara>
     Vedere anche <function>ora_logon</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-numcols">
   <refnamediv>
    <refname>Ora_Numcols</refname>
    <refpurpose>Restituisce il numero di campi/colonne</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_numcols</function></funcdef>
      <paramdef>int <parameter>cursor_ind</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ora_numcols</function> restituisce il numero di campi di un 
     risultato.
     Dopo una sequenza parse/exec/fetch restituisce solo risultati che abbiano
     coerenza.
    </para>
    <simpara>
     Vedere anche <function>ora_parse</function>,<function>ora_exec</function>,
     <function>ora_fetch</function>, e <function>ora_do</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-numrows">
   <refnamediv>
    <refname>Ora_Numrows</refname>
    <refpurpose>Restituisce il numero di tuple</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_numrows</function></funcdef>
      <paramdef>int <parameter>cursor_ind</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ora_numrows</function> restituisce il numero di tuple in un 
      risultato.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-open">
   <refnamediv>
    <refname>Ora_Open</refname>
    <refpurpose>apre un cursore Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_open</function></funcdef>
      <paramdef>int <parameter>connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Apre un cursore Oracle associato alla connessione.
    </para>
    <para>
     Restituisce un indice di cursore oppure &false; in caso di errore. I dettagli
     dell'errore si ottengono usando le funzioni <function>ora_error</function>
     e <function>ora_errorcode</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-parse">
   <refnamediv>
    <refname>Ora_Parse</refname>
    <refpurpose>analizza un comando SQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_parse</function></funcdef>
      <paramdef>int <parameter>cursor_ind</parameter></paramdef>
      <paramdef>string <parameter>sql_statement</parameter></paramdef>
      <paramdef>int <parameter>defer</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Questa funziona analizza un comando SQL o un blocco PL/SQL e
     lo associa al cursore specificato.
    </para>
    <para>
     Restituisce 0 se l'operazione riesce  o -1 in caso di
     errore.
    </para>
    <simpara>
     Vedere anche <function>ora_exec</function>,
     <function>ora_fetch</function>, e <function>ora_do</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-rollback">
   <refnamediv>
    <refname>Ora_Rollback</refname>
    <refpurpose>esegue il rollback della transazione</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_rollback</function></funcdef>
      <paramdef>int <parameter>connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Questa funzione annulla una transazione Oracle. (Vedere
     <function>ora_commit</function> per la definizione di una
     transazione.)
    </para>
    <para>
     Restituisce &true; se l'operazione riesce, &false; in caso di errore. 
     I dettagli dell'errore
     si ottengono usando le funzioni <function>ora_error</function> e
     <function>ora_errorcode</function> functions.
    </para>
   </refsect1>
  </refentry>
 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
