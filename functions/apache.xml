<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.22 Maintainer: cucinato Status: ready -->
 <reference id="ref.apache">
  <title>Funzioni Apache</title>
  <titleabbrev>Apache</titleabbrev>

  <refentry id="function.apache-lookup-uri">
   <refnamediv>
    <refname>apache_lookup_uri</refname>
    <refpurpose>
     Esegue una richiesta parziale della URI specificata e restituisce
     tutte le informazioni
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>apache_lookup_uri</function></funcdef>
      <paramdef>string <parameter>nomefile</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Questa funzione esegue una richiesta parziale per una URI. Esegue l'operazione 
     finch&eacute; ottiene tutte le informazioni importanti sulla
     risorsa e restituisce queste informazioni in una classe. Le propriet&agrave;
     della classe restituista sono:
     <simplelist>
      <member>status</member>
      <member>the_request</member>
      <member>status_line</member>
      <member>method</member>
      <member>content_type</member>
      <member>handler</member>
      <member>uri</member>
      <member>filename</member>
      <member>path_info</member>
      <member>args</member>
      <member>boundary</member>
      <member>no_cache</member>
      <member>no_local_copy</member>
      <member>allowed</member>
      <member>send_bodyct</member>
      <member>bytes_sent</member>
      <member>byterange</member>
      <member>clength</member>
      <member>unparsed_uri</member>
      <member>mtime</member>
      <member>request_time</member>
     </simplelist>
    </para>
    <note>
     <simpara>
      <function>apache_lookup_uri</function> funziona solo quando PHP
      &egrave; installato come modulo Apache.
     </simpara>
    </note>
   </refsect1>
  </refentry>
  
  <refentry id="function.apache-note">
   <refnamediv>
    <refname>apache_note</refname>
    <refpurpose>Ricava o imposta una variabile nella tabella notes di Apache</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>apache_note</function></funcdef>
      <paramdef>string <parameter>nome_nota</parameter></paramdef>
      <paramdef>string 
       <parameter>
        <optional>valore</optional>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>apache_note</function> è una funzione specifica di Apache
     che ricava o iposta un valore nella tabella 
     <literal>notes</literal> di una richiesta HTTP. Se viene invocata con un solo argomento
     restituisce il valore della nota
     <literal>nome_nota</literal>. Se viene chiamata con due argomenti,
     imposta il valore della nota <literal>nome_nota</literal> a
     <literal>valore</literal> e restituisce il valore precedente della
     nota <literal>nome_nota</literal>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ascii2ebcdic">
   <refnamediv>
    <refname>ascii2ebcdic</refname>
    <refpurpose>Traduce una stringa da ASCII a EBCDIC</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ascii2ebcdic</function></funcdef>
      <paramdef>string <parameter>ascii_str</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ascii2ebcdic</function> è una funzione Apache che
     è disponibile solo su sistemi operativi basati sull'EBCDIC (OS/390, BS2000).
     Traduce la stringa codificata in ASCII <parameter>ascii_str</parameter>
     nella sua rappresentazione equivalente EBCDIC (proteggendo i dati binari), e restituisce
     il risultato.
    </para>
    <para>
     Vedere anche la funzione duale <function>ebcdic2ascii</function> 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ebcdic2ascii">
   <refnamediv>
    <refname>ebcdic2ascii</refname>
    <refpurpose>Traduce una stringa da string EBCDIC ad ASCII</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ebcdic2ascii</function></funcdef>
      <paramdef>string <parameter>ebcdic_str</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ebcdic2ascii</function> è una funzione Apache che
     è disponibile solo su sistemi operativi basati su EBCDIC (OS/390, BS2000).
     Traduce la stringa codificata in EBCDIC <parameter>ebcdic_str</parameter>
     nella sua rappresentazione equivalente ASCII (proteggendo i dati binari), e restituisce
     il risultato.
    </para>
    <para>
     Vedere anche la funzione duale <function>ascii2ebcdic</function> 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.getallheaders">
   <refnamediv>
    <refname>getallheaders</refname>
    <refpurpose>Estrae tutti gli header della richiesta HTTP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>getallheaders</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Questa funzione restituisce un array associativo di tutti gli
     header HTTP nella richiesta corrente.
    </para>
    <para>
     <note>
      <para>
       Si può anche estrarre il valore delle variabili comuni CGI 
       leggendole dall'ambiente, il che funziona sia che si stia usando
       PHPcome modulo Apache che come CGI. Usare
       <function>phpinfo</function> per vedere una lsta di tutte le
       variabili d'ambiente definite in questo modo.
      </para>
     </note>
    </para>
    <para>
     <example>
      <title>esempio di <function>getallheaders</function></title>
      <programlisting role="php">
<![CDATA[
$headers = getallheaders();
while (list ($header, $valore) = each ($headers)) {
    echo "$header: $valore<br />\n";
}
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Questo esempio mostrerà tutti gli header della richiesta
     corrente.
     <note>
      <simpara>
       <function>getallheaders</function> è attualmente supportato solo
       quando PHP è eseguito come modulo <productname>Apache</productname>.
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.virtual">
   <refnamediv>
    <refname>virtual</refname>
    <refpurpose>Esegue una sotto-richiesta Apache</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>virtual</function></funcdef>
      <paramdef>string <parameter>nomefile</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>virtual</function> è una funzione specifica Apache che
     è equivalente a &lt;!--#include virtual...--&gt; in mod_include.
     Esegue una sotto-richiesta Apache. &Egrave; utile ad includere
     script CGI o file .shtml, o qualsiasi altra cosa si voglia
     fa analizzarea ad Apache. Si noti che per uno script CGI, questo
     deve generare degli header CGI validi. Quindi, Come minimo deve 
     generare un header Content-type. Nel caso di file PHP, si deve usare
     <function>include</function> o <function>require</function>;
     <function>virtual</function> non può essere usata per includere un documento
     che deve essere interpretato come file PHP.
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.apache-child-terminate'>
   <refnamediv>
    <refname>apache_child_terminate</refname>
    <refpurpose>Interrompe il processo apache dopo la presente richiesta</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>apache_child_terminate</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>apache_child_terminate</function> interrompe il processo apache
     che sta eseguendo la richiesta PHP corrente quando questa &egrave; stata completata. Può essere usata per 
     interrompere un processo dopo che sia stato eseguito uno script con alta occupazione di memoria 
     dal momento che la memoria viene normalmente liberata internamente ma non restituita 
     al sistema operativo. 
    </para>
    <para>
     Vedere anche <function>exit</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.apache-setenv'>
   <refnamediv>
    <refname>apache_setenv</refname>
    <refpurpose>Imposta una variabile Apache subprocess_env</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>apache_setenv</function></funcdef>
      <paramdef>string <parameter>varibile</parameter></paramdef>
      <paramdef>string <parameter>valore</parameter></paramdef>
      <paramdef>bool <parameter><optional>vai_in_cima</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
