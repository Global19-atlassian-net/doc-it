<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.31 Maintainer: cucinato Status: ready -->
<reference id="ref.com"> 
  <title>Funzioni di supporto COM per Windows</title> 
  <titleabbrev>COM</titleabbrev> 
  <partintro> 
   <simpara>
    COM è una tecnologia che permette il riutilizzo del codice scritto in un qualsiasi
    linguaggio utilizzando una convenzione standard di chiamate e nascondendo
    dietro a delle API i dettagli di implementazione quali la macchina su cui il Componente
    è conservato e il file eseguibile che lo ospita. Si può pernsare a COM com a un meccanismo
    avanzato di Remote Procedure Call (RPC) con alcune basi di programmazione ad oggetti. 
    COM separa l'implementazione dall'interfaccia.
   </simpara> 
   <simpara>
    COM incoraggia il versioning, la separazione tra interfaccia e 
    implementazione e l'occupltamento dei dettagli dell'implementazione details come la posizione delleseguibile e 
    il linguaggio di programmazione.
   </simpara> 
   <simpara>
    Le funzioni COM sono disponibili solo sulle versioni Windows di PHP.
   </simpara> 
   <simpara>
    Per maggiori informazioni su COM si leggano le <ulink url="&url.comspecs;">specifiche
    COM</ulink> o si guardi anche la documentazione di Don Box su 
    <ulink url="&url.yacl;"> Yet Another COM Library (YACL)</ulink> 
   </simpara> 
  </partintro> 
 
 <refentry id="class.com">
  <refnamediv>
   <refname>COM</refname>
   <refpurpose>classe COM</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
  <synopsis>$obj = new <classname>COM</classname>("server.object")</synopsis>
  </refsynopsisdiv>
  <refsect1 id="class.com.class">
   <title>Descrizione</title>
   <simpara>
    La classe COM fornisce un ambiente per integrare (D)COM components into
    negli script php.
   </simpara>
  </refsect1>
  <refsect1 id="class.com.constructor">
   <title>Metodi</title>
    <methodsynopsis>
     <type>string</type><methodname>COM::COM</methodname>
     <methodparam><type>string</type><parameter>nome_modulo</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>nome_server</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>codepage</parameter></methodparam>
    </methodsynopsis>
   <para>
    costruttore della classe COM. Parametri:
    <variablelist>
    <varlistentry><term>nome_modulo</term>
    <listitem>
     <simpara>
      nome o class-id del componente desiderato.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry><term>nome_server</term>
    <listitem>
     <simpara>
      nome del server DCOM dal quale deve essere richiamato il componente.
      Se &null;, si assume <literal>localhost</literal>.
      Per permettere l'uso di DCOM il parametro <constant>com.allow_dcom</constant> deve essere impostato a 
      &true; in <filename>php.ini</filename>.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry><term>codepage</term>
    <listitem>
     <simpara>
      specifica la codepage che verrà usata per convertire le stringhe di PHP in
      stringhe Unicode e viceversa. I valori possibili sono 
      <constant>CP_ACP</constant>, <constant>CP_MACCP</constant>,
      <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,
      <constant>CP_THREAD_ACP</constant>, <constant>CP_UTF7</constant>
      e <constant>CP_UTF8</constant>.
     </simpara>
    </listitem>
    </varlistentry>
    </variablelist>
   </para>
   <para>
    <example id="example.com1">
     <title>esempio di COM (1)</title>
     <programlisting role="php">
<![CDATA[
// esecuzione di Word
$word = new COM("word.application") or die("Non sono riuscito ad eseguire Word");
print "Word caricato, versione {$word->Version}\n";

//lo porta in primo piano
$word->Visible = 1;

//apre un documento vuoto
$word->Documents->Add();

//esegue un po' di operazioni inutili
$word->Selection->TypeText("Questa è una prova...");
$word->Documents[1]->SaveAs("Prova inutile.doc");

//chiude Word
$word->Quit();

//libera l'oggetto
$word->Release();
$word = null;
]]>
     </programlisting>
    </example>
   </para>
   <para>
    <example id="example.com2">
     <title>esempio di COM (2)</title>
     <programlisting role="php">
<![CDATA[
$conn = new COM("ADODB.Connection") or die("non riesco ad attivare ADO");
$conn->Open("Provider=SQLOLEDB; Data Source=localhost;
Initial Catalog=database; User ID=user; Password=password");

$rs = $conn->Execute("SELECT * FROM unatabella");    // Recordset

$num_colonne = $rs->Fields->Count();
echo $num_columns . "\n";

for ($i=0; $i < $num_colonne; $i++)
{
    $campi[$i] = $rs->Fields($i);
}

$contorighe = 0;
while (!$rs->EOF)
{
    for ($i=0; $i < $num_colonne; $i++)
    {
        echo $campi[$i]->value . "\t";
    }
    echo "\n";
    $contorighe++;            // incrementa contorighe
    $rs->MoveNext();
}

$rs->Close();
$conn->Close();

$rs->Release();
$conn->Release();

$rs = null;
$conn = null;
]]>
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="class.variant">
  <refnamediv>
   <refname>VARIANT</refname>
   <refpurpose>classe VARIANT</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
  <synopsis>$vVar = new <classname>VARIANT</classname>($var)</synopsis>
  </refsynopsisdiv>
  <refsect1 id="class.variant.class">
   <title>Descrizione</title>
   <simpara>
    Un semplice contenitore per includere le variabili in strutture VARIANT.
   </simpara>
  </refsect1>
  <refsect1 id="class.variant.constructor">
   <title>Metodi</title>
    <methodsynopsis>
     <type>string</type><methodname>VARIANT::VARIANT</methodname>
     <methodparam choice="opt"><type>mixed</type><parameter>valore</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>tipo</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>codepage</parameter></methodparam>
    </methodsynopsis>
   <para>
    costruttore della classe VARIANT. Parametri:
    <variablelist>
    <varlistentry><term>valore</term>
    <listitem>
     <simpara>
      valore iniziale. se omesso viene creato un oggetto VT_EMPTY.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry><term>tipo</term>
    <listitem>
     <simpara>
      specifica il tipo di contenuto dell'oggetto VARIANT. I valori possibili sono
      <constant>VT_UI1</constant>, <constant>VT_UI2</constant>, <constant>VT_UI4</constant>, 
      <constant>VT_I1</constant>, <constant>VT_I2</constant>, <constant>VT_I4</constant>, 
      <constant>VT_R4</constant>, <constant>VT_R8</constant>, <constant>VT_INT</constant>, <constant>VT_UINT</constant>,
      <constant>VT_BOOL</constant>, <constant>VT_ERROR</constant>, <constant>VT_CY</constant>, 
      <constant>VT_DATE</constant>, <constant>VT_BSTR</constant>, <constant>VT_DECIMAL</constant>, 
      <constant>VT_UNKNOWN</constant>, <constant>VT_DISPATCH</constant> and <constant>VT_VARIANT</constant>. Questi valori sono
      mutuallmente esclusivi, ma possono essere combinati con <constant>VT_BYREF</constant> to specify being a value. If omitted,
      the type of <parameter>value</parameter> is used. Consult the msdn library for additional information.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry><term>codepage</term>
    <listitem>
     <simpara>
      specifica la codepage che è usata per convertire le stringhe PHP in
      stringhe  unicode e viceversa. I valori possibili sono
      <constant>CP_ACP</constant>, <constant>CP_MACCP</constant>,
      <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,
      <constant>CP_THREAD_ACP</constant>, <constant>CP_UTF7</constant>
      e <constant>CP_UTF8</constant>.
     </simpara>
    </listitem>
    </varlistentry>
    </variablelist>
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-load">
  <refnamediv>
   <refname>com_load</refname>
   <refpurpose>
    Crea un nuovo riferimento a un componente COM
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
    <methodsynopsis>
     <type>string</type><methodname>com_load</methodname>
     <methodparam><type>string</type><parameter>nome_modulo</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>
       nome_server
      </parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>
      codepage
      </parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>com_load</function> crea un nuovocomponente COM e
    ne restituisce un riferimento. Restituisce  &false; in caso di errore. I possibili
    valori per <parameter>codepage</parameter> sono
    <constant>CP_ACP</constant>, <constant>CP_MACCP</constant>,
    <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,
    <constant>CP_THREAD_ACP</constant>, <constant>CP_UTF7</constant>
    e <constant>CP_UTF8</constant>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-invoke">
  <refnamediv>
   <refname>com_invoke</refname>
   <refpurpose>
    Chiama un metodo di un componente COM.
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
    <methodsynopsis>
     <type>mixed</type><methodname>com_invoke</methodname>
     <methodparam><type>resource</type><parameter>oggetto_com</parameter></methodparam>
     <methodparam><type>string</type><parameter>nome_funzione</parameter></methodparam>
     <methodparam choice="opt"><type>mixed</type><parameter>
      parametri, ...
      </parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>com_invoke</function> chiama un metodo del componente
    COM referenziato da
    <parameter>oggetto_com</parameter>. Restituisce
    &false; in caso di errore, altrimenti restituisce il valore di ritorno di
    <parameter>nome_funzione</parameter>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-propget">
  <refnamediv>
   <refname>com_propget</refname>
   <refpurpose>
    Ricava il valore di una proprietà di un componente COM
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
    <methodsynopsis>
     <type>mixed</type><methodname>com_propget</methodname>
     <methodparam><type>resource</type><parameter>oggetto_com</parameter></methodparam>
     <methodparam><type>string</type><parameter>nome_prop</parameter></methodparam>
    </methodsynopsis>
   <para>
    Questa funzione è un alias di <function>com_get</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-get">
  <refnamediv>
   <refname>com_get</refname>
   <refpurpose>
    Ricava il valore di una proprietà di un componente COM
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
    <methodsynopsis>
     <type>mixed</type><methodname>com_get</methodname>
     <methodparam><type>resource</type><parameter>oggetto_com</parameter></methodparam>
     <methodparam><type>string</type><parameter>nome_prop</parameter></methodparam>
    </methodsynopsis>
   <para>
    Restituisce il valore della proprietà <parameter>nome_prop</parameter> del
    componente COM referenziato da <parameter>oggetto_com</parameter>.
    Restituisce &false; in caso di errore.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-propput">
  <refnamediv>
   <refname>com_propput</refname>
   <refpurpose>
    Assegna un valore a una proprietà di un oggetto COM 
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
    <methodsynopsis>
     <type>void</type><methodname>com_propput</methodname>
     <methodparam><type>resource</type><parameter>oggetto_com</parameter></methodparam>
     <methodparam><type>string</type><parameter>nome_prop</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>valore</parameter></methodparam>
    </methodsynopsis>
   <para>
    Questa funzione è un alias di <function>com_set</function>.    
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-propset">
  <refnamediv>
   <refname>com_propset</refname>
   <refpurpose>
    Assegna un valore a una proprietà di un oggetto COM 
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
    <methodsynopsis>
     <type>void</type><methodname>com_propset</methodname>
     <methodparam><type>resource</type><parameter>oggetto_com</parameter></methodparam>
     <methodparam><type>string</type><parameter>nome_prop</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>valore</parameter></methodparam>
    </methodsynopsis>
   <para>
    Questa funzione è un alias di <function>com_set</function>.    
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-set">
  <refnamediv>
   <refname>com_set</refname>
   <refpurpose>
    Assegna un valore a una proprietà di un oggetto COM 
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
    <methodsynopsis>
     <type>void</type><methodname>com_set</methodname>
     <methodparam><type>resource</type><parameter>oggetto_com</parameter></methodparam>
     <methodparam><type>string</type><parameter>nome_prop</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>valore</parameter></methodparam>
    </methodsynopsis>
   <para>
    Imposta il valore della proprietà <parameter>nome_prop</parameter> del componente
    COM referenziato da <parameter>oggetto_com</parameter>.
    Restituisce il valore appena impostato in caso di successo,, &false; altrimenti.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-addref">
  <refnamediv>
   <refname>com_addref</refname>
   <refpurpose>
    Incrementa il contatore di referenze.
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
    <methodsynopsis>
      <type>void</type><methodname>com_addref</methodname>
      <void/>
    </methodsynopsis>
   <para>
    Incrementa il contatore di referenze.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-release">
  <refnamediv>
   <refname>com_release</refname>
   <refpurpose>
    Decrementa il contaotre di referenze.
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
    <methodsynopsis>
      <type>void</type><methodname>com_release</methodname>
      <void/>
    </methodsynopsis>
   <para>
    Decrementa il contatore di referenze.
   </para>
  </refsect1>
 </refentry>

  <refentry id='function.com-isenum'>
   <refnamediv>
    <refname>com_isenum</refname>
    <refpurpose>Recupera un IEnumVariant</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>void</type><methodname>com_isenum</methodname>
      <methodparam><type>object</type><parameter>modulo_com</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.com-load-typelib'>
   <refnamediv>
    <refname>com_load_typelib</refname>
    <refpurpose>Carica una Typelib</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>void</type><methodname>com_load_typelib</methodname>
      <methodparam><type>string</type><parameter>nome_typelib</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>ignora_maiuscole</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

