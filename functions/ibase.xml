<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.44 Maintainer: cortesi Status: ready -->
<!-- CREDITS: fabio -->
<reference id="ref.ibase">
  <title>Funzioni InterBase</title>
  <titleabbrev>InterBase</titleabbrev>

  <partintro>
   <para>
    InterBase è un famoso database prodotto da Borland/Inprise.  Maggiori
    informazioni riguardo InterBase sono disponibili a <ulink
    url="&url.ibase;">&url.ibase;</ulink>.  Oh, a proposito, InterBase
    è da poco entrato nel movimento open source!
   </para>
   <note>
    <para>
     Il supporto completo per  InterBase 6 è stato aggiunto in PHP 4.0.
    </para>
    <para>
     Questo database usa il carattere di singolo apice (') come carattere di escape, un
     comportamento simile al database Sybase, aggiungere al proprio
     file <filename>php.ini</filename> la seguente direttiva:
     <informalexample>
      <programlisting>
<![CDATA[
magic_quotes_sybase = On
]]>
      </programlisting>
     </informalexample>
    </para>
   </note>
  </partintro>

  <refentry id="function.ibase-connect">
   <refnamediv>
    <refname>ibase_connect</refname>
    <refpurpose>
     Apre una connessione con un database InterBase
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_connect</methodname>
      <methodparam><type>string</type><parameter>database</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>password</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>buffers</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>dialect</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>role</parameter></methodparam>
     </methodsynopsis>
    <para>
     Stabilisce una connessione con un server InterBase.
     Il parametro <parameter>database</parameter>
     deve essere un percorso valido di un file di database sul server dove risiede.
     Se il server non fosse locale, bisogna aggiungere prima del percorso o
     'hostname:' (TCP/IP), o '//hostname/' (NetBEUI) o 'hostname@' (IPX/SPX),
     in base al protocollo di connessione utilizzato. <parameter>username</parameter>
     e <parameter>password</parameter> possono venire specificati
     anche con le direttive di configurazione del PHP ibase.default_user e
     ibase.default_password. <parameter>charset</parameter> è il set di caratteri predefinito
     per un database. <parameter>buffers</parameter> è il numero di
     buffer di database da allocare per la cache dal lato server. Se è 0 o viene omesso,
     il server usa il suo valore predefinito. <parameter>dialect</parameter> seleziona
     il dialetto SQL predefinito per ogni operazione eseguita all'interno di una connessione,
     e il suo valore predefinito è il più alto supportato dalle librerie del client.
    </para>
    <para>
     Nel caso di una seconda chiamata fatta con
     <function>ibase_connect</function> con gli stessi parametri, non verrà creato
     alcun nuovo collegamento, bensì, l'identificatore del collegamento già aperto
     verrà restituito. Il collegamento al server verrà chiuso appena termina
     l'esecuzione dello script, a meno che non venga chiuso prima esplicitamente chiamando
     <function>ibase_close</function>. 
     <example>
      <title>Esempio di <function>ibase_connect</function></title>
      <programlisting role="php">
<![CDATA[
<?php
    $dbh = ibase_connect($host, $username, $password);
    $stmt = 'SELECT * FROM tblname';
    $sth = ibase_query($dbh, $stmt);
    while ($row = ibase_fetch_object($sth)) {
        echo $row->email . "\n";
    }
    ibase_free_result($sth);
    ibase_close($dbh);
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      <parameter>buffers</parameter> è stato aggiunto in PHP4RC2.
     </para>
    </note>
    <note>
     <para>
      <parameter>dialect</parameter> è stato aggiunto in PHP4RC2. E' funzionante
       solo con InterBase 6 e versioni successive.
     </para>
    </note>
    <note>
     <para>
      <parameter>role</parameter> è stato aggiunto in PHP4RC2. E' funzionante
       solo con InterBase 5 e versioni successive.
     </para>
    </note>
    <para>
     Vedere anche: <function>ibase_pconnect</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-pconnect">
   <refnamediv>
    <refname>ibase_pconnect</refname>
    <refpurpose>
     Crea una connessione persistente ad un database Interbase
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_connect</methodname>
      <methodparam><type>string</type><parameter>database</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>password</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>buffers</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>dialect</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>role</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ibase_pconnect</function> agisce in modo molto simile a
     <function>ibase_connect</function> con due differenze principali.
     Innanzitutto, durante la connessione, la funzione cercherà prima di trovare un
     collegamento (persistente) che è già stato aperto con gli stessi parametri.
     Se viene trovato, il suo identificatore verrà restituito al posto di aprire
     una nuova connessione. In secondo luogo, la connessione al server InterBase
     non verrà chiusa al termine dell'esecuzione dello script.
     Invece, il collegamento resterà aperto per un uso futuro
     (<function>ibase_close</function> non chiuderà i collegamenti stabiliti
     da <function>ibase_pconnect</function>). Questo tipo di collegamento è
     perciò chiamato  'persistente'.
    </para>
    <note>
     <para>
      <parameter>buffers</parameter> è stato aggiunto in PHP4-RC2.
     </para>
    </note>
    <note>
     <para>
      <parameter>dialect</parameter> è stato aggiunto in PHP4-RC2. Funziona soltanto
       con InterBase 6 e superiori.
     </para>
    </note>
    <note>
     <para>
      <parameter>role</parameter> è stato aggiunto in PHP4-RC2. Funziona soltanto
       con InterBase 5 e superiori.
     </para>
    </note>
    <para>
     Vedere anche <function>ibase_connect</function> per il significato dei parametri
     passati a questa funzione. Sono esattamente gli stessi.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-close">
   <refnamediv>
    <refname>ibase_close</refname>
    <refpurpose>
     Chiude una connessione ad un database InterBase
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_close</methodname>
      <methodparam choice="opt"><type>int</type><parameter>connection_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     Chiude il collegamento ad un database InterBase che è stato associato con
     un id di connessione restituito da <function>ibase_connect</function>.
     Se l'id di connessione viene omesso, viene considerato l'ultimo collegamento che è stato aperto.
     La transazione predefinita sul collegamento viene "committed", le altre transazioni vengono
     "rolled back". 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-query">
   <refnamediv>
    <refname>ibase_query</refname>
    <refpurpose>Esegue una query su di un database InterBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_query</methodname>
      <methodparam choice="opt"><type>int</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>bind_args</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Esegue una query su di un database InterBase. Se la query non ha
     successo, restituisce &false;. Se ha successo e vi sono 
     riga di risultato (come si ha ad esempio con le query SELECT), restituisce un identificatore di risorsa. Se
     la query ha avuto successo, ma non ci sono risultati, restituisce &true;.
     Restutuisce &false; se la query fallisce.
    </simpara>
    <para>
     Vedere anche <function>ibase_errmsg</function>,
     <function>ibase_fetch_row</function>,
     <function>ibase_fetch_object</function> e
     <function>ibase_free_result</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-errmsg">
   <refnamediv>
    <refname>ibase_errmsg</refname>
    <refpurpose>
     Restituisce messaggi di errore
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>ibase_errmsg</methodname>
      <void/>
     </methodsynopsis>
    <simpara>
     Restituisce una stringa contenente un messaggio di errore.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-fetch-row">
   <refnamediv>
    <refname>ibase_fetch_row</refname>
    <refpurpose>Elabora una riga da un database InterBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>ibase_fetch_row</methodname>
      <methodparam><type>int</type><parameter>result_identifier</parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce un array che corrisponde alla riga ottenuta o &false;
     se non ci sono righe rimanenti.
    </para>
    <para>
     <function>ibase_fetch_row</function> prende una riga di dati dai
     risultati associati allo specificato
     <parameter>result_identifier</parameter>. La riga viene restituita come
     un array. Ogni colonna risultante viene immagazzinata in un offset dell'array,
     l'offset inizia da 0.
    </para>
    <para>
     Chiamate successive a <function>ibase_fetch_row</function> restituiscono
     la successiva riga dai risultati della query o &false; se non vi sono
     ulteriori righe.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-fetch-object">
   <refnamediv>
    <refname>ibase_fetch_object</refname>
    <refpurpose>Ottiene un oggetto da un database InterBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>object</type><methodname>ibase_fetch_object</methodname>
      <methodparam><type>int</type><parameter>result_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     Elabora una riga come un pseudo-oggetto da un
     <parameter>result_id</parameter> ottenuto o da
     <function>ibase_query</function> o da
     <function>ibase_execute</function>.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<php
    $dbh = ibase_connect ($host, $username, $password);
    $stmt = 'SELECT * FROM tblname';
    $sth = ibase_query ($dbh, $stmt);
    while ($row = ibase_fetch_object ($sth)) {
        print $row->email . "\n";
    }
    ibase_close ($dbh);
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Chiamate successive a <function>ibase_fetch_object</function> restituiscono
     la successiva riga dai risultati della query o &false; se non vi sono
     ulteriori righe.
    </para>
    <para>
     Vedere anche <function>ibase_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-field-info">
   <refnamediv>
    <refname>ibase_field_info</refname>
    <refpurpose>
     Ottiene informazioni su un campo
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>ibase_field_info</methodname>
      <methodparam><type>int</type><parameter>result</parameter></methodparam>
      <methodparam><type>int</type><parameter>field number</parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce un array con informazioni relative a un campo dopo che una query
     select è stata eseguita. L'array ha la forma name, alias,
     relation, length e type.
     <informalexample>
      <programlisting role="php">
<![CDATA[
$rs=ibase_query("SELECT * FROM tablename"); 
$coln = ibase_num_fields($rs);
for ($i=0; $i < $coln; $i++) {
    $col_info = ibase_field_info($rs, $i); 
    echo "name: ".$col_info['name']."\n"; 
    echo "alias: ".$col_info['alias']."\n"; 
    echo "relation: ".$col_info['relation']."\n"; 
    echo "length: ".$col_info['length']."\n"; 
    echo "type: ".$col_info['type']."\n"; 
    }
]]>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.ibase-free-query">
   <refnamediv>
    <refname>ibase_free_query</refname>
    <refpurpose>
     Libera la memoria allocata da una query preparata
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_free_query</methodname>
      <methodparam><type>int</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Libera una query preparata da <function>ibase_prepare</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-free-result">
   <refnamediv>
    <refname>ibase_free_result</refname>
    <refpurpose>Libera la memoria allocata da un result set</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_free_result</methodname>
      <methodparam><type>int</type><parameter>result_identifier</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Libera un result set che è stato creato da
     <function>ibase_query</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-prepare">
   <refnamediv>
    <refname>ibase_prepare</refname>
    <refpurpose>
     Prepara una query per un successivo binding dei segnaposto dei parametri ed
     esecuzione
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_prepare</methodname>
      <methodparam choice="opt"><type>int</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Prepara una query per un successivo binding dei segnaposto dei parametri ed
     esecuzione (tramite <function>ibase_execute</function>).
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-execute">
   <refnamediv>
    <refname>ibase_execute</refname>
    <refpurpose>Esegue una query preparata in precedenza</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_execute</methodname>
      <methodparam><type>int</type><parameter>query</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>bind_args</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esegue una query preparata da <function>ibase_prepare</function>.
     Ciò è molto più efficace che usare <function>ibase_query</function>
     se state ripetendo uno stesso tipo di query molte volte cambiando solo
     alcuni parametri.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
    $updates = array(
        1 => 'Eric',
        5 => 'Filip',
        7 => 'Larry'
    );

    $query = ibase_prepare("UPDATE FOO SET BAR = ? WHERE BAZ = ?");

    while (list($baz, $bar) = each($updates)) {
        ibase_execute($query, $bar, $baz);
    }
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-trans">
   <refnamediv>
    <refname>ibase_trans</refname>
    <refpurpose>Inizia una transazione</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_trans</methodname>
      <methodparam choice="opt"><type>int</type><parameter>trans_args</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>link_identifier</parameter></methodparam>
     </methodsynopsis>
    <para>
     Inizia una transazione.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-commit">
   <refnamediv>
    <refname>ibase_commit</refname>
    <refpurpose>Esegue il commit di una transazione</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_commit</methodname>
      <methodparam choice="opt"><type>int</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>int</type><parameter>trans_number</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esegue il commit della transazione <parameter>trans_number</parameter> che è stata
     creata con <function>ibase_trans</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-rollback">
   <refnamediv>
    <refname>ibase_rollback</refname>
    <refpurpose>Esegue il roll back di una transazione</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_rollback</methodname>
      <methodparam choice="opt"><type>int</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>int</type><parameter>trans_number</parameter></methodparam>
     </methodsynopsis>
    <para>
     Rolls back transaction <parameter>trans_number</parameter> which was
     created with <function>ibase_trans</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-timefmt">
   <refnamediv>
    <refname>ibase_timefmt</refname>
    <refpurpose>
     Imposta il formato delle colonne timestamp, date e time restituite dalle query
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_timefmt</methodname>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>columntype</parameter></methodparam>
     </methodsynopsis>
    <para>
     Imposta il formato delle colonne di tipo timestamp, date o time restituite
     dalle query. Internamente, le colonne vengono formattate dalla funzione C
     strftime(), quindi fate riferimento alla sua documentazione riguardo al formato della
     stringa. <parameter>columntype</parameter> è una delle costanti
     IBASE_TIMESTAMP, IBASE_DATE e IBASE_TIME. Se omessa,
     è predefinita a IBASE_TIMESTAMP per motivi di compatibilità con il passato.
     <informalexample>
      <programlisting role="php">
       <![CDATA[
       <?php
       // Le colonne di tipo TIME di InterBase vengono restituite nella
       // forma '05 hours 37 minutes'. 
       ibase_timefmt("%H hours %M minutes", IBASE_TIME);
       ?>
       ]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Potete impostare anche valori predefiniti per questi formati con la direttiva di configurazione
     ibase.timestampformat, ibase.dateformat e ibase.timeformat.
    </para>
    <note>
     <para>
      <parameter>columntype</parameter> è stata aggiunta in PHP 4.0. Ha significato
      solo con InterBase versione 6 e successive.
     </para>
    </note>
    <note>
     <para>
      Un'incompatibilità con il passato si è avuta nel PHP 4.0 quando la direttiva di configurazione del PHP
      ibase.timeformat è stata rinominata in
      ibase.timestampformat e la direttiva ibase.dateformat e
      ibase.timeformat sono state aggiunte, così che i loro nomi fossero più simili
      alle loro funzionalità.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-num-fields">
   <refnamediv>
    <refname>ibase_num_fields</refname>
    <refpurpose>
     Ottiene il numero di campi in un result set
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_num_fields</methodname>
      <methodparam><type>int</type><parameter>result_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce un integer contenente il numero di campi in un result 
     set.
     <informalexample>
      <programlisting role="php">
       <![CDATA[
       <?php
       $dbh = ibase_connect ($host, $username, $password);
       $stmt = 'SELECT * FROM tblname';
       $sth = ibase_query ($dbh, $stmt);

       if (ibase_num_fields($sth) > 0) {
       while ($row = ibase_fetch_object ($sth)) {
       print $row->email . "\n";
       }
       } else {
       die ("Nessun result è stato trovato per la tua query");
       }

       ibase_close ($dbh);
       ?>
       ]]>       
      </programlisting>
     </informalexample>
    </para>
    <para>
     Vedere anche: <function>ibase_field_info</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.ibase-blob-add'>
   <refnamediv>
    <refname>ibase_blob_add</refname>
    <refpurpose>
     Aggiunge dati in un blob creato
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_blob_add</methodname>
      <methodparam><type>int</type><parameter>blob_id</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>



  <refentry id='function.ibase-blob-cancel'>
   <refnamediv>
    <refname>ibase_blob_cancel</refname>
    <refpurpose>
     Cancella la creazione di un blob
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_blob_cancel</methodname>
      <methodparam><type>int</type><parameter>blob_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>



  <refentry id='function.ibase-blob-close'>
   <refnamediv>
    <refname>ibase_blob_close</refname>
    <refpurpose>
     Chiude un blob
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_blob_close</methodname>
      <methodparam><type>int</type><parameter>blob_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>



  <refentry id='function.ibase-blob-create'>
   <refnamediv>
    <refname>ibase_blob_create</refname>
    <refpurpose>
     Crea un blob per aggiungerci dei dati
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_blob_create</methodname>
      <methodparam choice="opt"><type>int</type><parameter>link_identifier</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>



  <refentry id='function.ibase-blob-echo'>
   <refnamediv>
    <refname>ibase_blob_echo</refname>
    <refpurpose>
     Visualizza il contenuto di un blob sul browser
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_blob_echo</methodname>
      <methodparam><type>string</type><parameter>blob_id_str</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>



  <refentry id='function.ibase-blob-get'>
   <refnamediv>
    <refname>ibase_blob_get</refname>
    <refpurpose>
     Ottiene len byte di dati dal blob aperto
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>ibase_blob_get</methodname>
      <methodparam><type>int</type><parameter>blob_id</parameter></methodparam>
      <methodparam><type>int</type><parameter>len</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>



  <refentry id='function.ibase-blob-import'>
   <refnamediv>
    <refname>ibase_blob_import</refname>
    <refpurpose>
     Create un blob, copy il file al suo interno e lo chiude
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>ibase_blob_import</methodname>
      <methodparam choice="opt"><type>int</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>int</type><parameter>file_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>



  <refentry id='function.ibase-blob-info'>
   <refnamediv>
    <refname>ibase_blob_info</refname>
    <refpurpose>
     Restituisce la lunghezza del blob e altre informazioni utlili
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>object</type><methodname>ibase_blob_info</methodname>
      <methodparam><type>string</type><parameter>blob_id_str</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>



  <refentry id='function.ibase-blob-open'>
   <refnamediv>
    <refname>ibase_blob_open</refname>
    <refpurpose>
     Apre un blob per ricavare parte di dati
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>ibase_blob_open</methodname>
      <methodparam><type>string</type><parameter>blob_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>


 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

