 <reference id="ref.ibase">
  <title>Funzioni InterBase</title>
  <titleabbrev>InterBase</titleabbrev>

  <partintro>
   <para>
    InterBase è un famoso database prodotto da Borland/Inprise.  Maggiori
    informazioni riguardo InterBase sono disponibili a <ulink
    url="&url.ibase;">&url.ibase;</ulink>.  Oh, a proposito, InterBase
    è da poco entrato nel movimento open source!
   </para>
   <note>
    <para>
     Il supporto completo per  InterBase 6 è stato aggiunto in PHP 4.0.
    </para>
   </note>
  </partintro>

  <refentry id="function.ibase-connect">
   <refnamediv>
    <refname>ibase_connect</refname>
    <refpurpose>
     Apre una connessione con un database InterBase
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_connect</function></funcdef>
      <paramdef>string <parameter>database</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>username</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>password</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>charset</optional></parameter>
      </paramdef>
      <paramdef>int 
       <parameter><optional>buffers</optional></parameter>
      </paramdef>
      <paramdef>int 
       <parameter><optional>dialect</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>role</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Stabilisce una connessione con un server InterBase.
     Il parametro <parameter>database</parameter>
     deve essere un percorso valido di un file di database sul server dove risiede.
     Se il server non fosse locale, bisogna aggiungere prima del percorso o
     'hostname:' (TCP/IP), o '//hostname/' (NetBEUI) o 'hostname@' (IPX/SPX),
     in base al protocollo di connessione utilizzato. <parameter>username</parameter>
     e <parameter>password</parameter> possono venire specificati
     anche con le direttive di configurazione del PHP ibase.default_user e
     ibase.default_password. <parameter>charset</parameter> è il set di caratteri predefinito
     per un database. <parameter>buffers</parameter> è il numero di
     buffer di database da allocare per la cache dal lato server. Se è 0 o viene omesso,
     il server usa il suo valore predefinito. <parameter>dialect</parameter> seleziona
     il dialetto SQL predefinito per ogni operazione eseguita all'interno di una connessione,
     e il suo valore predefinito è il più alto supportato dalle librerie del client.
    </para>
    <para>
     In caso di una seconda chiamata fatta con
     <function>ibase_connect</function> con gli stessi parametri, non verrà creato
     alcun nuovo collegamento, bensì, l'identificatore del collegamento già aperto
     verrà restituito. Il collegamento al server verrà chiuso appena termina
     l'esecuzione dello script, a meno che non venga chiuso prima esplicitamente chiamando
     <function>ibase_close</function>. 
     <example>
      <title>Esempio di <function>Ibase_connect</function></title>
      <programlisting role="php">
&lt;?php
    $dbh = ibase_connect ($host, $username, $password);
    $stmt = 'SELECT * FROM tblname';
    $sth = ibase_query ($dbh, $stmt);
    while ($row = ibase_fetch_object ($sth)) {
        print $row->email . "\n";
    }
    ibase_close ($dbh);
?>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      <parameter>buffers</parameter> è stato aggiunto in PHP4-RC2.
     </para>
    </note>
    <note>
     <para>
      <parameter>dialect</parameter> è stato aggiunto in PHP4-RC2. E' funzionante
       solo con InterBase 6 e versioni successive.
     </para>
    </note>
    <note>
     <para>
      <parameter>role</parameter> è stato aggiunto in PHP4-RC2. E' funzionante
       solo con InterBase 5 e versioni successive.
     </para>
    </note>
    <para>
     Vedere anche: <function>ibase_pconnect</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-pconnect">
   <refnamediv>
    <refname>ibase_pconnect</refname>
    <refpurpose>
     Crea una connessione persistente ad un database Interbase
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_connect</function></funcdef>
      <paramdef>string <parameter>database</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>username</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>password</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>charset</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>role</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ibase_pconnect</function> agisce in modo molto simile a
     <function>ibase_connect</function> con due differenze principali.
     Innanzitutto, durante la connessione, la funzione cercherà prima di trovare un
     collegamento (persistente) che è già stato aperto con gli stessi parametri.
     Se viene trovato, il suo identificatore verrà restituito al posto di aprire
     una nuova connessione. In secondo luogo, la connessione al server InterBase
     non verrà chiusa al termine dell'esecuzione dello script.
     Invece, il collegamento resterà aperto per un uso futuro
     (<function>ibase_close</function> non chiuderà i collegamenti stabiliti
     da <function>ibase_pconnect</function>). Questo tipo di collegamento è
     perciò chiamato  'persistente'.
    </para>
    <para>
     Vedere anche <function>ibase_connect</function> per il significato dei parametri
     passati a questa funzione. Sono esattamente gli stessi.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-close">
   <refnamediv>
    <refname>ibase_close</refname>
    <refpurpose>
     Chiude una connessione ad un database InterBase
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_close</function></funcdef>
      <paramdef>int 
       <parameter><optional>connection_id</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Chiude il collegamento ad un database InterBase che è stato associato con
     un id di connessione restituito da <function>ibase_connect</function>.
     Se l'id di connessione viene omesso, viene considerato l'ultimo collegamento che è stato aperto.
     La transazione predefinita sul collegamento viene "committed", le altre transazioni vengono
     "rolled back". 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-query">
   <refnamediv>
    <refname>ibase_query</refname>
    <refpurpose>Esegue una query su di un database InterBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_query</function></funcdef>
      <paramdef>int 
       <parameter><optional>link_identifier</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter>query</parameter>
      </paramdef>
      <paramdef>int 
       <parameter><optional>bind_args</optional></parameter> 
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Esegue una query su di un database InterBase, restituendo un identificatore di
     result da usare con <function>ibase_fetch_row</function>,
     <function>ibase_fetch_object</function>,
     <function>ibase_free_result</function> e
     <function>ibase_free_query</function>.
    </simpara>
    <note>
     <para>
      Sebbene questa funzione supporti il binding di variabile sui "segnaposto"
      dei parametri, non ha molto senso usare questa possibilità con essa.
      Per un uso reale e un esempio, vedere
      <function>ibase_prepare</function> e
      <function>ibase_execute</function>.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-fetch-row">
   <refnamediv>
    <refname>ibase_fetch_row</refname>
    <refpurpose>Elabora una riga da un database InterBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>ibase_fetch_row</function></funcdef>
      <paramdef>int
       <parameter>result_identifier</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Restituisce la riga successiva specificata dell'identificatore di result ottenuto
     usando <function>ibase_query</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-fetch-object">
   <refnamediv>
    <refname>ibase_fetch_object</refname>
    <refpurpose>Ottiene un oggetto da un database InterBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>ibase_fetch_object</function></funcdef>
      <paramdef>int
       <parameter>result_id</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Elabora una riga come un pseudo-oggetto da un
     <parameter>result_id</parameter> ottenuto o da
     <function>ibase_query</function> o da
     <function>ibase_execute</function>.
     <informalexample>
      <programlisting role="php">
&lt;php
    $dbh = ibase_connect ($host, $username, $password);
    $stmt = 'SELECT * FROM tblname';
    $sth = ibase_query ($dbh, $stmt);
    while ($row = ibase_fetch_object ($sth)) {
        print $row->email . "\n";
    }
    ibase_close ($dbh);
?>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Vedere anche <function>ibase_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-free-result">
   <refnamediv>
    <refname>ibase_free_result</refname>
    <refpurpose>Libera la memoria allocata da un result set</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_free_result</function></funcdef>
      <paramdef>int
       <parameter>result_identifier</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Libera un result set che è stato creato da
     <function>ibase_query</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-prepare">
   <refnamediv>
    <refname>ibase_prepare</refname>
    <refpurpose>
     Prepara una query per un successivo binding dei segnaposto dei parametri ed
     esecuzione
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_prepare</function></funcdef>
      <paramdef>int 
       <parameter><optional>link_identifier</optional></parameter>
      </paramdef>
      <paramdef>string <parameter>query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Prepara una query per un successivo binding dei segnaposto dei parametri ed
     esecuzione (tramite <function>ibase_execute</function>).
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-execute">
   <refnamediv>
    <refname>ibase_execute</refname>
    <refpurpose>Esegue una query preparata in precedenza</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_execute</function></funcdef>
      <paramdef>int 
       <parameter>query</parameter>
      </paramdef>
      <paramdef>int 
       <parameter><optional>bind_args</optional></parameter> 
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Esegue una query preparata da <function>ibase_prepare</function>.
     Ciò è molto più efficace che usare <function>ibase_query</function>
     se state ripetendo uno stesso tipo di query molte volte cambiando solo
     alcuni parametri.
     <informalexample>
      <programlisting role="php">
&lt;?php
    $updates = array(
        1 => 'Eric',
        5 => 'Filip',
        7 => 'Larry'
    );

    $query = ibase_prepare("UPDATE FOO SET BAR = ? WHERE BAZ = ?");

    while (list($baz, $bar) = each($updates)) {
        ibase_execute($query, $bar, $baz);
    }
?>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-free-query">
   <refnamediv>
    <refname>ibase_free_query</refname>
    <refpurpose>
     Libera la memoria allocata da una query preparata
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_free_query</function></funcdef>
      <paramdef>int
       <parameter>query</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Libera la memoria allocata da una query preparata da <function>ibase_prepare</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-timefmt">
   <refnamediv>
    <refname>ibase_timefmt</refname>
    <refpurpose>
     Imposta il formato delle colonne timestamp, date e time restituite dalle query
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_timefmt</function></funcdef>
      <paramdef>string
       <parameter>format</parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>columntype</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Imposta il formato delle colonne di tipo timestamp, date o time restituite
     dalle query. Internamente, le colonne vengono formattate dalla funzione C
     strftime(), quindi fate riferimento alla sua documentazione riguardo al formato della
     stringa. <parameter>columntype</parameter> è una delle costanti
     IBASE_TIMESTAMP, IBASE_DATE e IBASE_TIME. Se omessa,
     è predefinita a IBASE_TIMESTAMP per motivi di compatibilità con il passato.
     <informalexample>
      <programlisting role="php">
&lt;?php
    // Le colonne di tipo TIME di InterBase vengono restituite nella
    // forma '05 hours 37 minutes'. 
    ibase_timefmt("%H hours %M minutes", IBASE_TIME);
?>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Potete impostare anche valori predefiniti per questi formati con la direttiva di configurazione
     ibase.timestampformat, ibase.dateformat e ibase.timeformat.
    </para>
    <note>
     <para>
      <parameter>columntype</parameter> è stata aggiunta in PHP 4.0. Ha significato
      solo con InterBase versione 6 e successive.
     </para>
    </note>
    <note>
     <para>
      Un'incompatibilità con il passato si è avuta nel PHP 4.0 quando la direttiva di configurazione del PHP
      ibase.timeformat è stata rinominata in
      ibase.timestampformat e la direttiva ibase.dateformat e
      ibase.timeformat sono state aggiunte, così che i loro nomi fossero più simili
      alle loro funzionalità.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.ibase-num-fields">
   <refnamediv>
    <refname>ibase_num_fields</refname>
    <refpurpose>
     Ottiene il numero di campi in un result set
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_num_fields</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce un integer contenente il numero di campi in un result 
     set.
     <informalexample>
      <programlisting role="php">
&lt;?php
    $dbh = ibase_connect ($host, $username, $password);
    $stmt = 'SELECT * FROM tblname';
    $sth = ibase_query ($dbh, $stmt);

    if (ibase_num_fields($sth) > 0) {
        while ($row = ibase_fetch_object ($sth)) {
            print $row->email . "\n";
        }
    } else {
        die ("Nessun result è stato trovato per la tua query");
    }

    ibase_close ($dbh);
?>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Vedere anche: <function>ibase_field_info</function>.
    </para>
    <note>
     <para>
      <function>Ibase_num_fields</function> è attualmente non funzionante
      in PHP 4.
     </para>
    </note>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
