<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.27 Maintainer: darvin  Status: ready -->
 <reference id="ref.odbc">
  <title>Funzioni ODBC Unificate</title>
  <titleabbrev>ODBC</titleabbrev>
  <partintro>
   <simpara>
    In aggiunta al normale supporto ODBC, le funzioni ODBC unificate del
    PHP consentono l'accesso a diversi database che hanno preso in prestito
    la semantica dell'API ODBC per implementare la loro API. Invece di 
    mantenere più driver per database che sono tutti pressoché 
    identici, questi driver sono stati riuniti in un singolo insieme di 
    funzioni ODBC.
   </simpara>
   <simpara>
    I seguenti database sono supportati dalle funzioni ODBC unificate:
    <ulink url="&url.adabas;">Adabas D</ulink>, <ulink
    url="&url.ibmdb2;">IBM DB2</ulink>, <ulink
    url="&url.iodbc;">iODBC</ulink>, <ulink
    url="&url.solid;">Solid</ulink>, and <ulink
    url="&url.sybase;">Sybase SQL Anywhere</ulink>.
   </simpara>
<!-- install.xml has changed, so this link is no longer working
   <simpara>
    Please see the <link
    linkend="database-support-options">Installation on Unix
    Systems</link> chapter for more information about configuring PHP
    with these databases.
   </simpara>
-->
   <note>
    <simpara>
     Nella connessione ai database sopra elencati non vengono coinvolte funzioni
     ODBC. Le funzioni che vengono utilizzate per collegarsi nativamente con essi
     condividono solamente lo stesso nome e sintassi delle funzioni ODBC.L'eccezione
     a questo è iODBC. Compilando il PHP con il supporto di iODBC,
     si può utilizzare qualsiasi driver compatibile ODBC nelle applicazioni PHP.
     iODBC è gestito da <ulink url="&url.openlink;">
     OpenLink Software</ulink>. Maggiori informazioni su iODBC, e un 
     HOWTO sono diponibili nel sito <ulink url="&url.iodbc;">www.iodbc.org</ulink>.
    </simpara>
   </note>
  </partintro>

  <refentry id="function.odbc-autocommit">
   <refnamediv>
    <refname>odbc_autocommit</refname>
    <refpurpose>Setta il parametro autocommit</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_autocommit</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>int <parameter><optional>OnOff</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Se non viene fornito il parametro <parameter>OnOff</parameter>, la funzione
     restituisce lo stato dell'auto-commit per 
     <parameter>id_connessione</parameter>.  Il valore reso è vero se l'autocommit 
     è attivo, altrimenti falso se non è attivato oppure si verifica un errore.
    </para>
    <para>
     Se il campo <parameter>OnOff</parameter> è posto a vero, l' auto-commit è abilitato,
     se è valorizzato a falso l'auto-commit è disabilitato.  La funzione restituisce 
     &true; se l'operazione riesce, &false; se si 
     verifica un errore.
    </para>
    <para>
     Per default, l'auto-commit è abilitato. La disabilitazione 
     dell'auto-commit equivale ad iniziare una transazione.
    </para>
    <simpara>
     Vedere inoltre
     <function>odbc_commit</function> e
     <function>odbc_rollback</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-binmode">
   <refnamediv>
    <refname>odbc_binmode</refname>
   <refpurpose>Gestione delle colonne di dati binari</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
   <funcsynopsis>
     <funcprototype>
     <funcdef>int <function>odbc_binmode</function></funcdef>
     <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>int <parameter>modalità</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (Tipi di campi ODBC SQL coinvolti: BINARY, VARBINARY, LONGVARBINARY)
    </para>
    <itemizedlist>
      <listitem>
      <simpara>
       ODBC_BINMODE_PASSTHRU: Restituzione del dato binario direttamente al client
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       ODBC_BINMODE_RETURN: restituisce il dato inalterato
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ODBC_BINMODE_CONVERT: Conversione in char
      </simpara>
     </listitem>
    </itemizedlist>
    <para>
     Quando si esegue la conversione da dati binari SQL a dati di tipo char del C,
     ciascun byte ( 8 bits) dei dati sorgenti vengono rappresentati da 2 caratteri ASCII.
     Questi caratteri sono la rappresentazione ASCII dei numeri nella
     loro forma esadecimale. Ad esempio, il valore binario 00000001 è 
     convertito in <literal>"01"</literal> e il valore binario 11111111 è 
     convertito come <literal>"FF"</literal>.
     <table>
      <title>Gestione del tipo LONGVARBINARY </title>
      <tgroup cols="3">
       <thead>
	<row>
	 <entry>Modalità</entry>
         <entry>Impostazione di longreadlen</entry>
	 <entry>Comportamento</entry>
	</row>
       </thead>
       <tbody>
	<row>
	 <entry>ODBC_BINMODE_PASSTHRU</entry>
	 <entry>0</entry>
	 <entry>direttamente al client</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_RETURN</entry>
	 <entry>0</entry>
	 <entry>direttamente al client</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_CONVERT</entry>
	 <entry>0</entry>
	 <entry>direttamente al client</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_PASSTHRU</entry>
	 <entry>0</entry>
	 <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_PASSTHRU</entry>
	 <entry>>0</entry>
	 <entry>direttamente al client</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_RETURN</entry>
	 <entry>>0</entry>
	 <entry>restituito inalterato</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_CONVERT</entry>
	 <entry>>0</entry>
	 <entry>restituito come char</entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Se viene utilizzata <function>odbc_fetch_into</function>, nei casi in cui il dato viene inviato direttamente al client, quest'ultima 
     restituisce una stringa vuota per le colonne binarie.
    </para>
    <para>
     Se l'argomento <parameter>id_risultato</parameter> è valorizzato a <literal>0</literal>, 
     il settaggio viene applicato come default per i nuovi risultati.
     <note>
      <simpara> 
       I valori di default per longreadlen è <literal>4096</literal>, mentre la modalità di 
       default è <literal>ODBC_BINMODE_RETURN</literal>.  La gestione delle colonne
       di campi long binary, è anche gestita dalla funzione
       <function>odbc_longreadlen</function>
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.odbc-close">
   <refnamediv>
    <refname>odbc_close</refname>
    <refpurpose>Chiude una connessione ODBC</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>odbc_close</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_close</function> chiude la connessione
     con il database server associata all'identificativo di connessione
     indicato.
     <note>
      <simpara>
       Se ci sono delle transazioni aperte sulla connessione richiesta, la funzione
       fallisce. In questo caso la connessione resta aperta.
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-close-all">
   <refnamediv>
    <refname>odbc_close_all</refname>
    <refpurpose>Chiude tutte le connessioni ODBC</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>odbc_close_all</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_close_all</function>chiude tutte le connessioni
     aperte con il database server
     <note>
      <simpara>
       Se ci sono delle transazioni aperte sulla connessione richiesta, la funzione
       fallisce. In questo caso la connessione resta aperta.
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-commit">
   <refnamediv>
    <refname>odbc_commit</refname>
    <refpurpose>Esegue una transazione ODBC</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_commit</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce: &true; per operazione corretta,
     &false; se si verifica un errore. Sono eseguite tutte le 
     transazioni pendenti sulla connessione indicata dall'argomento <parameter>id_connessione</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-connect">
   <refnamediv>
    <refname>odbc_connect</refname>
    <refpurpose>Apre una connessione con una fonte di dati</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_connect</function></funcdef>
      <paramdef>string <parameter>dsn</parameter></paramdef>
      <paramdef>string <parameter>utente</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
      <paramdef>int <parameter><optional>tipo_cursore</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce un identificatore di connessione ODBC oppure 0 (<literal>falso</literal>) 
     se si verifica un errore.
    </para>
    <simpara>
     L'identificatore di connessione ritornato da questa funzione è 
     utilizzato dalle altre funzioni ODBC. Si possono avere più connessioni aperte contemporaneamente.
     Il quarto parametro (opzionale), setta il tipo di cursore da utilizzare per questa connessione. Normalmente
     questo parametro non è necessario, ma può essere utilizzato per aggirare
     dei problemi che si manifestano con alcuni driver ODBC.
    </simpara>
    <simpara>
     Con alcuni driver ODBC, l'esecuzione di complesse procedure può 
     generare un errore tipo: "Non si riesce ad aprire un cursore sulla
     procedura che richieda qualsiasi cosa oltre ad un singola istruzione 
     select". L'uso di SQL_CUR_USE_ODBC, può evitare questo errore. Inoltre 
     alcuni driver non supportano il parametro row_number della funzione 
     <function>odbc_fetch_row</function>. In questo caso SQL_CUR_USE_ODBC
     può essere d'aiuto.
    </simpara>
    <simpara>
     Il campo tipo_cursore può assumere le seguenti costanti:
    </simpara>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
	SQL_CUR_USE_IF_NEEDED
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	SQL_CUR_USE_ODBC
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	SQL_CUR_USE_DRIVER
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	SQL_CUR_DEFAULT
       </simpara></listitem> 
     </itemizedlist>
    </para>
    <simpara>
     Per le connessioni persistenti vedere
     <function>odbc_pconnect</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-cursor">
   <refnamediv>
    <refname>odbc_cursor</refname>
    <refpurpose>Restituisce il nome del cursore</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_cursor</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     odbc_cursor restituisce il nome del cursore per l'argomento id_risultato.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-do">
   <refnamediv>
    <refname>odbc_do</refname>
    <refpurpose>Sinonimo di <function>odbc_exec</function></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_do</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter>query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_do</function> esegue una query sulla connessione
     data.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-error">
   <refnamediv>
    <refname>odbc_error</refname>
    <refpurpose>Restituisce l'ultimo codice di errore</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_error</function></funcdef>
      <paramdef>int <parameter><optional>id_connessione</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     La funzione restituisce un codice di 6 cifre indicante lo stato di ODBC. Se non
     vi sono errori viene restituita una stringa vuota. Se viene passato il parametro <parameter>id_connessione</parameter>, viene 
     restituito l'ultimo stato di questa connessione, altrimenti si ha l'ultimo stato 
     dell'ultima operazione su una qualsiasi connessione.
    </simpara>
    <simpara> 
     Vedere anche: <function>odbc_errormsg</function> e
     <function>odbc_exec</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-errormsg">
   <refnamediv>
    <refname>odbc_errormsg</refname>
    <refpurpose>Restituisce l'ultimo messaggio d'errore</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_errormsg</function></funcdef>
      <paramdef>int <parameter><optional>id_connessione</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     la funzione restituisce una stringa contenente l'ultimo messaggio di 
     errore generato da ODBC, oppure una stringa vuota se non ci sono errori. Se
     viene passato il parametro <parameter>id_connessione</parameter>, viene restituito l'ultimo stato di questa 
     connessione, altrimenti si ha l'ultimo stato dell'ultima operazione su una qualsiasi
     connessione.
    </simpara>
    <simpara> 
     Vedere anche: <function>odbc_error</function> and
     <function>odbc_exec</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-exec">
   <refnamediv>
    <refname>odbc_exec</refname>
    <refpurpose>Prepara ed esegue una espressione SQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_exec</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter>testo_query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce &false; se si verifica un errore. Restituisce un
     identificatore del risultato ODBC se l'espressione SQL viene eseguita correttamente.
    </para>
    <para>
     <function>odbc_exec</function> invia una espressione SQL
     al server tramite la connessione specificata da
     <parameter>id_connessione</parameter>. Questo parametro deve essere
     un identificativo valido restituito da <function>odbc_connect</function> oppure
     <function>odbc_pconnect</function>.
    </para>
    <simpara> 
     Vedere anche: <function>odbc_prepare</function> e
     <function>odbc_execute</function> per l'esecuzione di molteplici
     espressioni SQL.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-execute">
   <refnamediv>
    <refname>odbc_execute</refname>
    <refpurpose>Esecuzione di un'espressione memorizzata</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_execute</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>array
       <parameter><optional>array_parametri</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Esegue una espressione SQL memorizzata tramite la funzione 
     <function>odbc_prepare</function>.  Restituisce
     &true; se l'esecuzione riesce,
     &false; in caso negativo. L'array 
     <parameter>array_parametri</parameter> occorre soltanto
     se è necessario fornire parametri all'espressione.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-fetch-into">
   <refnamediv>
    <refname>odbc_fetch_into</refname>
    <refpurpose>Scarica una riga del risultato della query in un array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_fetch_into</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>int <parameter><optional>numero_riga</optional></parameter></paramdef>
      <paramdef>array <parameter>array_dati</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     La funzione restituisce il numero di colonne presenti nel risultato;
     &false; se si verifica un errore.
     Il parametro <parameter>array_dati</parameter> deve essere passato per referenza,
     ma può essere di qualsiasi tipo dato che verrà convertito     
     in array. Nell'array saranno posti i valori delle colonne di una riga tratta dalla tabella 
     risultante dalla query a partire dall'indice 0.
    </para>
 <para>
    <example>
     <title><function>odbc_fetch_into</function> Esempi pre 4.0.6</title>
     <programlisting role="php">
<![CDATA[
$rc = odbc_fetch_into($id_risultato, $array_di_test);
]]>
     </programlisting>
     <para>
      oppure
     </para>      
     <programlisting role="php">
<![CDATA[
$rc = odbc_fetch_into($id_risultato, $riga, $array_di_test);
       
$rc = odbc_fetch_into($id_risultato, 1, $array_di_test);
]]>
     </programlisting>
    </example>
   </para>
   <para>
    A partire dalla versione 4.0.5 non è necessario che il parametro 
    <parameter>result_array</parameter> sia passato per riferimento.
   </para>
   <para>
    A partire dalla versione 4.0.6 il parametro <parameter>rownumber</parameter> 
    non può essere passato come una costante, ma solo come una variabile.
   </para>
   <para>
    <example>
     <title><function>odbc_fetch_into</function> Esempi con PHP 4.0.6 </title>
     <programlisting role="php">
<![CDATA[
$rc = odbc_fetch_into($id_risultato, $array_di_test);
]]>
     </programlisting>
     <para>
      oppure
     </para>
     <programlisting role="php">
<![CDATA[
$riga = 1;
$rc = odbc_fetch_into($id_risultato, $riga, $array_di_test);
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Versioni future:: In PHP 4.1, questa funzione assurà il seguente 
    formato:
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_fetch_into</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>array <parameter>array_dati</parameter></paramdef>
      <paramdef>int <parameter><optional>numero_riga</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    Notare che <parameter>numero_riga</parameter> sarà opzionale, mentre
    <parameter>array_dati</parameter> no.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-fetch-row">
   <refnamediv>
    <refname>odbc_fetch_row</refname>
    <refpurpose>Estrae una riga</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_fetch_row</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>int <parameter><optional>numero_riga</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Se <function>odbc_fetch_row</function> ha successo ( c'è almeno
     una riga), la funzione restituisce &true;. Altrimenti, se non vi sono più
     righe, la funzione restituisce &false;.
    </para>
    <para>
     <function>odbc_fetch_row</function> estrae un record dai dati 
     restituiti dalle funzioni <function>odbc_do</function> /
     <function>odbc_exec</function>. Dopo l'esecuzione di 
     <function>odbc_fetch_row</function>, i campi della riga sono
     accessibili tramite la funzione <function>odbc_result</function>.
    </para>
    <para>
     Se non viene specificato il parametro <parameter>numero_riga</parameter>,
     <function>odbc_fetch_row</function> restituisce la riga successiva dal set
     delle righe risultanti dalla query. Si può intercalare esecuzioni
     successive di <function>odbc_fetch_row</function> con e senza il parametro
     <parameter>numero_riga</parameter>.
    </para> 
    <para>
     Per spostarsi attraverso le righe risultanti, si può eseguire
     <function>odbc_fetch_row</function> con il parametro 
     <parameter>numero_riga</parameter> impostato a 1, e quindi continuare 
     ad utilizzare <function>odbc_fetch_row</function> senza
     <parameter>numero_riga</parameter>.  Se il driver non supporta
     l'estrazione di una riga per numero, il campo 
     <parameter>numero_riga</parameter> sarà ignorato.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-name">
   <refnamediv>
    <refname>odbc_field_name</refname>
    <refpurpose>Restituisce il nome della colonna</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_field_name</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>int <parameter>numero_campo</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     La funzione <function>odbc_field_name</function> restituisce il nome
     del campo presente nella colonna richiesta all'interno di un risultato ODBC
     identificato dal'argomento id_risultato. La numerazione delle colonne parte da 1.
     La funzione restituisce <literal>falso</literal> se si verifica un errore.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-num">
   <refnamediv>
    <refname>odbc_field_num</refname>
    <refpurpose>Restituisce il numero di colonna</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_field_num</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>string <parameter>nome_campo</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_field_num</function> restituisce il numero della colonna
      in cui si trova il campo richiesto all'interno di un risultato ODBC indicato
      dall'argomento id_risultato. La numerazione delle colonne
      parte da 1. Si ottiene &false; se si verifica un errore.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-type">
   <refnamediv>
    <refname>odbc_field_type</refname>
    <refpurpose>Tipo di dato di campo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_field_type</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>int <parameter>numero_campo</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     La funzione <function>odbc_field_type</function> restituisce il tipo
     di dato SQL del campo indicato dal numero all'interno di un set di righe 
     referenziate dall'identificativo di risultato ODBC passato. La numerazione delle colonne parte da 1.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-len">
   <refnamediv>
    <refname>odbc_field_len</refname>
    <refpurpose>Restituisce la dimensione (precisione) di un campo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_field_len</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>int <parameter>numero_campo</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     All'interno di un set di righe, referenziate dall'identificativo
     di risultato ODBC fornito, la funzione <function>odbc_field_len</function> 
     restituisce la dimensione (precisione) del campo indicato dall'argomento. La numerazione dei campi parte da 1.
    </para>
    <simpara>
     Vedere anche: <function>odbc_field_scale</function> per ottenere la scala di
     un numero in virgola mobile.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-precision">
   <refnamediv>
    <refname>odbc_field_precision</refname>
    <refpurpose>Sinonimo di <function>odbc_field_len</function></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_field_precision</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>int <parameter>numero_campo</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     All'interno di un set di righe, referenziate dall'identificativo
     di risultato ODBC fornito, la funzione <function>odbc_field_precision</function> 
     restituisce la precisione del campo indicato dal numero di campo indicato.
    </para>
    <para>
     Vedere anche: <function>odbc_field_scale</function> per ottenere la scala di
     un numero in virgola mobile.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-scale">
   <refnamediv>
    <refname>odbc_field_scale</refname>
    <refpurpose>Restituisce la scala di un campo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_field_scale</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>int <parameter>numero_campo</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     All'interno di un set di righe, referenziate dall'identificativo
     di risultato ODBC fornito, la funzione <function>odbc_field_precision</function> 
     restituisce la scala del campo indicato dal numero di campo indicato.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-free-result">
   <refnamediv>
    <refname>odbc_free_result</refname>
    <refpurpose>Libera le risorse associate ad un risultato</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_free_result</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce sempre &true;.
    </para>
    <para>
     La funzione <function>odbc_free_result</function> permette
     di non utilizzare molta memoria durante l'esecuzione di uno script. 
     Infatti, se si è sicuri di non avere più bisogno dei dati del risultato, 
     si può eseguire <function>odbc_free_result</function>, e la memoria associata
     a <parameter>id_risultato</parameter> sarà liberata. Se la funzione
     non viene utilizzata, le aree di memoria resteranno disponibili per tutta
     la durata dello script. Al termine verranno liberate in modo automatico.
    </para>
    <para>
     <note>
      <simpara>
       Se si ha l'auto-commit disabilitato (vedere
       <function>odbc_autocommit</function>) e si esegue
       <function>odbc_free_result</function> prima di eseguire il commit, tutte le
       transazioni pendenti saranno annullate,
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-longreadlen">
   <refnamediv>
    <refname>odbc_longreadlen</refname>
   <refpurpose>Gestione di colonne LONG</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descrizione</title>
   <funcsynopsis>
     <funcprototype>
     <funcdef>int <function>odbc_longreadlen</function></funcdef>
     <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>int <parameter>lunghezza</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (tipi di campi ODBC ed SQL coinvolti: LONG, LONGVARBINARY) Tramite 
     l'argomento lunghezza si controlla il numero di byte da ritornare a PHP. 
     Se il campo viene posto a 0, i dati della colonna saranno passati 
     direttamente al client.
    </para> 
    <note>
     <simpara> 
      Per la gestione delle colonne di tipo LONGVARBINARY si utilizza anche
      <function>odbc_binmode</function>.
     </simpara>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-num-fields">
   <refnamediv>
    <refname>odbc_num_fields</refname>
    <refpurpose>Numero di colonne in un esito</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_num_fields</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     All'interno di un set di righe, referenziate dall'identificativo  di risultato ODBC fornito, la funzione <function>odbc_num_fields</function> 
     restituisce il numero di campi (colonne) presenti. La funzione restituisce -1 se si
     verifica un errore. L'argomento fornito è un identificatore di esito restituito 
     dalla funzione <function>odbc_exec</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-pconnect">
   <refnamediv>
    <refname>odbc_pconnect</refname>
    <refpurpose>Apre una connessione persistente verso un database</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_pconnect</function></funcdef>
      <paramdef>string <parameter>dsn</parameter></paramdef>
      <paramdef>string <parameter>utente</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
      <paramdef>int <parameter><optional>tipo_cursore</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce un identificatore di connessione ODBC oppure 0 (&false;) 
     su errore. Questa funzione è molto simile 
     a <function>odbc_connect</function>, eccetto che la connessione non viene realmente chiusa quando
     lo script finisce. Successive richieste di connessione che utilizzino la 
     stessa combinazione di <parameter>dsn</parameter>,
     <parameter>utente</parameter>, <parameter>password</parameter>
     (eseguite sia utilizzando  <function>odbc_connect</function>, sia utilizzando 
     <function>odbc_pconnect</function>) possono riutilizzare la 
     connessione.
    </para>
    <para>
     <note>
      <simpara>
       Le connessioni persistenti non hanno effetti se PHP viene utilizzato
       come programma CGI.
      </simpara>
     </note>
    </para>
    <para>
     Per informazioni sul campo opzionale tipo_cursore, vedere la funzione
     <function>odbc_connect</function>. Per maggiori dettagli sulle
     connessioni persistenti, fare riferimento alla FAQ di PHP.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-prepare">
   <refnamediv>
    <refname>odbc_prepare</refname>
    <refpurpose>Predispone un'espressione all'esecuzione</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_prepare</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter>testo_query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     La funzione restituisce &false; su errore.
    </para>
    <para>
     Restituisce un identificativo di risultato ODBC se l'espressione SQL viene predisposta 
     correttamente. L'identificativo restituito può essere utilizzato successivamente per eseguire 
     l'espressione utilizzando la funzione <function>odbc_execute</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-num-rows">
   <refnamediv>
    <refname>odbc_num_rows</refname>
    <refpurpose>Numero di righe in un risultato</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_num_rows</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_num_rows</function> ritorna il numero di record 
     presenti in un risultato ODBC. La funzione ritorna -1 se si verifica un errore. 
     Per le clausole INSERT, UPDATE e DELETE,
     <function>odbc_num_rows</function> ritorna il numero di righe
     coinvolte.  Nella clausola SELECT questo <literal>può</literal> essere
     il numero di righe disponibili.
    </para>
    <para>
     Nota: Con diversi driver, la funzione <function>odbc_num_rows</function>, utilizzata con
     lo scopo di determinare il numero di righe dopo una SELECT, 
     restituisce -1.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-result">
   <refnamediv>
    <refname>odbc_result</refname>
    <refpurpose>Restituisce il contenuto dei campi</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_result</function></funcdef>
      <paramdef>int <parameter>id_risultato</parameter></paramdef>
      <paramdef>mixed <parameter>campo</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce il contenuto dei campi.
    </para>
    <para>
     Il parametro <parameter>campo</parameter> può essere sia un intero
     indicante il numero di colonna del campo desiderato; sia una stringa
     contenente il nome del campo. Ad esempio:
     <informalexample><programlisting>
<![CDATA[
$item_3 = odbc_result ($Query_ID, 3);
$item_val = odbc_result ($Query_ID, "val");
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Nel primo caso l'esecuzione di <function>odbc_result</function> restituisce 
     il valore del terzo campo del record corrente della 
     query. Nel secondo, la funzione 
     <function>odbc_result</function> restituisce il valore del campo 
     il cui nome è "val", sempre utilizzando i dati dal record 
     corrente. Si ha un errore qualora il numero di colonna fornito sia minore di 1
     oppure sia superiore al numero delle colonne (o campi) presenti 
     nel record corrente. Analogamente, si ottiene un errore se il nome del campo 
     richiesto non sia presente nella tabella/e 
     oggetto della ricerca.
    </para>
    <para>
     L'indice dei campi parte da 1. Per quanto riguarda la gestione dei campi
     di tipo binario o long fare riferimento a 
     <function>odbc_binmode</function> e a 
     <function>odbc_longreadlen</function>.

<!--

Se il campo richiesto contiene dati binari o
    è un campo di tipo LONG, più lungo di 4096 bytes,
    il contenuto non viene restituito, ma invece viene
    inviato direttamente al client. Se si ha necessità di avere restituiti i dati binari, utilizzare
    la funzione SQL HEX(), in modo da ottenere i dati del campo in 
     notazione esadecimale. Ad esempio: "SELECT
     HEX(binary_col) FROM mytable"
-->

    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-result-all">
   <refnamediv>
    <refname>odbc_result_all</refname>
    <refpurpose>Visualizza il risultato in una tabella HTML</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_result_all</function></funcdef>
      <paramdef>int <parameter>id_esito</parameter></paramdef>
      <paramdef>string <parameter><optional>formato</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce il numero di righe elaborate, oppure
     &false; se si verifica un errore.
    </para>
    <para>
     Dato un identificatore di risultato restituito da  <function>odbc_exec</function>,
     la funzione <function>odbc_result_all</function> visualizza tutti i record
     ottenuti in una di tabella in formato HTML.
     Utilizzando il parametro opzionale <parameter>formato</parameter>, è possibile
     fornire informazioni addizionali sulla formattazione della tabella.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-rollback">
   <refnamediv>
    <refname>odbc_rollback</refname>
    <refpurpose>Annulla una transazione</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_rollback</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Annulla tutte le operazioni pendenti sulla connessione indicata 
     da <parameter>id_connessione</parameter>. Se ha successo restituisce 
     &true;, 
     altrimenti &false;.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-setoption">
   <refnamediv>
    <refname>odbc_setoption</refname> 
    <refpurpose>
     Settaggio dei parametri ODBC. Restituisce &false; se si verifica un errore, altrimenti 
     &true;.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_setoption</function></funcdef>
      <paramdef>int <parameter>identificativo</parameter></paramdef>
      <paramdef>int <parameter>funzione</parameter></paramdef>
      <paramdef>int <parameter>opzione</parameter></paramdef>
      <paramdef>int <parameter>parametro</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Questa funzione permette di manipolare i parametri ODBC per
     la connessione o il risultato di una query indicati. La funzione è stata sviluppata per permettere 
     di aggirare dei problemi emersi in alcuni driver ODBC. Pertanto si dovrebbe 
     utilizzare questa funzione soltanto se si è dei programmatori e 
     si conoscono gli effetti generati dalle varie opzioni. Dato che 
     ogni singola versione di driver ODBC supporta differenti parametri, occorre avere a disposizione un buon manuale del 
     driver per avere esposti tutti i differenti settaggi che possono
     essere utilizzati.
    </para>
    <para>
     Poiché i parametri possono variare in base al driver ODBC, è fortemente sconsigliato
     l'uso di questa funzione in script resi pubblici. Inoltre,
     alcune opzioni di ODBC non sono gestibili da questa funzione, 
     dato che devono essere specificate prima di stabilire la 
     connessione o prima della preparazione della query. Tuttavia,
     se per un particolare lavoro permette al PHP di funzionare, può evitare
     il ricorso a prodotti commerciali.
    </para>
    <para>
     Il campo <parameter>identificativo</parameter> indica la connessione
     o l'esito su cui si varia il settaggio. Per la funzione SQLSetConnectOption(),
     questo indica l'identificativo di connessione, per SQLSetStmtOption(), 
     indica l'identificativo del risultato.
    </para>
    <para>
     Il campo <parameter>funzione</parameter> indica quale funzione ODBC 
     utilizzare. Dovrebbe essere valorizzato a 1 per SQLSetConnectOption() 
     e a 2 per SQLSetStmtOption().
    </para>
    <para>
     Il parametro <parameter>opzione</parameter> indica l'opzione da settare.</para>
    <para>
     Il campo <parameter>parametro</parameter> indica il valore per
     l'<parameter>opzione</parameter> richiesta.
     <example>
      <title>Esempi di utilizzo</title>
      <programlisting role="php">
<![CDATA[
// 1. Il valore 102 per il campo opzione in SQLSetConnectOption() indica SQL_AUTOCOMMIT.
//    Il valore 1 per SQL_AUTOCOMMIT è SQL_AUTOCOMMIT_ON.
//    Pertanto questo esempio ha il medesimo effetto di:
//    odbc_autocommit($conn, true);

odbc_setoption ($conn, 1, 102, 1);

// 2. Il valore 0 per il campo opzione in SQLSetStmtOption() indica SQL_QUERY_TIMEOUT.
//    In questo esempio si setta il timeout di una query a 30 secondi.

$result = odbc_prepare ($conn, $sql);
odbc_setoption ($result, 2, 0, 30);
odbc_execute ($result);
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.odbc-tables">
   <refnamediv>
    <refname>odbc_tables</refname>
    <refpurpose>
     Restituisce l'elenco delle tabelle presenti in una specifica
     sorgente di dati. Restituisce l'identificatore di risultato in cui 
     vi sono le informazioni.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_tables</function></funcdef>
      <paramdef>int <parameter>Id_connessione</parameter></paramdef>
      <paramdef>string <parameter><optional>qualifica</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>proprietario</optional></parameter></paramdef> 
      <paramdef>string <parameter><optional>nome</optional></parameter></paramdef> 
      <paramdef>string <parameter><optional>tipo</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     La funzione elenca tutte le tabelle presenti nei limiti richiesti.  Restituisce un identificatore
     di risultato oppure &false; se si verifica un errore.
    </para>
    <para>
     Le righe risultanti hanno i seguenti campi:
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem> 
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>TABLE_TYPE</simpara></listitem>
      <listitem><simpara>REMARKS</simpara></listitem>
     </itemizedlist> 
    </para>
    <simpara>
     I campi di ordinamento delle righe risultanti sono TABLE_TYPE, TABLE_QUALIFIER,
     TABLE_OWNER e TABLE_NAME.
    </simpara>
    <para>
     Gli argomenti <parameter>proprietario</parameter> e <parameter>nome</parameter>
     accettano dei criteri di ricerca ('%' per indicare zero o più
     caratteri e  '_' per indicare un singolo carattere).
    </para>
    <para>
     Per supportare l'enumerazione delle qualifiche, dei proprietari e dei tipi tabelle, 
     è stata predisposta la seguente semantica per i campi 
     <parameter>qualifica</parameter>, <parameter>proprietario</parameter>,
     <parameter>nome</parameter>, e 
     <parameter>tipo</parameter>:
     <itemizedlist>
      <listitem>
       <simpara>
        Se l'argomento <parameter>qualifica</parameter> è valorizzato
        con il carattere percento (%) e i parametri <parameter>proprietario</parameter> 
        e <parameter>nome</parameter> sono delle stringhe vuote, il risultato sarà
        un set di righe contenente la lista delle qualifiche previste per
        la sorgente di dati. (Tutte le colonne tranne TABLE_QUALIFIER conterranno
	NULL.)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Se l'argomento <parameter>proprietario</parameter> è valorizzato
        con il carattere percento (%) e i parametri <parameter>qualifica</parameter>
        e <parameter>nome</parameter> sono delle stringhe vuote, il risultato sarà
        un set di righe contenente la lista dei proprietari previsti per
        la sorgente di dati. (Tutte le colonne tranne TABLE_OWNER conterranno
	NULL.) 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Se l'argomento <parameter>tipo</parameter> è valorizzato
        con il carattere percento (%) e i parametri <parameter>qualifica</parameter>,
	<parameter>proprietario</parameter> e <parameter>nome</parameter>
	sono delle stringhe vuote, il risultato sarà un set di righe contenente la lista dei tipi di tabella 
	previsti per la sorgente di dati. (Tutte le colonne tranne TABLE_TYPE conterranno
	NULL.) 
       </simpara>
      </listitem>
     </itemizedlist> 
    </para>
    <para>
     Se l'argomento <parameter>tipo</parameter> non è una stinga vuota, deve
     contenere l'elenco dei tipi interessati separati dalla virgola;
     ogni singolo valore può essere, o meno, racchiuso tra apici singoli (').
     Ad esempio: "'TABLE','VIEW'" o "TABLE, VIEW" sono valori validi.
     Se la sorgente di dati non supporta alcuni dei tipi di tabelle specificati,
     per questi, la funzione <function>odbc_tables</function> non riporta alcuna
     informazione.
    </para>
    <simpara>
     Vedere inoltre <function>odbc_tableprivileges</function> per ottenere i
     privilegi associati alla tabella.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-tableprivileges">
   <refnamediv>
    <refname>odbc_tableprivileges</refname>
    <refpurpose>
     Elenca le tabelle ed i privilegi ad esse associati.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_tableprivileges</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter><optional>qualifica</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>proprietario</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>nome</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Elenca le tabelle presenti nei limiti richiesti e, per ciascuna di queste, 
     ne fornisce i privilegi. La funzione ritorna un identificatore di risultato ODBC, 
     oppure &false; su errore.
    </para>
    <para>
      Le righe risultanti dall'elaborazione hanno i seguenti campi:
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem>
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>GRANTOR</simpara></listitem>
      <listitem><simpara>GRANTEE</simpara></listitem>
      <listitem><simpara>PRIVILEGE</simpara></listitem>
      <listitem><simpara>IS_GRANTABLE</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     I campi di ordinamento delle righe risultanti sono TABLE_QUALIFIER, TABLE_OWNER e
     TABLE_NAME.
    </simpara>
    <para>
     Gli argomenti <parameter>proprietario</parameter> e <parameter>nome</parameter>
     accettano dei criteri di ricerca ('%' per indicare zero o più
     caratteri e  '_' per indicare un singolo carattere).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-columns">
   <refnamediv>
    <refname>odbc_columns</refname>
    <refpurpose>
     Elenca i nomi delle colonne nella tabella specificata. La funzione
     ritorna un identificatore di risultato contenenti le informazioni.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_columns</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter><optional>qualifica</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>proprietario</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>nome_tabella</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>nome_colonna</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Elenca i nomi di tutte le colonne presenti nel range richiesto. La funzione restituisce un identificatore di risultato ODBC
     oppure &false; se si verifica un errore.
    </para>
    <para>
     Le righe risultanti dall'elaborazione contengono i seguenti campi:
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem>
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>COLUMN_NAME</simpara></listitem>
      <listitem><simpara>DATA_TYPE</simpara></listitem>
      <listitem><simpara>TYPE_NAME</simpara></listitem>
      <listitem><simpara>PRECISION</simpara></listitem>
      <listitem><simpara>LENGTH</simpara></listitem>
      <listitem><simpara>SCALE</simpara></listitem>
      <listitem><simpara>RADIX</simpara></listitem>
      <listitem><simpara>NULLABLE</simpara></listitem>
      <listitem><simpara>REMARKS</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     I campi di ordinamento delle righe risultanti sono TABLE_QUALIFIER, 
     TABLE_OWNER e TABLE_NAME.
    </simpara>
    <para>
     Gli argomenti <parameter>proprietario</parameter>,
     <parameter>nome_tabella</parameter> e
     <parameter>nome_colonna</parameter> accettano dei 
     criteri di ricerca ('%' per indicare zero o più
     caratteri e  '_' per indicare un singolo carattere).
    </para>
    <simpara>
     Vedere anche <function>odbc_columnprivileges</function> per ottenere
     i privilegi associati alle colonne.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-columnprivileges">
   <refnamediv>
    <refname>odbc_columnprivileges</refname>
    <refpurpose>
     Restituisce un identificatore di risultato che permette di ricavare l'elenco
     delle colonne e dei privilegi ad esse associati.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_columnprivileges</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter><optional>qualifica</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>proprietario</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>nome_tabella</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>nome_colonna</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Elenca le colonne e i privilegi associati ad esse per la tabella data.
     La funzione ritorna un identificatore di risultato ODBC
     oppure &false; se si verifica un errore.
    </para>
    <para>
     Le righe risultanti dall'elaborazione contengono i seguenti campi:
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem>
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>GRANTOR</simpara></listitem>
      <listitem><simpara>GRANTEE</simpara></listitem>
      <listitem><simpara>PRIVILEGE</simpara></listitem>
      <listitem><simpara>IS_GRANTABLE</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     I campi di ordinamento delle righe risultanti sono TABLE_QUALIFIER, 
     TABLE_OWNER e TABLE_NAME.
    </simpara>
    <para>
     L'argomento <parameter>nome_colonna</parameter> accetta dei 
     criteri di ricerca ('%' per indicare zero o più
     caratteri e  '_' per indicare un singolo carattere).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-gettypeinfo">
   <refnamediv>
    <refname>odbc_gettypeinfo</refname>
    <refpurpose>
     Restituisce un identificatore di risultato contenente informazioni
     sui tipi di dati supportati dalla sorgente di dati.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_gettypeinfo</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>int <parameter><optional>tipo_dato</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Recupera informazioni sui tipi di dati supportati dalla 
     sorgente di dati. La funzione restituisce un identificatore 
     di risultato ODBC oppure &false; su errore.
     L'argomento opzionale <parameter>tipo_dato</parameter> può essere
     utilizzato per restringere l'informazione su un singolo tipo.
    </para>
    <para>
    Le righe risultanti dall'elaborazione contengono i seguenti campi:
     <itemizedlist>
      <listitem><simpara>TYPE_NAME</simpara></listitem>
      <listitem><simpara>DATA_TYPE</simpara></listitem>
      <listitem><simpara>PRECISION</simpara></listitem>
      <listitem><simpara>LITERAL_PREFIX</simpara></listitem>
      <listitem><simpara>LITERAL_SUFFIX</simpara></listitem>
      <listitem><simpara>CREATE_PARAMS</simpara></listitem>
      <listitem><simpara>NULLABLE</simpara></listitem>
      <listitem><simpara>CASE_SENSITIVE</simpara></listitem>
      <listitem><simpara>SEARCHABLE</simpara></listitem>
      <listitem><simpara>UNSIGNED_ATTRIBUTE</simpara></listitem>
      <listitem><simpara>MONEY</simpara></listitem>
      <listitem><simpara>AUTO_INCREMENT</simpara></listitem>
      <listitem><simpara>LOCAL_TYPE_NAME</simpara></listitem>
      <listitem><simpara>MINIMUM_SCALE</simpara></listitem>
      <listitem><simpara>MAXIMUM_SCALE</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>I campi di ordinamento delle righe risultanti sono DATA_TYPE e TYPE_NAME.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-primarykeys">
   <refnamediv>
    <refname>odbc_primarykeys</refname>
    <refpurpose>
     Restituisce un identificatore di risultato che può essere utilizzato 
     per ricavare il nome della colonna che contiene la chiave primaria della tabella.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_primarykeys</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter>qualifica</parameter></paramdef>
      <paramdef>string <parameter>proprietario</parameter></paramdef>
      <paramdef>string <parameter>tabella</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Restituisce il nome della colonna che contiene la chiave primaria
     per la tabella. La funzione ritorna un identificatore di risultato
     ODBC oppure &false; se si verifica un errore.
    </para>
    <para>
      Le righe risultanti dall'elaborazione contengono i seguenti campi:
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem>
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>COLUMN_NAME</simpara></listitem>
      <listitem><simpara>KEY_SEQ</simpara></listitem>
      <listitem><simpara>PK_NAME</simpara></listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-foreignkeys">
   <refnamediv>
    <refname>odbc_foreignkeys</refname>
    <refpurpose>
     Restituisce l'elenco delle chiavi esterne per la tabella indicata, 
     oppure la lista delle chiavi esterne in altre tabelle che fanno
     riferimento alla chiave primaria della tabella indicata.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_foreignkeys</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter>pk_qualifica</parameter></paramdef>
      <paramdef>string <parameter>pk_proprietario</parameter></paramdef>
      <paramdef>string <parameter>pk_tabella</parameter></paramdef>
      <paramdef>string <parameter>fk_qualifica</parameter></paramdef>
      <paramdef>string <parameter>fk_proprietario</parameter></paramdef>
      <paramdef>string <parameter>fk_tabella</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     La funzione <function>odbc_foreignkeys</function> ritorna informazioni sulle
     chiavi esterne. Restituisce un identificatore di risultato oppure 
     &false; se si verifica un errore.
    </para>
    <para>
      Le righe risultanti dall'elaborazione contengono i seguenti campi:
     <itemizedlist>
      <listitem><simpara>PKTABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>PKTABLE_OWNER</simpara></listitem>
      <listitem><simpara>PKTABLE_NAME</simpara></listitem>
      <listitem><simpara>PKCOLUMN_NAME</simpara></listitem>
      <listitem><simpara>FKTABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>FKTABLE_OWNER</simpara></listitem>
      <listitem><simpara>FKTABLE_NAME</simpara></listitem>
      <listitem><simpara>FKCOLUMN_NAME</simpara></listitem>
      <listitem><simpara>KEY_SEQ</simpara></listitem>
      <listitem><simpara>UPDATE_RULE</simpara></listitem>
      <listitem><simpara>DELETE_RULE</simpara></listitem>
      <listitem><simpara>FK_NAME</simpara></listitem>
      <listitem><simpara>PK_NAME</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     Se l'argomento <parameter>pk_tabella</parameter> contiene il nome di una tabella,
     la funzione <function>odbc_foreignkeys</function> ritorna una serie di righe
     contenenti i dati della chiave primaria della tabella e di tutte le chiavi esterne
     che hanno riferimenti a questa.
    </simpara>
    <simpara>
     Se l'argomento <parameter>fk_tabella</parameter> contiene il nome di una tabella,
     la funzione <function>odbc_foreignkeys</function> ritorna una serie di righe
     contenenti i dati delle chiavi esterne della tabella e delle chiavi primarie 
     ( di altre tabelle ) a cui queste hanno riferimenti.
    </simpara>
    <simpara>
     Se entrambi gli argomenti <parameter>pk_tabella</parameter> e
     <parameter>fk_tabella</parameter> contengono nomi di tabelle,
     <function>odbc_foreignkeys</function> restituisce le chiavi esterne
     della tabella specificata in  <parameter>fk_tabella</parameter> che hanno
     riferimenti alla chiave primaria della tabella indicata in
     <parameter>pk_tabella</parameter>. La funzione dovrebbe trovare almeno una chiave.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-procedures">
   <refnamediv>
    <refname>odbc_procedures</refname>
    <refpurpose>
     Restituisce l'elenco delle procedure memorizzate in una specifica sorgente di dati. 
     La funzione ritorna un identificatore di risultato che punta alle informazioni reperite.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_procedures</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter><optional>qualifica</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>proprietario</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>nome</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     Si ottiene l'elenco di tutte le procedure presenti nei limiti richiesti.
     La funzione restituisce un identificatore di risultato, oppure &false; su errore.
    </para>
    <para>
      Le righe risultanti dall'elaborazione contengono i seguenti campi:
     <itemizedlist>
      <listitem><simpara>PROCEDURE_QUALIFIER</simpara></listitem>
      <listitem><simpara>PROCEDURE_OWNER</simpara></listitem>
      <listitem><simpara>PROCEDURE_NAME</simpara></listitem>
      <listitem><simpara>NUM_INPUT_PARAMS</simpara></listitem>
      <listitem><simpara>NUM_OUTPUT_PARAMS</simpara></listitem>
      <listitem><simpara>NUM_RESULT_SETS</simpara></listitem>
      <listitem><simpara>REMARKS</simpara></listitem>
      <listitem><simpara>PROCEDURE_TYPE</simpara></listitem>
     </itemizedlist>
    </para>
    <para>
     Gli argomenti <parameter>proprietario</parameter> e <parameter>nome</parameter> 
     accettano dei criteri di ricerca ('%' per indicare zero o più
     caratteri e  '_' per indicare un singolo carattere).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-procedurecolumns">
   <refnamediv>
    <refname>odbc_procedurecolumns</refname>
    <refpurpose>
     Recupera informazioni sui parametri delle procedure.       
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_procedurecolumns</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter><optional>qualifica</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>proprietario</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>procedura</optional></parameter></paramdef>
      <paramdef>string <parameter><optional>colonna</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     La funzione ritorna la lista dei parametri di input e di output e anche
     delle colonne che concorrono al determinazione del risultato per le procedure
     indicate. Viene restituito un identificatore di risultato oppure &false; se si è un errore.
    </para>
    <para>
      Le righe risultanti dall'elaborazione contengono i seguenti campi:
     <itemizedlist>
      <listitem><simpara>PROCEDURE_QUALIFIER</simpara></listitem>
      <listitem><simpara>PROCEDURE_OWNER</simpara></listitem>
      <listitem><simpara>PROCEDURE_NAME</simpara></listitem>
      <listitem><simpara>COLUMN_NAME</simpara></listitem>
      <listitem><simpara>COLUMN_TYPE</simpara></listitem>
      <listitem><simpara>DATA_TYPE</simpara></listitem>
      <listitem><simpara>TYPE_NAME</simpara></listitem>
      <listitem><simpara>PRECISION</simpara></listitem>
      <listitem><simpara>LENGTH</simpara></listitem>
      <listitem><simpara>SCALE</simpara></listitem>
      <listitem><simpara>RADIX</simpara></listitem>
      <listitem><simpara>NULLABLE</simpara></listitem>
      <listitem><simpara>REMARKS</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>I campi di ordinamento delle righe risultanti sono PROCEDURE_QUALIFIER, PROCEDURE_OWNER,
     PROCEDURE_NAME e COLUMN_TYPE.
    </simpara>
    <para>
     Gli argomenti <parameter>proprietario</parameter>, <parameter>procedura</parameter> 
     e <parameter>colonna</parameter> accettano dei 
     criteri di ricerca ('%' per indicare zero o più
     caratteri e  '_' per indicare un singolo carattere).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-specialcolumns">
   <refnamediv>
    <refname>odbc_specialcolumns</refname>
    <refpurpose>
     Restituisce sia il set di colonne che identificano in modo univoco
     una riga nella tabella, sia colonne che sono automaticamente
     aggiornate quando un qualsiasi campo della riga viene aggiornato da una transazione.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_specialcolumns</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>int <parameter>tipo</parameter></paramdef>
      <paramdef>string <parameter>qualifica</parameter></paramdef>
      <paramdef>string <parameter>proprietario</parameter></paramdef>
      <paramdef>string <parameter>tabella</parameter></paramdef>
      <paramdef>int <parameter>visibilità</parameter></paramdef>
      <paramdef>int <parameter>nullable</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Quando l'argomento tipo è impostato a SQL_BEST_ROWID,
     <function>odbc_specialcolumns</function> restituisce la colonna
     o le colonne che identificano in modo univoco ciascuna riga nella tabella.
    </simpara>
    <simpara>
     Quando l'argomento tipo è impostato a SQL_ROWVER, 
     <function>odbc_specialcolumns</function> restituisce la colonna
     o il set di colonne ottimali, attraverso cui, ottenendo i valori 
     da dette colonne, è possibile identificare in modo univoco ciascun record
     della tabella indicata.
    </simpara>
    <simpara>
     La funzione restituisce un identificatore di risultato ODBC, 
     oppure &false; su errore.
    </simpara>
    <para>
     Le righe risultanti dall'elaborazione contengono i seguenti campi:
     <itemizedlist>
      <listitem><simpara>SCOPE</simpara></listitem>
      <listitem><simpara>COLUMN_NAME</simpara></listitem>
      <listitem><simpara>DATA_TYPE</simpara></listitem>
      <listitem><simpara>TYPE_NAME</simpara></listitem>
      <listitem><simpara>PRECISION</simpara></listitem>
      <listitem><simpara>LENGTH</simpara></listitem>
      <listitem><simpara>SCALE</simpara></listitem>
      <listitem><simpara>PSEUDO_COLUMN</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     Le righe del risultato sono ordinate in base alla colonna SCOPE.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-statistics">
   <refnamediv>
    <refname>odbc_statistics</refname>
    <refpurpose>Recupera informazioni statistiche sulla tabella</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_statistics</function></funcdef>
      <paramdef>int <parameter>id_connessione</parameter></paramdef>
      <paramdef>string <parameter>qualifica</parameter></paramdef>
      <paramdef>string <parameter>proprietario</parameter></paramdef>
      <paramdef>string <parameter>nome_tabella</parameter></paramdef>
      <paramdef>int <parameter>unico</parameter></paramdef>
      <paramdef>int <parameter>precisione</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Si ottengono informazioni statistiche sulla tabella e i propri indici. La funzione restituisce 
     un identificatore di risultato ODBC,  oppure &false; su errore.
    </para>
    <para>
     Le righe risultanti dall'elaborazione contengono i seguenti campi:
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem>
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>NON_UNIQUE</simpara></listitem>
      <listitem><simpara>INDEX_QUALIFIER</simpara></listitem>
      <listitem><simpara>INDEX_NAME</simpara></listitem>
      <listitem><simpara>TYPE</simpara></listitem>
      <listitem><simpara>SEQ_IN_INDEX</simpara></listitem>
      <listitem><simpara>COLUMN_NAME</simpara></listitem>
      <listitem><simpara>COLLATION</simpara></listitem>
      <listitem><simpara>CARDINALITY</simpara></listitem>
      <listitem><simpara>PAGES</simpara></listitem>
      <listitem><simpara>FILTER_CONDITION</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     I campi di ordinamento delle righe risultanti sono NON_UNIQUE, TYPE, INDEX_QUALIFIER,
     INDEX_NAME e SEQ_IN_INDEX.
    </simpara>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

