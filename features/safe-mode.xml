<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.17 Maintainer: cucinato Status: working -->
<!-- CREDITS: perugini -->
 <chapter xml:id="features.safe-mode" xmlns="http://docbook.org/ns/docbook">
  <title>Modalità sicura (Safe mode)</title>

  <para>
   La modalità Safe Mode è un tentativo di risolvere il problema di sicurezza 
   derivante dalla condivisione del server. Dal punto di vista architetturale
   non è corretto cercare di risolvere questo problema al livello del PHP, ma
   poiché le alternative al livello del web server e del SO (Sistema Operativo)
   non sono realistiche, in molti, specialmente ISP (Internet Service Provider),
   utilizzano la modalità sicura. 
  </para>

  <sect1 xml:id="ini.sect.safe-mode">
   <title>Security and Safe Mode</title>
   <para>
    <table>
     <title>Direttive di configurazione della Modalità sicura e Sdella icurezza</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>Nome</entry>
        <entry>Default</entry>
        <entry>Changeable</entry>
        <entry>Changelog</entry>
       </row>
      </thead>
      <tbody>
      <row>
       <entry>safe_mode</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry>safe_mode_gid</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponibile dal PHP 4.1.0.</entry>
      </row>
      <row>
       <entry>safe_mode_include_dir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponibile dal PHP 4.1.0.</entry>
      </row>
      <row>
       <entry>safe_mode_exec_dir</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry>safe_mode_allowed_env_vars</entry>
       <entry>"PHP_"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry>safe_mode_protected_env_vars</entry>
       <entry>"LD_LIBRARY_PATH"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry>open_basedir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry>disable_functions</entry>
       <entry>""</entry>
       <entry>&php.ini; only</entry>
       <entry>Disponibile dal PHP 4.0.1.</entry>
      </row>
      <row>
       <entry>disable_classes</entry>
       <entry>""</entry>
       <entry>&php.ini; only</entry>
       <entry>Disponibile dal PHP 4.3.2.</entry>
      </row>
      </tbody>
     </tgroup>
    </table>
    Per ulteriori dettagli e definizione delle costanti PHP_INI_* vedere
    <function>ini_set</function>.
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.safe-mode">
      <term>
       <parameter>safe_mode</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Abilita o disabilita la modalit&agrave; sicura di PHP's. Leggere il
        capitolo <link linkend="security">Sicurezza</link> per ulteriori
        informazioni.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-gid">
      <term>
       <parameter>safe_mode_gid</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Di default, Safe Mode does a UID compare check when
        opening files. If you want to relax this to a GID compare,
        then turn on safe_mode_gid.
        Whether to use <literal>UID</literal> (&false;) or
        <literal>GID</literal> (&true;) checking upon file
        access.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-include-dir">
      <term>
       <parameter>safe_mode_include_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        <literal>UID</literal>/<literal>GID</literal> checks are bypassed when
        including files from this directory and its subdirectories (directory
        must also be in <link linkend="ini.include-path">include_path</link>
        or full path must including).
       </para>
       <simpara>
        As of PHP 4.2.0, this directive can take a colon (semi-colon on
        Windows) separated path in a fashion similar to the
        <link linkend="ini.include-path">include_path</link> directive,
        rather than just a single directory.
       </simpara>
       <simpara>
        The restriction specified is actually a prefix, not a directory name. 
        This means that "safe_mode_include_dir = /dir/incl" also allows
        access to "/dir/include" and "/dir/incls" if they exist.  When you 
        want to restrict access to only the specified directory, end with a 
        slash. For example: "safe_mode_include_dir = /dir/incl/"
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-exec-dir">
      <term>
       <parameter>safe_mode_exec_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        If PHP is used in safe mode, <function>system</function> and the other
        <link linkend="ref.exec">functions executing system programs</link>
        refuse to start programs that are not in this directory.
        You have to use <literal>/</literal> as directory separator on all
        environments including Windows.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-allowed-env-vars">
      <term>
       <parameter>safe_mode_allowed_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Setting certain environment variables may be a potential security breach.
        This directive contains a comma-delimited list of prefixes. In Safe Mode,
        the user may only alter environment variables whose names begin with the
        prefixes supplied here. By default, users will only be able to set
        environment variables that begin with PHP_ (e.g. PHP_FOO=BAR).
       </para>
       <note>
        <para>
         If this directive is empty, PHP will let the user modify ANY
         environment variable!
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-protected-env-vars">
      <term>
       <parameter>safe_mode_protected_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        This directive contains a comma-delimited list of environment
        variables that the end user won't be able to change using
        <function>putenv</function>. These variables will be protected
        even if safe_mode_allowed_env_vars is set to allow to change them.
       </para>
      </listitem>
     </varlistentry>
      <varlistentry xml:id="ini.open-basedir">
      <term>
       <parameter>open_basedir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Limit the files that can be opened by PHP to the specified
        directory-tree, including the file itself.  This directive 
        is <emphasis>NOT</emphasis> affected by whether Safe Mode is 
        turned On or Off.
       </para>
       <para>
        When a script tries to open a file with, for example,
        <function>fopen</function> or <function>gzopen</function>,
        the location of the file is checked. When the file is outside the
        specified directory-tree, PHP will refuse to open it. All symbolic
        links are resolved, so it's not possible to avoid this restriction
        with a symlink.
       </para>
       <para>
        The special value <constant>.</constant>
        indicates that the working directory of the script will be used as the
        base-directory. This is, however, a little dangerous as the working directory
        of the script can easily be changed with <function>chdir</function>.
       </para>
       <para>
        In <filename>httpd.conf</filename>, open_basedir can be turned off
        (e.g. for some virtual hosts)
        <link linkend="configuration.changes.apache">the same way</link> as
        any other configuration directive with "php_admin_value open_basedir
        none".
       </para>
       <para>
        Under Windows, separate the directories with a semicolon. On all
        other systems, separate the directories with a colon. As an Apache
        module, open_basedir paths from parent directories are now
        automatically inherited.
       </para>
       <para>
         The restriction specified with open_basedir is actually a
         prefix, not a directory name.  This means that "open_basedir =
         /dir/incl" also allows access to "/dir/include" and
         "/dir/incls" if they exist. When you want to restrict access
         to only the specified directory, end with a slash. For example:
         "open_basedir = /dir/incl/"
       </para>
       <note>
        <para>
         Support for multiple directories was added in 3.0.7.
        </para>
       </note>
       <para>
        The default is to allow all files to be opened.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.disable-functions">
      <term>
       <parameter>disable_functions</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        This directive allows you to disable certain functions for 
        <link linkend="security">security</link> reasons. It takes 
        on a comma-delimited list of function names. disable_functions
        is not affected by <link linkend="ini.safe-mode">Safe Mode</link>.
       </simpara>
       <simpara>
        This directive must be set in &php.ini; For example, you 
        cannot set this in &httpd.conf;.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.disable-classes">
      <term>
       <parameter>disable_classes</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        This directive allows you to disable certain classes for
        <link linkend="security">security</link> reasons.  It takes
        on a comma-delimited list of class names.  disable_classes
        is not affected by <link linkend="ini.safe-mode">Safe Mode</link>.
       </simpara>
       <simpara>
        This directive must be set in &php.ini;  For example, you
        cannot set this in &httpd.conf;.
       </simpara>
       <note>
        <title>Availability note</title>
        <simpara>
         This directive became available in PHP 4.3.2
        </simpara>
       </note>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    See also: <link linkend="ini.register-globals">register_globals</link>,
    <link linkend="ini.display-errors">display_errors</link>, and
    <link linkend="ini.log-errors">log_errors</link>
   </para>

  <para>
   Le direttive di configurazione che controllano la modalità sicura sono:
   <programlisting role="ini">
<![CDATA[
safe_mode = Off 
open_basedir = 
safe_mode_exec_dir = 
safe_mode_allowed_env_vars = PHP_ 
safe_mode_protected_env_vars = LD_LIBRARY_PATH 
disable_functions = 
]]>
   </programlisting>
  </para>
  <para>
   Quando <link linkend="ini.safe-mode">safe_mode</link> è attiva (on), il PHP
   verifica se il proprietario dello 
   script in esecuzione e il proprietario del file su cui si sta operando con
   una funzione sui file, coincidono. Per esempio:
   <programlisting role="ls">
<![CDATA[
-rw-rw-r--    1 rasmus   rasmus       33 Jul  1 19:20 script.php 
-rw-r--r--    1 root     root       1116 May 26 18:01 /etc/passwd 
]]>
   </programlisting>
   Eseguendo questo script.php
   <programlisting role="php">
<![CDATA[
<?php
 readfile('/etc/passwd'); 
?>
]]>
   </programlisting>
   results in this error when Safe Mode is enabled: 
   <screen>
<![CDATA[
Warning: SAFE MODE Restriction in effect. The script whose uid is 500 is not 
allowed to access /etc/passwd owned by uid 0 in /docroot/script.php on line 2
]]>
   </screen>
  </para>
  <para>
   Se, invece di <link linkend="ini.safe-mode">safe_mode</link>, viene definita 
   una directory open_basedir allora tutte le operazioni sui file saranno limitate ai file
   sottostanti la directory specificata. Per esempio (nel file httpd.conf di Apache):
   <programlisting role="ini">
<![CDATA[
<Directory /docroot>
  php_admin_value open_basedir /docroot 
</Directory>
]]>
   </programlisting>
   If you run the same script.php with this open_basedir setting then this is 
   the result: 
   <screen>
<![CDATA[
Warning: open_basedir restriction in effect. File is in wrong directory in 
/docroot/script.php on line 2 
]]>
   </screen>
  </para>
  <para>
   &Egrave; possibile inoltre disabilitare le singole funzioni. Se si aggiunge
   la seguente riga al file php.ini:
   <programlisting role="ini">
<![CDATA[
disable_functions readfile,system  
]]>
   </programlisting>
   Then we get this output: 
   <screen>
<![CDATA[
Warning: readfile() has been disabled for security reasons in 
/docroot/script.php on line 2 
]]>
   </screen>
  </para>
 </sect1>

  <sect1 xml:id="features.safe-mode.functions">
   <title>Funzioni limitate/disabilitate dalla modalità sicura (safe-mode)</title>
   <para>
    Questo è un elenco probabilmente ancora incompleto e forse non esatto delle
    funzioni limitate da
    <link linkend="features.safe-mode">Safe Mode</link>.
    <!-- TODO: add &note.sm.*; to the functions mentioned here.
    That entity should link to this section -->
    <table>
     <title>Funzioni limitate dalla modalità sicura</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Funzioni</entry>
        <entry>Limitazioni</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><function>dbmopen</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>dbase_open</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_rowcount</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_retrieve</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>ifx_*</function></entry>
        <entry>sql_safe_mode restrictions, (!= Safe Mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry><function>ingres_*</function></entry>
        <entry>sql_safe_mode restrictions, (!= Safe Mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry><function>mysql_*</function></entry>
        <entry>sql_safe_mode restrictions, (!= Safe Mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry><function>pg_loimport</function></entry>
        <entry>&sm.uidcheck;</entry>
        <!-- source TODO: there is no PHP-warning for that safe-mode-restriction -->
       </row>
       <row>
        <entry><function>posix_mkfifo</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>putenv</function></entry>
        <entry>Obbedisce le direttive del file ini safe_mode_protected_env_vars e 
        safe_mode_allowed_env_vars. Vedere la documentazione relativa
        on <function>putenv</function></entry>
        <!-- TODO: document those directives in chapters/config.xml -->
       </row>
       <row>
        <entry><function>move_uploaded_file</function></entry>
        <entry>&sm.uidcheck; <!-- TODO: check this --></entry>
       </row>

       <!-- TODO: from here on, add warning to the function itself -->

       <row>
        <entry><function>chdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>dl</function></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><link linkend="language.operators.execution">backtick operator</link></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>shell_exec</function> (functional equivalent 
        of backticks)</entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>exec</function></entry>
        <entry>You can only execute executables within the <link 
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        For practical reasons it's currently not allowed to have
        <literal>..</literal> components in the path to the executable.</entry>
       </row>
       <row>
        <entry><function>system</function></entry>
        <entry>You can only execute executables within the <link 
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        For practical reasons it's currently not allowed to have
        <literal>..</literal> components in the path to the executable.</entry>
       </row>
       <row>
        <entry><function>passthru</function></entry>
        <entry>You can only execute executables within the <link 
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        For practical reasons it's currently not allowed to have
        <literal>..</literal> components in the path to the executable.</entry>
       </row>
       <row>
        <entry><function>popen</function></entry>
        <entry>You can only execute executables within the <link 
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        For practical reasons it's currently not allowed to have
        <literal>..</literal> components in the path to the executable.</entry>
        <!-- TODO: not sure. popen uses a completely different implementation
        Don't know why, don't know whether it's behaving the same -->
       </row>
       <row>
        <entry><function>mkdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rmdir</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>rename</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;<!-- on the old name only, it seems. Is rename preventing moving files? --></entry>
       </row>
       <row>
        <entry><function>unlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>copy</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (on 
        <parameter>source</parameter> and 
        <parameter>target</parameter>) </entry>
       </row>
       <row>
        <entry><function>chgrp</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chown</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chmod</function></entry>
        <entry>&sm.uidcheck; In addition, you cannot  
        set the SUID, SGID and sticky bits</entry>
       </row>
       <row>
        <entry><function>touch</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>symlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (note: only the target is 
        checked)</entry>
       </row>
       <row>
        <entry><function>link</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (note: only the target is 
        checked)</entry>
       </row>
       <row>
        <entry><function>getallheaders</function></entry>
        <entry>In Safe Mode, headers beginning with 'authorization' 
        (case-insensitive)
        will not be returned. Warning: this is broken with the aol-server
        implementation of <function>getallheaders</function>!</entry>
       </row>
       <row>
        <entry>Qualsiasi funzione che utilizza 
         <filename>php4/main/fopen_wrappers.c</filename>
        </entry>
        <entry>??</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
